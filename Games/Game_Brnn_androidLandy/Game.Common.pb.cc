// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.Message.proto

#include "Common.Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Common {
class PlaceJetInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaceJetInfo>
      _instance;
} _PlaceJetInfo_default_instance_;
class PlaceJettonScoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaceJettonScore>
      _instance;
} _PlaceJettonScore_default_instance_;
class GameDeskInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameDeskInfo>
      _instance;
} _GameDeskInfo_default_instance_;
class CMD_S_SyncJetAreaScoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_SyncJetAreaScore>
      _instance;
} _CMD_S_SyncJetAreaScore_default_instance_;
class CMD_Scene_StatusFreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_Scene_StatusFree>
      _instance;
} _CMD_Scene_StatusFree_default_instance_;
class CMD_S_StartPlaceJettonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_StartPlaceJetton>
      _instance;
} _CMD_S_StartPlaceJetton_default_instance_;
class CMD_S_GameStartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_GameStart>
      _instance;
} _CMD_S_GameStart_default_instance_;
class PlayerScoreValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerScoreValue>
      _instance;
} _PlayerScoreValue_default_instance_;
class CMD_S_GameEndDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_GameEnd>
      _instance;
} _CMD_S_GameEnd_default_instance_;
class CMD_S_BankerApplyEndDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_BankerApplyEnd>
      _instance;
} _CMD_S_BankerApplyEnd_default_instance_;
class CMD_S_JettonEndDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_JettonEnd>
      _instance;
} _CMD_S_JettonEnd_default_instance_;
class CMD_S_OpenCardEndDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_OpenCardEnd>
      _instance;
} _CMD_S_OpenCardEnd_default_instance_;
class CMD_S_User_Get_CardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_User_Get_Card>
      _instance;
} _CMD_S_User_Get_Card_default_instance_;
class CMD_S_User_Out_CardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_User_Out_Card>
      _instance;
} _CMD_S_User_Out_Card_default_instance_;
class CMD_S_Open_cardSuceesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_Open_cardSucees>
      _instance;
} _CMD_S_Open_cardSucees_default_instance_;
class CMD_C_Out_Card_ReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_C_Out_Card_Req>
      _instance;
} _CMD_C_Out_Card_Req_default_instance_;
class CMD_C_SyncGameDesk_ReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_C_SyncGameDesk_Req>
      _instance;
} _CMD_C_SyncGameDesk_Req_default_instance_;
class CMD_S_Out_Card_AckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_Out_Card_Ack>
      _instance;
} _CMD_S_Out_Card_Ack_default_instance_;
class CMD_C_PlaceJetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_C_PlaceJet>
      _instance;
} _CMD_C_PlaceJet_default_instance_;
class CMD_S_PlaceJettonFailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_PlaceJettonFail>
      _instance;
} _CMD_S_PlaceJettonFail_default_instance_;
class CMD_S_PlaceJetSuccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_PlaceJetSuccess>
      _instance;
} _CMD_S_PlaceJetSuccess_default_instance_;
class CMD_S_ApplyBankerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_ApplyBanker>
      _instance;
} _CMD_S_ApplyBanker_default_instance_;
class CMD_S_ApplyBankerSuccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_ApplyBankerSuccess>
      _instance;
} _CMD_S_ApplyBankerSuccess_default_instance_;
class CMD_S_ApplyBanker_FailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_ApplyBanker_Fail>
      _instance;
} _CMD_S_ApplyBanker_Fail_default_instance_;
class CMD_S_OpenCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_OpenCard>
      _instance;
} _CMD_S_OpenCard_default_instance_;
class CMD_S_CancelBankerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_CancelBanker>
      _instance;
} _CMD_S_CancelBanker_default_instance_;
class CMD_S_CancelBanker_FailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_CancelBanker_Fail>
      _instance;
} _CMD_S_CancelBanker_Fail_default_instance_;
class CMD_S_ChangeBankerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_ChangeBanker>
      _instance;
} _CMD_S_ChangeBanker_default_instance_;
class CMD_C_PlayerListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_C_PlayerList>
      _instance;
} _CMD_C_PlayerList_default_instance_;
class PlayerListItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerListItem>
      _instance;
} _PlayerListItem_default_instance_;
class CMD_S_User_EnterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_User_Enter>
      _instance;
} _CMD_S_User_Enter_default_instance_;
class CMD_S_User_LeaveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_User_Leave>
      _instance;
} _CMD_S_User_Leave_default_instance_;
class CMD_S_User_RedayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_User_Reday>
      _instance;
} _CMD_S_User_Reday_default_instance_;
class CMD_S_PlayerListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMD_S_PlayerList>
      _instance;
} _CMD_S_PlayerList_default_instance_;
class CardGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardGroup>
      _instance;
} _CardGroup_default_instance_;
}  // namespace Common
namespace protobuf_Common_2eMessage_2eproto {
void InitDefaultsPlaceJetInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_PlaceJetInfo_default_instance_;
    new (ptr) ::Common::PlaceJetInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::PlaceJetInfo::InitAsDefaultInstance();
}

void InitDefaultsPlaceJetInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlaceJetInfoImpl);
}

void InitDefaultsPlaceJettonScoreImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_PlaceJettonScore_default_instance_;
    new (ptr) ::Common::PlaceJettonScore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::PlaceJettonScore::InitAsDefaultInstance();
}

void InitDefaultsPlaceJettonScore() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlaceJettonScoreImpl);
}

void InitDefaultsGameDeskInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJettonScore();
  protobuf_Common_2eMessage_2eproto::InitDefaultsCardGroup();
  protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerListItem();
  protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJetInfo();
  {
    void* ptr = &::Common::_GameDeskInfo_default_instance_;
    new (ptr) ::Common::GameDeskInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::GameDeskInfo::InitAsDefaultInstance();
}

void InitDefaultsGameDeskInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameDeskInfoImpl);
}

void InitDefaultsCMD_S_SyncJetAreaScoreImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJettonScore();
  {
    void* ptr = &::Common::_CMD_S_SyncJetAreaScore_default_instance_;
    new (ptr) ::Common::CMD_S_SyncJetAreaScore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_SyncJetAreaScore::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_SyncJetAreaScore() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_SyncJetAreaScoreImpl);
}

void InitDefaultsCMD_Scene_StatusFreeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  {
    void* ptr = &::Common::_CMD_Scene_StatusFree_default_instance_;
    new (ptr) ::Common::CMD_Scene_StatusFree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_Scene_StatusFree::InitAsDefaultInstance();
}

void InitDefaultsCMD_Scene_StatusFree() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_Scene_StatusFreeImpl);
}

void InitDefaultsCMD_S_StartPlaceJettonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  {
    void* ptr = &::Common::_CMD_S_StartPlaceJetton_default_instance_;
    new (ptr) ::Common::CMD_S_StartPlaceJetton();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_StartPlaceJetton::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_StartPlaceJetton() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_StartPlaceJettonImpl);
}

void InitDefaultsCMD_S_GameStartImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  {
    void* ptr = &::Common::_CMD_S_GameStart_default_instance_;
    new (ptr) ::Common::CMD_S_GameStart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_GameStart::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_GameStart() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_GameStartImpl);
}

void InitDefaultsPlayerScoreValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_PlayerScoreValue_default_instance_;
    new (ptr) ::Common::PlayerScoreValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::PlayerScoreValue::InitAsDefaultInstance();
}

void InitDefaultsPlayerScoreValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerScoreValueImpl);
}

void InitDefaultsCMD_S_GameEndImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerScoreValue();
  {
    void* ptr = &::Common::_CMD_S_GameEnd_default_instance_;
    new (ptr) ::Common::CMD_S_GameEnd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_GameEnd::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_GameEnd() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_GameEndImpl);
}

void InitDefaultsCMD_S_BankerApplyEndImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  {
    void* ptr = &::Common::_CMD_S_BankerApplyEnd_default_instance_;
    new (ptr) ::Common::CMD_S_BankerApplyEnd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_BankerApplyEnd::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_BankerApplyEnd() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_BankerApplyEndImpl);
}

void InitDefaultsCMD_S_JettonEndImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  {
    void* ptr = &::Common::_CMD_S_JettonEnd_default_instance_;
    new (ptr) ::Common::CMD_S_JettonEnd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_JettonEnd::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_JettonEnd() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_JettonEndImpl);
}

void InitDefaultsCMD_S_OpenCardEndImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  {
    void* ptr = &::Common::_CMD_S_OpenCardEnd_default_instance_;
    new (ptr) ::Common::CMD_S_OpenCardEnd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_OpenCardEnd::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_OpenCardEnd() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_OpenCardEndImpl);
}

void InitDefaultsCMD_S_User_Get_CardImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_User_Get_Card_default_instance_;
    new (ptr) ::Common::CMD_S_User_Get_Card();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_User_Get_Card::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_User_Get_Card() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_User_Get_CardImpl);
}

void InitDefaultsCMD_S_User_Out_CardImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_User_Out_Card_default_instance_;
    new (ptr) ::Common::CMD_S_User_Out_Card();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_User_Out_Card::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_User_Out_Card() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_User_Out_CardImpl);
}

void InitDefaultsCMD_S_Open_cardSuceesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerListItem();
  {
    void* ptr = &::Common::_CMD_S_Open_cardSucees_default_instance_;
    new (ptr) ::Common::CMD_S_Open_cardSucees();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_Open_cardSucees::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_Open_cardSucees() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_Open_cardSuceesImpl);
}

void InitDefaultsCMD_C_Out_Card_ReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_C_Out_Card_Req_default_instance_;
    new (ptr) ::Common::CMD_C_Out_Card_Req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_C_Out_Card_Req::InitAsDefaultInstance();
}

void InitDefaultsCMD_C_Out_Card_Req() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_C_Out_Card_ReqImpl);
}

void InitDefaultsCMD_C_SyncGameDesk_ReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_C_SyncGameDesk_Req_default_instance_;
    new (ptr) ::Common::CMD_C_SyncGameDesk_Req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_C_SyncGameDesk_Req::InitAsDefaultInstance();
}

void InitDefaultsCMD_C_SyncGameDesk_Req() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_C_SyncGameDesk_ReqImpl);
}

void InitDefaultsCMD_S_Out_Card_AckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_Out_Card_Ack_default_instance_;
    new (ptr) ::Common::CMD_S_Out_Card_Ack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_Out_Card_Ack::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_Out_Card_Ack() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_Out_Card_AckImpl);
}

void InitDefaultsCMD_C_PlaceJetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_C_PlaceJet_default_instance_;
    new (ptr) ::Common::CMD_C_PlaceJet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_C_PlaceJet::InitAsDefaultInstance();
}

void InitDefaultsCMD_C_PlaceJet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_C_PlaceJetImpl);
}

void InitDefaultsCMD_S_PlaceJettonFailImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_PlaceJettonFail_default_instance_;
    new (ptr) ::Common::CMD_S_PlaceJettonFail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_PlaceJettonFail::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_PlaceJettonFail() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_PlaceJettonFailImpl);
}

void InitDefaultsCMD_S_PlaceJetSuccessImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJettonScore();
  {
    void* ptr = &::Common::_CMD_S_PlaceJetSuccess_default_instance_;
    new (ptr) ::Common::CMD_S_PlaceJetSuccess();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_PlaceJetSuccess::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_PlaceJetSuccess() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_PlaceJetSuccessImpl);
}

void InitDefaultsCMD_S_ApplyBankerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_ApplyBanker_default_instance_;
    new (ptr) ::Common::CMD_S_ApplyBanker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_ApplyBanker::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_ApplyBanker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_ApplyBankerImpl);
}

void InitDefaultsCMD_S_ApplyBankerSuccessImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerListItem();
  {
    void* ptr = &::Common::_CMD_S_ApplyBankerSuccess_default_instance_;
    new (ptr) ::Common::CMD_S_ApplyBankerSuccess();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_ApplyBankerSuccess::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_ApplyBankerSuccess() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_ApplyBankerSuccessImpl);
}

void InitDefaultsCMD_S_ApplyBanker_FailImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_ApplyBanker_Fail_default_instance_;
    new (ptr) ::Common::CMD_S_ApplyBanker_Fail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_ApplyBanker_Fail::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_ApplyBanker_Fail() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_ApplyBanker_FailImpl);
}

void InitDefaultsCMD_S_OpenCardImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_OpenCard_default_instance_;
    new (ptr) ::Common::CMD_S_OpenCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_OpenCard::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_OpenCard() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_OpenCardImpl);
}

void InitDefaultsCMD_S_CancelBankerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_CancelBanker_default_instance_;
    new (ptr) ::Common::CMD_S_CancelBanker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_CancelBanker::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_CancelBanker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_CancelBankerImpl);
}

void InitDefaultsCMD_S_CancelBanker_FailImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_CancelBanker_Fail_default_instance_;
    new (ptr) ::Common::CMD_S_CancelBanker_Fail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_CancelBanker_Fail::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_CancelBanker_Fail() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_CancelBanker_FailImpl);
}

void InitDefaultsCMD_S_ChangeBankerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_ChangeBanker_default_instance_;
    new (ptr) ::Common::CMD_S_ChangeBanker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_ChangeBanker::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_ChangeBanker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_ChangeBankerImpl);
}

void InitDefaultsCMD_C_PlayerListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_C_PlayerList_default_instance_;
    new (ptr) ::Common::CMD_C_PlayerList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_C_PlayerList::InitAsDefaultInstance();
}

void InitDefaultsCMD_C_PlayerList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_C_PlayerListImpl);
}

void InitDefaultsPlayerListItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_PlayerListItem_default_instance_;
    new (ptr) ::Common::PlayerListItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::PlayerListItem::InitAsDefaultInstance();
}

void InitDefaultsPlayerListItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerListItemImpl);
}

void InitDefaultsCMD_S_User_EnterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  {
    void* ptr = &::Common::_CMD_S_User_Enter_default_instance_;
    new (ptr) ::Common::CMD_S_User_Enter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_User_Enter::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_User_Enter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_User_EnterImpl);
}

void InitDefaultsCMD_S_User_LeaveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  {
    void* ptr = &::Common::_CMD_S_User_Leave_default_instance_;
    new (ptr) ::Common::CMD_S_User_Leave();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_User_Leave::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_User_Leave() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_User_LeaveImpl);
}

void InitDefaultsCMD_S_User_RedayImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CMD_S_User_Reday_default_instance_;
    new (ptr) ::Common::CMD_S_User_Reday();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_User_Reday::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_User_Reday() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_User_RedayImpl);
}

void InitDefaultsCMD_S_PlayerListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerListItem();
  {
    void* ptr = &::Common::_CMD_S_PlayerList_default_instance_;
    new (ptr) ::Common::CMD_S_PlayerList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CMD_S_PlayerList::InitAsDefaultInstance();
}

void InitDefaultsCMD_S_PlayerList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMD_S_PlayerListImpl);
}

void InitDefaultsCardGroupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Common::_CardGroup_default_instance_;
    new (ptr) ::Common::CardGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Common::CardGroup::InitAsDefaultInstance();
}

void InitDefaultsCardGroup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCardGroupImpl);
}

::google::protobuf::Metadata file_level_metadata[35];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJetInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJetInfo, ljettontype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJetInfo, ljettoncount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJetInfo, ljettonarea_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJettonScore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJettonScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJettonScore, dwuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJettonScore, ljettonscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlaceJettonScore, ljettonarea_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, lalljettonscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, selfjettonscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, divinejettonscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, lapplybankercondition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, larealimitscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, wbankerchairid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, cbbankertime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, lbankerwinscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, lbankerscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, benablesysbanker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, szgameroomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, wintag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, wincardgrouptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, jetinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::GameDeskInfo, lonlinepopulation_),
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  ~0u,
  ~0u,
  3,
  4,
  5,
  6,
  7,
  0,
  ~0u,
  ~0u,
  ~0u,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_SyncJetAreaScore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_SyncJetAreaScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_SyncJetAreaScore, alljettonscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_SyncJetAreaScore, selfjettonscore_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_Scene_StatusFree, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_Scene_StatusFree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_Scene_StatusFree, deskdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_Scene_StatusFree, cbtimeleave_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_Scene_StatusFree, lusermaxscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_Scene_StatusFree, luserscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_Scene_StatusFree, szgameroomname_),
  1,
  4,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_StartPlaceJetton, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_StartPlaceJetton, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_StartPlaceJetton, deskdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_StartPlaceJetton, cbplacetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_StartPlaceJetton, cbtimeleave_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_StartPlaceJetton, lusermaxscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_StartPlaceJetton, luserscore_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameStart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameStart, deskdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameStart, cbtimeleave_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameStart, nchiprobotcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameStart, lusermaxscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameStart, luserscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameStart, nroundcount_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerScoreValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerScoreValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerScoreValue, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerScoreValue, returnscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerScoreValue, userscore_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameEnd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameEnd, deskdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameEnd, cbtimeleave_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameEnd, gameendscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameEnd, lusermaxscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameEnd, luserscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_GameEnd, lrevenue_),
  0,
  4,
  ~0u,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_BankerApplyEnd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_BankerApplyEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_BankerApplyEnd, deskdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_BankerApplyEnd, cbtimeleave_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_JettonEnd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_JettonEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_JettonEnd, deskdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_JettonEnd, cbtimeleave_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_OpenCardEnd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_OpenCardEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_OpenCardEnd, deskdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_OpenCardEnd, cbtimeleave_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Get_Card, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Get_Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Get_Card, dwuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Get_Card, cards_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Out_Card, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Out_Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Out_Card, dwuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Out_Card, cards_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_Open_cardSucees, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_Open_cardSucees, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_Open_cardSucees, players_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_Out_Card_Req, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_Out_Card_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_Out_Card_Req, dwuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_Out_Card_Req, cards_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_SyncGameDesk_Req, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_SyncGameDesk_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_Out_Card_Ack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_Out_Card_Ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_Out_Card_Ack, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_Out_Card_Ack, errormsg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_PlaceJet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_PlaceJet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_PlaceJet, cbjettonarea_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_PlaceJet, ljettonscore_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJettonFail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJettonFail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJettonFail, dwuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJettonFail, cbjettonarea_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJettonFail, lplacescore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJettonFail, cbandroid_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJetSuccess, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJetSuccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJetSuccess, dwuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJetSuccess, cbjettonarea_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJetSuccess, ljettonscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJetSuccess, bisandroid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJetSuccess, luserscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJetSuccess, alljettonscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlaceJetSuccess, selfjettonscore_),
  0,
  1,
  2,
  4,
  3,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBanker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBanker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBanker, wapplychairid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBanker, lapplymulti_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBankerSuccess, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBankerSuccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBankerSuccess, players_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBanker_Fail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBanker_Fail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBanker_Fail, nerrorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ApplyBanker_Fail, szerrormessage_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_OpenCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_OpenCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_OpenCard, wapplychairid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_OpenCard, wapplyuserid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_CancelBanker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_CancelBanker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_CancelBanker, dwuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_CancelBanker, szcanceluser_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_CancelBanker_Fail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_CancelBanker_Fail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_CancelBanker_Fail, nerrorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_CancelBanker_Fail, szerrormessage_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ChangeBanker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ChangeBanker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ChangeBanker, wbankerchairid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_ChangeBanker, lbankerscore_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_PlayerList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_PlayerList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_PlayerList, nlimitcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_C_PlayerList, nbeginindex_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, dwuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, headerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, nviplevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, luserscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, ltwentywinscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, ltwentywincount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, isdivinemath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, isbanker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, isapplybanker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, applybankermulti_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, ljetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::PlayerListItem, szlocation_),
  2,
  3,
  5,
  0,
  4,
  7,
  6,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Enter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Enter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Enter, deskdata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Leave, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Leave, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Leave, deskdata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Reday, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Reday, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Reday, dwuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_User_Reday, dwchairid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlayerList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlayerList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlayerList, nendindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlayerList, nresultcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CMD_S_PlayerList, players_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CardGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CardGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CardGroup, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CardGroup, cardtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Common::CardGroup, cards_),
  0,
  1,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::Common::PlaceJetInfo)},
  { 11, 19, sizeof(::Common::PlaceJettonScore)},
  { 22, 44, sizeof(::Common::GameDeskInfo)},
  { 61, 68, sizeof(::Common::CMD_S_SyncJetAreaScore)},
  { 70, 80, sizeof(::Common::CMD_Scene_StatusFree)},
  { 85, 95, sizeof(::Common::CMD_S_StartPlaceJetton)},
  { 100, 111, sizeof(::Common::CMD_S_GameStart)},
  { 117, 125, sizeof(::Common::PlayerScoreValue)},
  { 128, 139, sizeof(::Common::CMD_S_GameEnd)},
  { 145, 152, sizeof(::Common::CMD_S_BankerApplyEnd)},
  { 154, 161, sizeof(::Common::CMD_S_JettonEnd)},
  { 163, 170, sizeof(::Common::CMD_S_OpenCardEnd)},
  { 172, 179, sizeof(::Common::CMD_S_User_Get_Card)},
  { 181, 188, sizeof(::Common::CMD_S_User_Out_Card)},
  { 190, 196, sizeof(::Common::CMD_S_Open_cardSucees)},
  { 197, 204, sizeof(::Common::CMD_C_Out_Card_Req)},
  { 206, 211, sizeof(::Common::CMD_C_SyncGameDesk_Req)},
  { 211, 218, sizeof(::Common::CMD_S_Out_Card_Ack)},
  { 220, 227, sizeof(::Common::CMD_C_PlaceJet)},
  { 229, 238, sizeof(::Common::CMD_S_PlaceJettonFail)},
  { 242, 254, sizeof(::Common::CMD_S_PlaceJetSuccess)},
  { 261, 268, sizeof(::Common::CMD_S_ApplyBanker)},
  { 270, 276, sizeof(::Common::CMD_S_ApplyBankerSuccess)},
  { 277, 284, sizeof(::Common::CMD_S_ApplyBanker_Fail)},
  { 286, 293, sizeof(::Common::CMD_S_OpenCard)},
  { 295, 302, sizeof(::Common::CMD_S_CancelBanker)},
  { 304, 311, sizeof(::Common::CMD_S_CancelBanker_Fail)},
  { 313, 320, sizeof(::Common::CMD_S_ChangeBanker)},
  { 322, 329, sizeof(::Common::CMD_C_PlayerList)},
  { 331, 351, sizeof(::Common::PlayerListItem)},
  { 366, 372, sizeof(::Common::CMD_S_User_Enter)},
  { 373, 379, sizeof(::Common::CMD_S_User_Leave)},
  { 380, 387, sizeof(::Common::CMD_S_User_Reday)},
  { 389, 397, sizeof(::Common::CMD_S_PlayerList)},
  { 400, 408, sizeof(::Common::CardGroup)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_PlaceJetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_PlaceJettonScore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_GameDeskInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_SyncJetAreaScore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_Scene_StatusFree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_StartPlaceJetton_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_GameStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_PlayerScoreValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_GameEnd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_BankerApplyEnd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_JettonEnd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_OpenCardEnd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_User_Get_Card_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_User_Out_Card_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_Open_cardSucees_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_C_Out_Card_Req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_C_SyncGameDesk_Req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_Out_Card_Ack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_C_PlaceJet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_PlaceJettonFail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_PlaceJetSuccess_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_ApplyBanker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_ApplyBankerSuccess_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_ApplyBanker_Fail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_OpenCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_CancelBanker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_CancelBanker_Fail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_ChangeBanker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_C_PlayerList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_PlayerListItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_User_Enter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_User_Leave_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_User_Reday_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CMD_S_PlayerList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Common::_CardGroup_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Common.Message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 35);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024Common.Message.proto\022\006Common\"N\n\014PlaceJ"
      "etInfo\022\023\n\013lJettonType\030\001 \002(\005\022\024\n\014lJettonCo"
      "unt\030\002 \002(\005\022\023\n\013lJettonArea\030\003 \002(\005\"O\n\020PlaceJ"
      "ettonScore\022\020\n\010dwUserID\030\001 \002(\005\022\024\n\014lJettonS"
      "core\030\002 \002(\001\022\023\n\013lJettonArea\030\003 \002(\005\"\247\004\n\014Game"
      "DeskInfo\0221\n\017lAllJettonScore\030\001 \003(\0132\030.Comm"
      "on.PlaceJettonScore\0221\n\017SelfJettonScore\030\002"
      " \003(\0132\030.Common.PlaceJettonScore\0223\n\021divine"
      "JettonScore\030\003 \003(\0132\030.Common.PlaceJettonSc"
      "ore\022\035\n\025lApplyBankerCondition\030\004 \002(\001\022\027\n\017lA"
      "reaLimitScore\030\005 \002(\001\022 \n\005Cards\030\006 \003(\0132\021.Com"
      "mon.CardGroup\022\'\n\007players\030\007 \003(\0132\026.Common."
      "PlayerListItem\022\026\n\016wBankerChairID\030\010 \002(\005\022\024"
      "\n\014cbBankerTime\030\t \002(\005\022\027\n\017lBankerWinScore\030"
      "\n \002(\001\022\024\n\014lBankerScore\030\013 \002(\001\022\030\n\020bEnableSy"
      "sBanker\030\014 \002(\010\022\026\n\016szGameRoomName\030\r \001(\t\022\016\n"
      "\006winTag\030\016 \003(\005\022\030\n\020winCardGroupType\030\017 \003(\005\022"
      "%\n\007JetInfo\030\020 \003(\0132\024.Common.PlaceJetInfo\022\031"
      "\n\021lOnlinePopulation\030\021 \002(\005\"}\n\026CMD_S_SyncJ"
      "etAreaScore\0220\n\016AllJettonScore\030\001 \003(\0132\030.Co"
      "mmon.PlaceJettonScore\0221\n\017SelfJettonScore"
      "\030\002 \003(\0132\030.Common.PlaceJettonScore\"\226\001\n\024CMD"
      "_Scene_StatusFree\022&\n\010DeskData\030\001 \002(\0132\024.Co"
      "mmon.GameDeskInfo\022\023\n\013cbTimeLeave\030\002 \002(\005\022\025"
      "\n\rlUserMaxScore\030\003 \002(\001\022\022\n\nlUserScore\030\004 \002("
      "\001\022\026\n\016szGameRoomName\030\005 \001(\t\"\225\001\n\026CMD_S_Star"
      "tPlaceJetton\022&\n\010DeskData\030\001 \002(\0132\024.Common."
      "GameDeskInfo\022\023\n\013cbPlaceTime\030\002 \002(\005\022\023\n\013cbT"
      "imeLeave\030\003 \002(\005\022\025\n\rlUserMaxScore\030\004 \002(\001\022\022\n"
      "\nlUserScore\030\005 \002(\001\"\247\001\n\017CMD_S_GameStart\022&\n"
      "\010DeskData\030\001 \002(\0132\024.Common.GameDeskInfo\022\023\n"
      "\013cbTimeLeave\030\002 \002(\005\022\027\n\017nChipRobotCount\030\003 "
      "\002(\005\022\025\n\rlUserMaxScore\030\004 \002(\001\022\022\n\nlUserScore"
      "\030\005 \002(\001\022\023\n\013nRoundCount\030\006 \002(\005\"J\n\020PlayerSco"
      "reValue\022\016\n\006userId\030\001 \002(\005\022\023\n\013returnScore\030\002"
      " \002(\001\022\021\n\tuserScore\030\003 \001(\001\"\271\001\n\rCMD_S_GameEn"
      "d\022&\n\010DeskData\030\001 \002(\0132\024.Common.GameDeskInf"
      "o\022\023\n\013cbTimeLeave\030\002 \002(\005\022.\n\014gameEndScore\030\003"
      " \003(\0132\030.Common.PlayerScoreValue\022\025\n\rlUserM"
      "axScore\030\004 \002(\001\022\022\n\nlUserScore\030\005 \002(\001\022\020\n\010lRe"
      "venue\030\006 \002(\001\"S\n\024CMD_S_BankerApplyEnd\022&\n\010D"
      "eskData\030\001 \002(\0132\024.Common.GameDeskInfo\022\023\n\013c"
      "bTimeLeave\030\002 \002(\005\"N\n\017CMD_S_JettonEnd\022&\n\010D"
      "eskData\030\001 \002(\0132\024.Common.GameDeskInfo\022\023\n\013c"
      "bTimeLeave\030\002 \002(\005\"P\n\021CMD_S_OpenCardEnd\022&\n"
      "\010DeskData\030\001 \002(\0132\024.Common.GameDeskInfo\022\023\n"
      "\013cbTimeLeave\030\002 \002(\005\"6\n\023CMD_S_User_Get_Car"
      "d\022\020\n\010dwUserID\030\001 \002(\005\022\r\n\005Cards\030\002 \003(\005\"6\n\023CM"
      "D_S_User_Out_Card\022\020\n\010dwUserID\030\001 \002(\005\022\r\n\005C"
      "ards\030\002 \003(\005\"@\n\025CMD_S_Open_cardSucees\022\'\n\007p"
      "layers\030\001 \003(\0132\026.Common.PlayerListItem\"5\n\022"
      "CMD_C_Out_Card_Req\022\020\n\010dwUserID\030\001 \002(\005\022\r\n\005"
      "Cards\030\002 \002(\001\"\030\n\026CMD_C_SyncGameDesk_Req\"9\n"
      "\022CMD_S_Out_Card_Ack\022\021\n\terrorCode\030\001 \002(\005\022\020"
      "\n\010errorMsg\030\002 \002(\t\"<\n\016CMD_C_PlaceJet\022\024\n\014cb"
      "JettonArea\030\001 \002(\005\022\024\n\014lJettonScore\030\002 \002(\001\"g"
      "\n\025CMD_S_PlaceJettonFail\022\020\n\010dwUserID\030\001 \002("
      "\005\022\024\n\014cbJettonArea\030\002 \002(\005\022\023\n\013lPlaceScore\030\003"
      " \002(\001\022\021\n\tcbAndroid\030\004 \002(\005\"\342\001\n\025CMD_S_PlaceJ"
      "etSuccess\022\020\n\010dwUserID\030\001 \002(\005\022\024\n\014cbJettonA"
      "rea\030\002 \002(\005\022\024\n\014lJettonScore\030\003 \002(\001\022\022\n\nbIsAn"
      "droid\030\004 \002(\010\022\022\n\nlUserScore\030\005 \002(\001\0220\n\016AllJe"
      "ttonScore\030\006 \003(\0132\030.Common.PlaceJettonScor"
      "e\0221\n\017SelfJettonScore\030\007 \003(\0132\030.Common.Plac"
      "eJettonScore\"\?\n\021CMD_S_ApplyBanker\022\025\n\rwAp"
      "plyChairID\030\001 \002(\005\022\023\n\013lApplyMulti\030\002 \002(\005\"C\n"
      "\030CMD_S_ApplyBankerSuccess\022\'\n\007players\030\001 \003"
      "(\0132\026.Common.PlayerListItem\"D\n\026CMD_S_Appl"
      "yBanker_Fail\022\022\n\nnErrorCode\030\001 \002(\005\022\026\n\016szEr"
      "rorMessage\030\002 \001(\t\"=\n\016CMD_S_OpenCard\022\025\n\rwA"
      "pplyChairID\030\001 \002(\005\022\024\n\014wApplyuserid\030\002 \002(\005\""
      "<\n\022CMD_S_CancelBanker\022\020\n\010dwUserID\030\001 \002(\005\022"
      "\024\n\014szCancelUser\030\002 \002(\t\"E\n\027CMD_S_CancelBan"
      "ker_Fail\022\022\n\nnErrorCode\030\001 \002(\005\022\026\n\016szErrorM"
      "essage\030\002 \001(\t\"B\n\022CMD_S_ChangeBanker\022\026\n\016wB"
      "ankerChairID\030\001 \002(\005\022\024\n\014lBankerScore\030\002 \002(\001"
      "\"<\n\020CMD_C_PlayerList\022\023\n\013nLimitCount\030\001 \002("
      "\005\022\023\n\013nBeginIndex\030\002 \001(\005\"\274\002\n\016PlayerListIte"
      "m\022\020\n\010dwUserID\030\001 \002(\005\022\020\n\010headerID\030\002 \002(\005\022\021\n"
      "\tnVipLevel\030\003 \002(\005\022\020\n\010nickName\030\004 \002(\t\022\022\n\nlU"
      "serScore\030\005 \002(\001\022\027\n\017lTwentyWinScore\030\006 \001(\001\022"
      "\027\n\017lTwentyWinCount\030\007 \001(\005\022\024\n\014isdivineMath"
      "\030\010 \001(\005\022\r\n\005Index\030\t \001(\005\022\020\n\010isBanker\030\n \001(\005\022"
      "\016\n\006gender\030\013 \002(\005\022\025\n\risApplyBanker\030\014 \001(\005\022\030"
      "\n\020ApplyBankerMulti\030\r \001(\005\022\017\n\007lJetton\030\016 \001("
      "\005\022\022\n\nszLocation\030\017 \001(\t\":\n\020CMD_S_User_Ente"
      "r\022&\n\010DeskData\030\001 \002(\0132\024.Common.GameDeskInf"
      "o\":\n\020CMD_S_User_Leave\022&\n\010DeskData\030\001 \002(\0132"
      "\024.Common.GameDeskInfo\"7\n\020CMD_S_User_Reda"
      "y\022\020\n\010dwUserID\030\001 \002(\005\022\021\n\tdwChairid\030\002 \002(\005\"d"
      "\n\020CMD_S_PlayerList\022\021\n\tnEndIndex\030\001 \002(\005\022\024\n"
      "\014nResultCount\030\002 \002(\005\022\'\n\007players\030\003 \003(\0132\026.C"
      "ommon.PlayerListItem\">\n\tCardGroup\022\020\n\010gro"
      "up_id\030\001 \002(\005\022\020\n\010CardType\030\002 \001(\005\022\r\n\005Cards\030\003"
      " \003(\005*\254\006\n\005SUBID\022\026\n\022SUB_C_PLACE_JETTON\020d\022\032"
      "\n\026SUB_C_QUERY_PLAYERLIST\020g\022\026\n\022SUB_C_APPL"
      "Y_BANKER\020e\022\027\n\023SUB_C_CANCEL_BANKER\020f\022\027\n\022C"
      "MD_C_OUT_CARD_REQ\020\211\001\022\024\n\017SUB_C_SYNC_DESK\020"
      "\217\001\022\030\n\023SUB_C_BANKERSUCCESS\020\223\001\022\027\n\022SUB_C_OP"
      "EN_SUCCESS\020\224\001\022\023\n\017SUB_S_GAME_FREE\020x\022\024\n\020SU"
      "B_S_GAME_START\020y\022\026\n\022SUB_S_PLACE_JETTON\020z"
      "\022\022\n\016SUB_S_GAME_END\020{\022\026\n\022SUB_S_APPLY_BANK"
      "ER\020|\022\027\n\023SUB_S_CHANGE_BANKER\020}\022\025\n\021SUB_S_S"
      "END_RECORD\020\177\022\030\n\023SUB_S_BANKAPPLY_END\020\220\001\022\026"
      "\n\021SUB_S_JETTONE_END\020\221\001\022\027\n\022SUB_S_OPENCARD"
      "_END\020\222\001\022\031\n\024SUB_S_PLACE_JET_FAIL\020\200\001\022\030\n\023SU"
      "B_S_CANCEL_BANKER\020\201\001\022\031\n\024SUB_S_QUERY_PLAY"
      "LIST\020\202\001\022\024\n\017SUB_S_GAME_PLAY\020\203\001\022\025\n\020SUB_S_U"
      "SER_ENTER\020\204\001\022\025\n\020SUB_S_USER_LEAVE\020\205\001\022\025\n\020S"
      "UB_S_USER_REDAY\020\206\001\022\030\n\023SUB_S_USER_GET_CAR"
      "D\020\207\001\022\030\n\023SUB_S_USER_OUT_CARD\020\210\001\022\027\n\022CMD_S_"
      "OUT_CARD_ACK\020\212\001\022\035\n\030CMD_S_START_PLACE_JET"
      "TON\020\213\001\022\034\n\027SUB_S_APPLY_BANKER_FAIL\020\214\001\022\035\n\030"
      "SUB_S_CANCEL_BANKER_FAIL\020\215\001\022\036\n\031SUB_S_SYN"
      "C_JET_AREA_SCORE\020\216\001*\230\001\n\014STATUS_SCENE\022\016\n\n"
      "SCENE_FREE\020\000\022\017\n\013SCENE_START\020d\022\026\n\022SCENE_E"
      "NDBANKAPLLY\020e\022\022\n\016SCENE_PLACEJET\020f\022\025\n\021SCE"
      "NE_PLACEJETEND\020g\022\016\n\tSCENE_END\020\310\001\022\024\n\020SCEN"
      "E_OPENCAREND\020h*\364\001\n\026NIUNIU_CARD_GROUP_TYE"
      "P\022\t\n\005BEGIN\020\000\022\010\n\004NIU0\020\001\022\010\n\004NIU1\020\002\022\010\n\004NIU2"
      "\020\003\022\010\n\004NIU3\020\004\022\010\n\004NIU4\020\005\022\010\n\004NIU5\020\006\022\010\n\004NIU6"
      "\020\007\022\010\n\004NIU7\020\010\022\010\n\004NIU8\020\t\022\010\n\004NIU9\020\n\022\n\n\006NIUN"
      "IU\020\013\022\013\n\007TONGHUA\020\014\022\013\n\007HULUNIU\020\r\022\014\n\010WUHUAN"
      "IU\020\016\022\016\n\nZHADANGNIU\020\017\022\017\n\013TONGHUASHUN\020\020\022\r\n"
      "\tWUXIAONIU\020\021\022\007\n\003END\020\022"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4981);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Common.Message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Common_2eMessage_2eproto
namespace Common {
const ::google::protobuf::EnumDescriptor* SUBID_descriptor() {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Common_2eMessage_2eproto::file_level_enum_descriptors[0];
}
bool SUBID_IsValid(int value) {
  switch (value) {
    case 100:
    case 101:
    case 102:
    case 103:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* STATUS_SCENE_descriptor() {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Common_2eMessage_2eproto::file_level_enum_descriptors[1];
}
bool STATUS_SCENE_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 200:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* NIUNIU_CARD_GROUP_TYEP_descriptor() {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Common_2eMessage_2eproto::file_level_enum_descriptors[2];
}
bool NIUNIU_CARD_GROUP_TYEP_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PlaceJetInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaceJetInfo::kLJettonTypeFieldNumber;
const int PlaceJetInfo::kLJettonCountFieldNumber;
const int PlaceJetInfo::kLJettonAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaceJetInfo::PlaceJetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJetInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.PlaceJetInfo)
}
PlaceJetInfo::PlaceJetInfo(const PlaceJetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ljettontype_, &from.ljettontype_,
    static_cast<size_t>(reinterpret_cast<char*>(&ljettonarea_) -
    reinterpret_cast<char*>(&ljettontype_)) + sizeof(ljettonarea_));
  // @@protoc_insertion_point(copy_constructor:Common.PlaceJetInfo)
}

void PlaceJetInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ljettontype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ljettonarea_) -
      reinterpret_cast<char*>(&ljettontype_)) + sizeof(ljettonarea_));
}

PlaceJetInfo::~PlaceJetInfo() {
  // @@protoc_insertion_point(destructor:Common.PlaceJetInfo)
  SharedDtor();
}

void PlaceJetInfo::SharedDtor() {
}

void PlaceJetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaceJetInfo::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaceJetInfo& PlaceJetInfo::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJetInfo();
  return *internal_default_instance();
}

PlaceJetInfo* PlaceJetInfo::New(::google::protobuf::Arena* arena) const {
  PlaceJetInfo* n = new PlaceJetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlaceJetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.PlaceJetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&ljettontype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ljettonarea_) -
        reinterpret_cast<char*>(&ljettontype_)) + sizeof(ljettonarea_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlaceJetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.PlaceJetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lJettonType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ljettontype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ljettontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lJettonCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ljettoncount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ljettoncount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lJettonArea = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ljettonarea();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ljettonarea_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.PlaceJetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.PlaceJetInfo)
  return false;
#undef DO_
}

void PlaceJetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.PlaceJetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lJettonType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ljettontype(), output);
  }

  // required int32 lJettonCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ljettoncount(), output);
  }

  // required int32 lJettonArea = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ljettonarea(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.PlaceJetInfo)
}

::google::protobuf::uint8* PlaceJetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.PlaceJetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lJettonType = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ljettontype(), target);
  }

  // required int32 lJettonCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ljettoncount(), target);
  }

  // required int32 lJettonArea = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ljettonarea(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.PlaceJetInfo)
  return target;
}

size_t PlaceJetInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.PlaceJetInfo)
  size_t total_size = 0;

  if (has_ljettontype()) {
    // required int32 lJettonType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ljettontype());
  }

  if (has_ljettoncount()) {
    // required int32 lJettonCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ljettoncount());
  }

  if (has_ljettonarea()) {
    // required int32 lJettonArea = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ljettonarea());
  }

  return total_size;
}
size_t PlaceJetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.PlaceJetInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 lJettonType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ljettontype());

    // required int32 lJettonCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ljettoncount());

    // required int32 lJettonArea = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ljettonarea());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaceJetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.PlaceJetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaceJetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaceJetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.PlaceJetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.PlaceJetInfo)
    MergeFrom(*source);
  }
}

void PlaceJetInfo::MergeFrom(const PlaceJetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.PlaceJetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ljettontype_ = from.ljettontype_;
    }
    if (cached_has_bits & 0x00000002u) {
      ljettoncount_ = from.ljettoncount_;
    }
    if (cached_has_bits & 0x00000004u) {
      ljettonarea_ = from.ljettonarea_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlaceJetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.PlaceJetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaceJetInfo::CopyFrom(const PlaceJetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.PlaceJetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceJetInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PlaceJetInfo::Swap(PlaceJetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaceJetInfo::InternalSwap(PlaceJetInfo* other) {
  using std::swap;
  swap(ljettontype_, other->ljettontype_);
  swap(ljettoncount_, other->ljettoncount_);
  swap(ljettonarea_, other->ljettonarea_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaceJetInfo::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaceJettonScore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaceJettonScore::kDwUserIDFieldNumber;
const int PlaceJettonScore::kLJettonScoreFieldNumber;
const int PlaceJettonScore::kLJettonAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaceJettonScore::PlaceJettonScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJettonScore();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.PlaceJettonScore)
}
PlaceJettonScore::PlaceJettonScore(const PlaceJettonScore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ljettonscore_, &from.ljettonscore_,
    static_cast<size_t>(reinterpret_cast<char*>(&ljettonarea_) -
    reinterpret_cast<char*>(&ljettonscore_)) + sizeof(ljettonarea_));
  // @@protoc_insertion_point(copy_constructor:Common.PlaceJettonScore)
}

void PlaceJettonScore::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ljettonscore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ljettonarea_) -
      reinterpret_cast<char*>(&ljettonscore_)) + sizeof(ljettonarea_));
}

PlaceJettonScore::~PlaceJettonScore() {
  // @@protoc_insertion_point(destructor:Common.PlaceJettonScore)
  SharedDtor();
}

void PlaceJettonScore::SharedDtor() {
}

void PlaceJettonScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaceJettonScore::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaceJettonScore& PlaceJettonScore::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJettonScore();
  return *internal_default_instance();
}

PlaceJettonScore* PlaceJettonScore::New(::google::protobuf::Arena* arena) const {
  PlaceJettonScore* n = new PlaceJettonScore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlaceJettonScore::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.PlaceJettonScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&ljettonscore_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ljettonarea_) -
        reinterpret_cast<char*>(&ljettonscore_)) + sizeof(ljettonarea_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlaceJettonScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.PlaceJettonScore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dwUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dwuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lJettonScore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_ljettonscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ljettonscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lJettonArea = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ljettonarea();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ljettonarea_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.PlaceJettonScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.PlaceJettonScore)
  return false;
#undef DO_
}

void PlaceJettonScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.PlaceJettonScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dwuserid(), output);
  }

  // required double lJettonScore = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ljettonscore(), output);
  }

  // required int32 lJettonArea = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ljettonarea(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.PlaceJettonScore)
}

::google::protobuf::uint8* PlaceJettonScore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.PlaceJettonScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dwuserid(), target);
  }

  // required double lJettonScore = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ljettonscore(), target);
  }

  // required int32 lJettonArea = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ljettonarea(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.PlaceJettonScore)
  return target;
}

size_t PlaceJettonScore::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.PlaceJettonScore)
  size_t total_size = 0;

  if (has_ljettonscore()) {
    // required double lJettonScore = 2;
    total_size += 1 + 8;
  }

  if (has_dwuserid()) {
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());
  }

  if (has_ljettonarea()) {
    // required int32 lJettonArea = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ljettonarea());
  }

  return total_size;
}
size_t PlaceJettonScore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.PlaceJettonScore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required double lJettonScore = 2;
    total_size += 1 + 8;

    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());

    // required int32 lJettonArea = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ljettonarea());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaceJettonScore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.PlaceJettonScore)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaceJettonScore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaceJettonScore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.PlaceJettonScore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.PlaceJettonScore)
    MergeFrom(*source);
  }
}

void PlaceJettonScore::MergeFrom(const PlaceJettonScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.PlaceJettonScore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ljettonscore_ = from.ljettonscore_;
    }
    if (cached_has_bits & 0x00000002u) {
      dwuserid_ = from.dwuserid_;
    }
    if (cached_has_bits & 0x00000004u) {
      ljettonarea_ = from.ljettonarea_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlaceJettonScore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.PlaceJettonScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaceJettonScore::CopyFrom(const PlaceJettonScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.PlaceJettonScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceJettonScore::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PlaceJettonScore::Swap(PlaceJettonScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaceJettonScore::InternalSwap(PlaceJettonScore* other) {
  using std::swap;
  swap(ljettonscore_, other->ljettonscore_);
  swap(dwuserid_, other->dwuserid_);
  swap(ljettonarea_, other->ljettonarea_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaceJettonScore::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameDeskInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameDeskInfo::kLAllJettonScoreFieldNumber;
const int GameDeskInfo::kSelfJettonScoreFieldNumber;
const int GameDeskInfo::kDivineJettonScoreFieldNumber;
const int GameDeskInfo::kLApplyBankerConditionFieldNumber;
const int GameDeskInfo::kLAreaLimitScoreFieldNumber;
const int GameDeskInfo::kCardsFieldNumber;
const int GameDeskInfo::kPlayersFieldNumber;
const int GameDeskInfo::kWBankerChairIDFieldNumber;
const int GameDeskInfo::kCbBankerTimeFieldNumber;
const int GameDeskInfo::kLBankerWinScoreFieldNumber;
const int GameDeskInfo::kLBankerScoreFieldNumber;
const int GameDeskInfo::kBEnableSysBankerFieldNumber;
const int GameDeskInfo::kSzGameRoomNameFieldNumber;
const int GameDeskInfo::kWinTagFieldNumber;
const int GameDeskInfo::kWinCardGroupTypeFieldNumber;
const int GameDeskInfo::kJetInfoFieldNumber;
const int GameDeskInfo::kLOnlinePopulationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameDeskInfo::GameDeskInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.GameDeskInfo)
}
GameDeskInfo::GameDeskInfo(const GameDeskInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      lalljettonscore_(from.lalljettonscore_),
      selfjettonscore_(from.selfjettonscore_),
      divinejettonscore_(from.divinejettonscore_),
      cards_(from.cards_),
      players_(from.players_),
      wintag_(from.wintag_),
      wincardgrouptype_(from.wincardgrouptype_),
      jetinfo_(from.jetinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szgameroomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_szgameroomname()) {
    szgameroomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szgameroomname_);
  }
  ::memcpy(&lapplybankercondition_, &from.lapplybankercondition_,
    static_cast<size_t>(reinterpret_cast<char*>(&lonlinepopulation_) -
    reinterpret_cast<char*>(&lapplybankercondition_)) + sizeof(lonlinepopulation_));
  // @@protoc_insertion_point(copy_constructor:Common.GameDeskInfo)
}

void GameDeskInfo::SharedCtor() {
  _cached_size_ = 0;
  szgameroomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lapplybankercondition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lonlinepopulation_) -
      reinterpret_cast<char*>(&lapplybankercondition_)) + sizeof(lonlinepopulation_));
}

GameDeskInfo::~GameDeskInfo() {
  // @@protoc_insertion_point(destructor:Common.GameDeskInfo)
  SharedDtor();
}

void GameDeskInfo::SharedDtor() {
  szgameroomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameDeskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameDeskInfo::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameDeskInfo& GameDeskInfo::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfo();
  return *internal_default_instance();
}

GameDeskInfo* GameDeskInfo::New(::google::protobuf::Arena* arena) const {
  GameDeskInfo* n = new GameDeskInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameDeskInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.GameDeskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lalljettonscore_.Clear();
  selfjettonscore_.Clear();
  divinejettonscore_.Clear();
  cards_.Clear();
  players_.Clear();
  wintag_.Clear();
  wincardgrouptype_.Clear();
  jetinfo_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!szgameroomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*szgameroomname_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&lapplybankercondition_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&benablesysbanker_) -
        reinterpret_cast<char*>(&lapplybankercondition_)) + sizeof(benablesysbanker_));
  }
  lonlinepopulation_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameDeskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.GameDeskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.PlaceJettonScore lAllJettonScore = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_lalljettonscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_selfjettonscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.PlaceJettonScore divineJettonScore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_divinejettonscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lApplyBankerCondition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_lapplybankercondition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lapplybankercondition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lAreaLimitScore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_larealimitscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &larealimitscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.CardGroup Cards = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.PlayerListItem players = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 wBankerChairID = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_wbankerchairid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wbankerchairid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbBankerTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_cbbankertime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbbankertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lBankerWinScore = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_lbankerwinscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lbankerwinscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lBankerScore = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_lbankerscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lbankerscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool bEnableSysBanker = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_benablesysbanker();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &benablesysbanker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string szGameRoomName = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szgameroomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szgameroomname().data(), static_cast<int>(this->szgameroomname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Common.GameDeskInfo.szGameRoomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 winTag = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 112u, input, this->mutable_wintag())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_wintag())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 winCardGroupType = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 120u, input, this->mutable_wincardgrouptype())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_wincardgrouptype())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.PlaceJetInfo JetInfo = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_jetinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lOnlinePopulation = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_lonlinepopulation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lonlinepopulation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.GameDeskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.GameDeskInfo)
  return false;
#undef DO_
}

void GameDeskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.GameDeskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Common.PlaceJettonScore lAllJettonScore = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lalljettonscore_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->lalljettonscore(static_cast<int>(i)), output);
  }

  // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selfjettonscore_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->selfjettonscore(static_cast<int>(i)), output);
  }

  // repeated .Common.PlaceJettonScore divineJettonScore = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->divinejettonscore_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->divinejettonscore(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required double lApplyBankerCondition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lapplybankercondition(), output);
  }

  // required double lAreaLimitScore = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->larealimitscore(), output);
  }

  // repeated .Common.CardGroup Cards = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->cards(static_cast<int>(i)), output);
  }

  // repeated .Common.PlayerListItem players = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->players(static_cast<int>(i)), output);
  }

  // required int32 wBankerChairID = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->wbankerchairid(), output);
  }

  // required int32 cbBankerTime = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->cbbankertime(), output);
  }

  // required double lBankerWinScore = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->lbankerwinscore(), output);
  }

  // required double lBankerScore = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->lbankerscore(), output);
  }

  // required bool bEnableSysBanker = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->benablesysbanker(), output);
  }

  // optional string szGameRoomName = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szgameroomname().data(), static_cast<int>(this->szgameroomname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.GameDeskInfo.szGameRoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->szgameroomname(), output);
  }

  // repeated int32 winTag = 14;
  for (int i = 0, n = this->wintag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      14, this->wintag(i), output);
  }

  // repeated int32 winCardGroupType = 15;
  for (int i = 0, n = this->wincardgrouptype_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      15, this->wincardgrouptype(i), output);
  }

  // repeated .Common.PlaceJetInfo JetInfo = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jetinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->jetinfo(static_cast<int>(i)), output);
  }

  // required int32 lOnlinePopulation = 17;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->lonlinepopulation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.GameDeskInfo)
}

::google::protobuf::uint8* GameDeskInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.GameDeskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Common.PlaceJettonScore lAllJettonScore = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lalljettonscore_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->lalljettonscore(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selfjettonscore_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->selfjettonscore(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Common.PlaceJettonScore divineJettonScore = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->divinejettonscore_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->divinejettonscore(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required double lApplyBankerCondition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lapplybankercondition(), target);
  }

  // required double lAreaLimitScore = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->larealimitscore(), target);
  }

  // repeated .Common.CardGroup Cards = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->cards(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Common.PlayerListItem players = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->players(static_cast<int>(i)), deterministic, target);
  }

  // required int32 wBankerChairID = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->wbankerchairid(), target);
  }

  // required int32 cbBankerTime = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->cbbankertime(), target);
  }

  // required double lBankerWinScore = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->lbankerwinscore(), target);
  }

  // required double lBankerScore = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->lbankerscore(), target);
  }

  // required bool bEnableSysBanker = 12;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->benablesysbanker(), target);
  }

  // optional string szGameRoomName = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szgameroomname().data(), static_cast<int>(this->szgameroomname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.GameDeskInfo.szGameRoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->szgameroomname(), target);
  }

  // repeated int32 winTag = 14;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(14, this->wintag_, target);

  // repeated int32 winCardGroupType = 15;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(15, this->wincardgrouptype_, target);

  // repeated .Common.PlaceJetInfo JetInfo = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jetinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->jetinfo(static_cast<int>(i)), deterministic, target);
  }

  // required int32 lOnlinePopulation = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->lonlinepopulation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.GameDeskInfo)
  return target;
}

size_t GameDeskInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.GameDeskInfo)
  size_t total_size = 0;

  if (has_lapplybankercondition()) {
    // required double lApplyBankerCondition = 4;
    total_size += 1 + 8;
  }

  if (has_larealimitscore()) {
    // required double lAreaLimitScore = 5;
    total_size += 1 + 8;
  }

  if (has_wbankerchairid()) {
    // required int32 wBankerChairID = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wbankerchairid());
  }

  if (has_cbbankertime()) {
    // required int32 cbBankerTime = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbbankertime());
  }

  if (has_lbankerwinscore()) {
    // required double lBankerWinScore = 10;
    total_size += 1 + 8;
  }

  if (has_lbankerscore()) {
    // required double lBankerScore = 11;
    total_size += 1 + 8;
  }

  if (has_benablesysbanker()) {
    // required bool bEnableSysBanker = 12;
    total_size += 1 + 1;
  }

  if (has_lonlinepopulation()) {
    // required int32 lOnlinePopulation = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lonlinepopulation());
  }

  return total_size;
}
size_t GameDeskInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.GameDeskInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001fe) ^ 0x000001fe) == 0) {  // All required fields are present.
    // required double lApplyBankerCondition = 4;
    total_size += 1 + 8;

    // required double lAreaLimitScore = 5;
    total_size += 1 + 8;

    // required int32 wBankerChairID = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wbankerchairid());

    // required int32 cbBankerTime = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbbankertime());

    // required double lBankerWinScore = 10;
    total_size += 1 + 8;

    // required double lBankerScore = 11;
    total_size += 1 + 8;

    // required bool bEnableSysBanker = 12;
    total_size += 1 + 1;

    // required int32 lOnlinePopulation = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lonlinepopulation());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Common.PlaceJettonScore lAllJettonScore = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->lalljettonscore_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lalljettonscore(static_cast<int>(i)));
    }
  }

  // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->selfjettonscore_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->selfjettonscore(static_cast<int>(i)));
    }
  }

  // repeated .Common.PlaceJettonScore divineJettonScore = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->divinejettonscore_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->divinejettonscore(static_cast<int>(i)));
    }
  }

  // repeated .Common.CardGroup Cards = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->cards_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cards(static_cast<int>(i)));
    }
  }

  // repeated .Common.PlayerListItem players = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  // repeated int32 winTag = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->wintag_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->wintag_size());
    total_size += data_size;
  }

  // repeated int32 winCardGroupType = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->wincardgrouptype_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->wincardgrouptype_size());
    total_size += data_size;
  }

  // repeated .Common.PlaceJetInfo JetInfo = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->jetinfo_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jetinfo(static_cast<int>(i)));
    }
  }

  // optional string szGameRoomName = 13;
  if (has_szgameroomname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szgameroomname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameDeskInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.GameDeskInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GameDeskInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameDeskInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.GameDeskInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.GameDeskInfo)
    MergeFrom(*source);
  }
}

void GameDeskInfo::MergeFrom(const GameDeskInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.GameDeskInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lalljettonscore_.MergeFrom(from.lalljettonscore_);
  selfjettonscore_.MergeFrom(from.selfjettonscore_);
  divinejettonscore_.MergeFrom(from.divinejettonscore_);
  cards_.MergeFrom(from.cards_);
  players_.MergeFrom(from.players_);
  wintag_.MergeFrom(from.wintag_);
  wincardgrouptype_.MergeFrom(from.wincardgrouptype_);
  jetinfo_.MergeFrom(from.jetinfo_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_szgameroomname();
      szgameroomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szgameroomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      lapplybankercondition_ = from.lapplybankercondition_;
    }
    if (cached_has_bits & 0x00000004u) {
      larealimitscore_ = from.larealimitscore_;
    }
    if (cached_has_bits & 0x00000008u) {
      wbankerchairid_ = from.wbankerchairid_;
    }
    if (cached_has_bits & 0x00000010u) {
      cbbankertime_ = from.cbbankertime_;
    }
    if (cached_has_bits & 0x00000020u) {
      lbankerwinscore_ = from.lbankerwinscore_;
    }
    if (cached_has_bits & 0x00000040u) {
      lbankerscore_ = from.lbankerscore_;
    }
    if (cached_has_bits & 0x00000080u) {
      benablesysbanker_ = from.benablesysbanker_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_lonlinepopulation(from.lonlinepopulation());
  }
}

void GameDeskInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.GameDeskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameDeskInfo::CopyFrom(const GameDeskInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.GameDeskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameDeskInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001fe) != 0x000001fe) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lalljettonscore())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->selfjettonscore())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->divinejettonscore())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->cards())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->players())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->jetinfo())) return false;
  return true;
}

void GameDeskInfo::Swap(GameDeskInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameDeskInfo::InternalSwap(GameDeskInfo* other) {
  using std::swap;
  lalljettonscore_.InternalSwap(&other->lalljettonscore_);
  selfjettonscore_.InternalSwap(&other->selfjettonscore_);
  divinejettonscore_.InternalSwap(&other->divinejettonscore_);
  cards_.InternalSwap(&other->cards_);
  players_.InternalSwap(&other->players_);
  wintag_.InternalSwap(&other->wintag_);
  wincardgrouptype_.InternalSwap(&other->wincardgrouptype_);
  jetinfo_.InternalSwap(&other->jetinfo_);
  szgameroomname_.Swap(&other->szgameroomname_);
  swap(lapplybankercondition_, other->lapplybankercondition_);
  swap(larealimitscore_, other->larealimitscore_);
  swap(wbankerchairid_, other->wbankerchairid_);
  swap(cbbankertime_, other->cbbankertime_);
  swap(lbankerwinscore_, other->lbankerwinscore_);
  swap(lbankerscore_, other->lbankerscore_);
  swap(benablesysbanker_, other->benablesysbanker_);
  swap(lonlinepopulation_, other->lonlinepopulation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameDeskInfo::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_SyncJetAreaScore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_SyncJetAreaScore::kAllJettonScoreFieldNumber;
const int CMD_S_SyncJetAreaScore::kSelfJettonScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_SyncJetAreaScore::CMD_S_SyncJetAreaScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_SyncJetAreaScore();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_SyncJetAreaScore)
}
CMD_S_SyncJetAreaScore::CMD_S_SyncJetAreaScore(const CMD_S_SyncJetAreaScore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      alljettonscore_(from.alljettonscore_),
      selfjettonscore_(from.selfjettonscore_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_SyncJetAreaScore)
}

void CMD_S_SyncJetAreaScore::SharedCtor() {
  _cached_size_ = 0;
}

CMD_S_SyncJetAreaScore::~CMD_S_SyncJetAreaScore() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_SyncJetAreaScore)
  SharedDtor();
}

void CMD_S_SyncJetAreaScore::SharedDtor() {
}

void CMD_S_SyncJetAreaScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_SyncJetAreaScore::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_SyncJetAreaScore& CMD_S_SyncJetAreaScore::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_SyncJetAreaScore();
  return *internal_default_instance();
}

CMD_S_SyncJetAreaScore* CMD_S_SyncJetAreaScore::New(::google::protobuf::Arena* arena) const {
  CMD_S_SyncJetAreaScore* n = new CMD_S_SyncJetAreaScore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_SyncJetAreaScore::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_SyncJetAreaScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alljettonscore_.Clear();
  selfjettonscore_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_SyncJetAreaScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_SyncJetAreaScore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.PlaceJettonScore AllJettonScore = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_alljettonscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_selfjettonscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_SyncJetAreaScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_SyncJetAreaScore)
  return false;
#undef DO_
}

void CMD_S_SyncJetAreaScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_SyncJetAreaScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Common.PlaceJettonScore AllJettonScore = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alljettonscore_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->alljettonscore(static_cast<int>(i)), output);
  }

  // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selfjettonscore_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->selfjettonscore(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_SyncJetAreaScore)
}

::google::protobuf::uint8* CMD_S_SyncJetAreaScore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_SyncJetAreaScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Common.PlaceJettonScore AllJettonScore = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alljettonscore_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->alljettonscore(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selfjettonscore_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->selfjettonscore(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_SyncJetAreaScore)
  return target;
}

size_t CMD_S_SyncJetAreaScore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_SyncJetAreaScore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .Common.PlaceJettonScore AllJettonScore = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->alljettonscore_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alljettonscore(static_cast<int>(i)));
    }
  }

  // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->selfjettonscore_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->selfjettonscore(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_SyncJetAreaScore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_SyncJetAreaScore)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_SyncJetAreaScore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_SyncJetAreaScore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_SyncJetAreaScore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_SyncJetAreaScore)
    MergeFrom(*source);
  }
}

void CMD_S_SyncJetAreaScore::MergeFrom(const CMD_S_SyncJetAreaScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_SyncJetAreaScore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alljettonscore_.MergeFrom(from.alljettonscore_);
  selfjettonscore_.MergeFrom(from.selfjettonscore_);
}

void CMD_S_SyncJetAreaScore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_SyncJetAreaScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_SyncJetAreaScore::CopyFrom(const CMD_S_SyncJetAreaScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_SyncJetAreaScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_SyncJetAreaScore::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->alljettonscore())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->selfjettonscore())) return false;
  return true;
}

void CMD_S_SyncJetAreaScore::Swap(CMD_S_SyncJetAreaScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_SyncJetAreaScore::InternalSwap(CMD_S_SyncJetAreaScore* other) {
  using std::swap;
  alljettonscore_.InternalSwap(&other->alljettonscore_);
  selfjettonscore_.InternalSwap(&other->selfjettonscore_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_SyncJetAreaScore::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_Scene_StatusFree::InitAsDefaultInstance() {
  ::Common::_CMD_Scene_StatusFree_default_instance_._instance.get_mutable()->deskdata_ = const_cast< ::Common::GameDeskInfo*>(
      ::Common::GameDeskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Scene_StatusFree::kDeskDataFieldNumber;
const int CMD_Scene_StatusFree::kCbTimeLeaveFieldNumber;
const int CMD_Scene_StatusFree::kLUserMaxScoreFieldNumber;
const int CMD_Scene_StatusFree::kLUserScoreFieldNumber;
const int CMD_Scene_StatusFree::kSzGameRoomNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Scene_StatusFree::CMD_Scene_StatusFree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_Scene_StatusFree();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_Scene_StatusFree)
}
CMD_Scene_StatusFree::CMD_Scene_StatusFree(const CMD_Scene_StatusFree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szgameroomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_szgameroomname()) {
    szgameroomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szgameroomname_);
  }
  if (from.has_deskdata()) {
    deskdata_ = new ::Common::GameDeskInfo(*from.deskdata_);
  } else {
    deskdata_ = NULL;
  }
  ::memcpy(&lusermaxscore_, &from.lusermaxscore_,
    static_cast<size_t>(reinterpret_cast<char*>(&cbtimeleave_) -
    reinterpret_cast<char*>(&lusermaxscore_)) + sizeof(cbtimeleave_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_Scene_StatusFree)
}

void CMD_Scene_StatusFree::SharedCtor() {
  _cached_size_ = 0;
  szgameroomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&deskdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cbtimeleave_) -
      reinterpret_cast<char*>(&deskdata_)) + sizeof(cbtimeleave_));
}

CMD_Scene_StatusFree::~CMD_Scene_StatusFree() {
  // @@protoc_insertion_point(destructor:Common.CMD_Scene_StatusFree)
  SharedDtor();
}

void CMD_Scene_StatusFree::SharedDtor() {
  szgameroomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete deskdata_;
}

void CMD_Scene_StatusFree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Scene_StatusFree::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_Scene_StatusFree& CMD_Scene_StatusFree::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_Scene_StatusFree();
  return *internal_default_instance();
}

CMD_Scene_StatusFree* CMD_Scene_StatusFree::New(::google::protobuf::Arena* arena) const {
  CMD_Scene_StatusFree* n = new CMD_Scene_StatusFree;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Scene_StatusFree::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_Scene_StatusFree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!szgameroomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*szgameroomname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(deskdata_ != NULL);
      deskdata_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&lusermaxscore_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cbtimeleave_) -
        reinterpret_cast<char*>(&lusermaxscore_)) + sizeof(cbtimeleave_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_Scene_StatusFree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_Scene_StatusFree)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.GameDeskInfo DeskData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbTimeLeave = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cbtimeleave();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbtimeleave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserMaxScore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_lusermaxscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lusermaxscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserScore = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_luserscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &luserscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string szGameRoomName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szgameroomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szgameroomname().data(), static_cast<int>(this->szgameroomname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Common.CMD_Scene_StatusFree.szGameRoomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_Scene_StatusFree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_Scene_StatusFree)
  return false;
#undef DO_
}

void CMD_Scene_StatusFree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_Scene_StatusFree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deskdata_, output);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cbtimeleave(), output);
  }

  // required double lUserMaxScore = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->lusermaxscore(), output);
  }

  // required double lUserScore = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->luserscore(), output);
  }

  // optional string szGameRoomName = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szgameroomname().data(), static_cast<int>(this->szgameroomname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_Scene_StatusFree.szGameRoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->szgameroomname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_Scene_StatusFree)
}

::google::protobuf::uint8* CMD_Scene_StatusFree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_Scene_StatusFree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->deskdata_, deterministic, target);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cbtimeleave(), target);
  }

  // required double lUserMaxScore = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->lusermaxscore(), target);
  }

  // required double lUserScore = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->luserscore(), target);
  }

  // optional string szGameRoomName = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szgameroomname().data(), static_cast<int>(this->szgameroomname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_Scene_StatusFree.szGameRoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->szgameroomname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_Scene_StatusFree)
  return target;
}

size_t CMD_Scene_StatusFree::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_Scene_StatusFree)
  size_t total_size = 0;

  if (has_deskdata()) {
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);
  }

  if (has_lusermaxscore()) {
    // required double lUserMaxScore = 3;
    total_size += 1 + 8;
  }

  if (has_luserscore()) {
    // required double lUserScore = 4;
    total_size += 1 + 8;
  }

  if (has_cbtimeleave()) {
    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());
  }

  return total_size;
}
size_t CMD_Scene_StatusFree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_Scene_StatusFree)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);

    // required double lUserMaxScore = 3;
    total_size += 1 + 8;

    // required double lUserScore = 4;
    total_size += 1 + 8;

    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string szGameRoomName = 5;
  if (has_szgameroomname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szgameroomname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Scene_StatusFree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_Scene_StatusFree)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Scene_StatusFree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Scene_StatusFree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_Scene_StatusFree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_Scene_StatusFree)
    MergeFrom(*source);
  }
}

void CMD_Scene_StatusFree::MergeFrom(const CMD_Scene_StatusFree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_Scene_StatusFree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_szgameroomname();
      szgameroomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szgameroomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_deskdata()->::Common::GameDeskInfo::MergeFrom(from.deskdata());
    }
    if (cached_has_bits & 0x00000004u) {
      lusermaxscore_ = from.lusermaxscore_;
    }
    if (cached_has_bits & 0x00000008u) {
      luserscore_ = from.luserscore_;
    }
    if (cached_has_bits & 0x00000010u) {
      cbtimeleave_ = from.cbtimeleave_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_Scene_StatusFree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_Scene_StatusFree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Scene_StatusFree::CopyFrom(const CMD_Scene_StatusFree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_Scene_StatusFree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Scene_StatusFree::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  if (has_deskdata()) {
    if (!this->deskdata_->IsInitialized()) return false;
  }
  return true;
}

void CMD_Scene_StatusFree::Swap(CMD_Scene_StatusFree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Scene_StatusFree::InternalSwap(CMD_Scene_StatusFree* other) {
  using std::swap;
  szgameroomname_.Swap(&other->szgameroomname_);
  swap(deskdata_, other->deskdata_);
  swap(lusermaxscore_, other->lusermaxscore_);
  swap(luserscore_, other->luserscore_);
  swap(cbtimeleave_, other->cbtimeleave_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Scene_StatusFree::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_StartPlaceJetton::InitAsDefaultInstance() {
  ::Common::_CMD_S_StartPlaceJetton_default_instance_._instance.get_mutable()->deskdata_ = const_cast< ::Common::GameDeskInfo*>(
      ::Common::GameDeskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_StartPlaceJetton::kDeskDataFieldNumber;
const int CMD_S_StartPlaceJetton::kCbPlaceTimeFieldNumber;
const int CMD_S_StartPlaceJetton::kCbTimeLeaveFieldNumber;
const int CMD_S_StartPlaceJetton::kLUserMaxScoreFieldNumber;
const int CMD_S_StartPlaceJetton::kLUserScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_StartPlaceJetton::CMD_S_StartPlaceJetton()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_StartPlaceJetton();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_StartPlaceJetton)
}
CMD_S_StartPlaceJetton::CMD_S_StartPlaceJetton(const CMD_S_StartPlaceJetton& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deskdata()) {
    deskdata_ = new ::Common::GameDeskInfo(*from.deskdata_);
  } else {
    deskdata_ = NULL;
  }
  ::memcpy(&cbplacetime_, &from.cbplacetime_,
    static_cast<size_t>(reinterpret_cast<char*>(&luserscore_) -
    reinterpret_cast<char*>(&cbplacetime_)) + sizeof(luserscore_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_StartPlaceJetton)
}

void CMD_S_StartPlaceJetton::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&deskdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&luserscore_) -
      reinterpret_cast<char*>(&deskdata_)) + sizeof(luserscore_));
}

CMD_S_StartPlaceJetton::~CMD_S_StartPlaceJetton() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_StartPlaceJetton)
  SharedDtor();
}

void CMD_S_StartPlaceJetton::SharedDtor() {
  if (this != internal_default_instance()) delete deskdata_;
}

void CMD_S_StartPlaceJetton::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_StartPlaceJetton::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_StartPlaceJetton& CMD_S_StartPlaceJetton::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_StartPlaceJetton();
  return *internal_default_instance();
}

CMD_S_StartPlaceJetton* CMD_S_StartPlaceJetton::New(::google::protobuf::Arena* arena) const {
  CMD_S_StartPlaceJetton* n = new CMD_S_StartPlaceJetton;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_StartPlaceJetton::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_StartPlaceJetton)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(deskdata_ != NULL);
    deskdata_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&cbplacetime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&luserscore_) -
        reinterpret_cast<char*>(&cbplacetime_)) + sizeof(luserscore_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_StartPlaceJetton::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_StartPlaceJetton)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.GameDeskInfo DeskData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbPlaceTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cbplacetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbplacetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbTimeLeave = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cbtimeleave();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbtimeleave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserMaxScore = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_lusermaxscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lusermaxscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserScore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_luserscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &luserscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_StartPlaceJetton)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_StartPlaceJetton)
  return false;
#undef DO_
}

void CMD_S_StartPlaceJetton::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_StartPlaceJetton)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deskdata_, output);
  }

  // required int32 cbPlaceTime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cbplacetime(), output);
  }

  // required int32 cbTimeLeave = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cbtimeleave(), output);
  }

  // required double lUserMaxScore = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lusermaxscore(), output);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->luserscore(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_StartPlaceJetton)
}

::google::protobuf::uint8* CMD_S_StartPlaceJetton::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_StartPlaceJetton)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->deskdata_, deterministic, target);
  }

  // required int32 cbPlaceTime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cbplacetime(), target);
  }

  // required int32 cbTimeLeave = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cbtimeleave(), target);
  }

  // required double lUserMaxScore = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lusermaxscore(), target);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->luserscore(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_StartPlaceJetton)
  return target;
}

size_t CMD_S_StartPlaceJetton::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_StartPlaceJetton)
  size_t total_size = 0;

  if (has_deskdata()) {
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);
  }

  if (has_cbplacetime()) {
    // required int32 cbPlaceTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbplacetime());
  }

  if (has_cbtimeleave()) {
    // required int32 cbTimeLeave = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());
  }

  if (has_lusermaxscore()) {
    // required double lUserMaxScore = 4;
    total_size += 1 + 8;
  }

  if (has_luserscore()) {
    // required double lUserScore = 5;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t CMD_S_StartPlaceJetton::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_StartPlaceJetton)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);

    // required int32 cbPlaceTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbplacetime());

    // required int32 cbTimeLeave = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());

    // required double lUserMaxScore = 4;
    total_size += 1 + 8;

    // required double lUserScore = 5;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_StartPlaceJetton::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_StartPlaceJetton)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_StartPlaceJetton* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_StartPlaceJetton>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_StartPlaceJetton)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_StartPlaceJetton)
    MergeFrom(*source);
  }
}

void CMD_S_StartPlaceJetton::MergeFrom(const CMD_S_StartPlaceJetton& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_StartPlaceJetton)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_deskdata()->::Common::GameDeskInfo::MergeFrom(from.deskdata());
    }
    if (cached_has_bits & 0x00000002u) {
      cbplacetime_ = from.cbplacetime_;
    }
    if (cached_has_bits & 0x00000004u) {
      cbtimeleave_ = from.cbtimeleave_;
    }
    if (cached_has_bits & 0x00000008u) {
      lusermaxscore_ = from.lusermaxscore_;
    }
    if (cached_has_bits & 0x00000010u) {
      luserscore_ = from.luserscore_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_StartPlaceJetton::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_StartPlaceJetton)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_StartPlaceJetton::CopyFrom(const CMD_S_StartPlaceJetton& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_StartPlaceJetton)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_StartPlaceJetton::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_deskdata()) {
    if (!this->deskdata_->IsInitialized()) return false;
  }
  return true;
}

void CMD_S_StartPlaceJetton::Swap(CMD_S_StartPlaceJetton* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_StartPlaceJetton::InternalSwap(CMD_S_StartPlaceJetton* other) {
  using std::swap;
  swap(deskdata_, other->deskdata_);
  swap(cbplacetime_, other->cbplacetime_);
  swap(cbtimeleave_, other->cbtimeleave_);
  swap(lusermaxscore_, other->lusermaxscore_);
  swap(luserscore_, other->luserscore_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_StartPlaceJetton::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_GameStart::InitAsDefaultInstance() {
  ::Common::_CMD_S_GameStart_default_instance_._instance.get_mutable()->deskdata_ = const_cast< ::Common::GameDeskInfo*>(
      ::Common::GameDeskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_GameStart::kDeskDataFieldNumber;
const int CMD_S_GameStart::kCbTimeLeaveFieldNumber;
const int CMD_S_GameStart::kNChipRobotCountFieldNumber;
const int CMD_S_GameStart::kLUserMaxScoreFieldNumber;
const int CMD_S_GameStart::kLUserScoreFieldNumber;
const int CMD_S_GameStart::kNRoundCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_GameStart::CMD_S_GameStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_GameStart();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_GameStart)
}
CMD_S_GameStart::CMD_S_GameStart(const CMD_S_GameStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deskdata()) {
    deskdata_ = new ::Common::GameDeskInfo(*from.deskdata_);
  } else {
    deskdata_ = NULL;
  }
  ::memcpy(&cbtimeleave_, &from.cbtimeleave_,
    static_cast<size_t>(reinterpret_cast<char*>(&nroundcount_) -
    reinterpret_cast<char*>(&cbtimeleave_)) + sizeof(nroundcount_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_GameStart)
}

void CMD_S_GameStart::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&deskdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nroundcount_) -
      reinterpret_cast<char*>(&deskdata_)) + sizeof(nroundcount_));
}

CMD_S_GameStart::~CMD_S_GameStart() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_GameStart)
  SharedDtor();
}

void CMD_S_GameStart::SharedDtor() {
  if (this != internal_default_instance()) delete deskdata_;
}

void CMD_S_GameStart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_GameStart::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_GameStart& CMD_S_GameStart::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_GameStart();
  return *internal_default_instance();
}

CMD_S_GameStart* CMD_S_GameStart::New(::google::protobuf::Arena* arena) const {
  CMD_S_GameStart* n = new CMD_S_GameStart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_GameStart::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_GameStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(deskdata_ != NULL);
    deskdata_->Clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&cbtimeleave_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nroundcount_) -
        reinterpret_cast<char*>(&cbtimeleave_)) + sizeof(nroundcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_GameStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_GameStart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.GameDeskInfo DeskData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbTimeLeave = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cbtimeleave();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbtimeleave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nChipRobotCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_nchiprobotcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nchiprobotcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserMaxScore = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_lusermaxscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lusermaxscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserScore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_luserscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &luserscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nRoundCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_nroundcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nroundcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_GameStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_GameStart)
  return false;
#undef DO_
}

void CMD_S_GameStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_GameStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deskdata_, output);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cbtimeleave(), output);
  }

  // required int32 nChipRobotCount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nchiprobotcount(), output);
  }

  // required double lUserMaxScore = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lusermaxscore(), output);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->luserscore(), output);
  }

  // required int32 nRoundCount = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nroundcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_GameStart)
}

::google::protobuf::uint8* CMD_S_GameStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_GameStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->deskdata_, deterministic, target);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cbtimeleave(), target);
  }

  // required int32 nChipRobotCount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nchiprobotcount(), target);
  }

  // required double lUserMaxScore = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lusermaxscore(), target);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->luserscore(), target);
  }

  // required int32 nRoundCount = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->nroundcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_GameStart)
  return target;
}

size_t CMD_S_GameStart::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_GameStart)
  size_t total_size = 0;

  if (has_deskdata()) {
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);
  }

  if (has_cbtimeleave()) {
    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());
  }

  if (has_nchiprobotcount()) {
    // required int32 nChipRobotCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nchiprobotcount());
  }

  if (has_lusermaxscore()) {
    // required double lUserMaxScore = 4;
    total_size += 1 + 8;
  }

  if (has_luserscore()) {
    // required double lUserScore = 5;
    total_size += 1 + 8;
  }

  if (has_nroundcount()) {
    // required int32 nRoundCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nroundcount());
  }

  return total_size;
}
size_t CMD_S_GameStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_GameStart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);

    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());

    // required int32 nChipRobotCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nchiprobotcount());

    // required double lUserMaxScore = 4;
    total_size += 1 + 8;

    // required double lUserScore = 5;
    total_size += 1 + 8;

    // required int32 nRoundCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nroundcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_GameStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_GameStart)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_GameStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_GameStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_GameStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_GameStart)
    MergeFrom(*source);
  }
}

void CMD_S_GameStart::MergeFrom(const CMD_S_GameStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_GameStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_deskdata()->::Common::GameDeskInfo::MergeFrom(from.deskdata());
    }
    if (cached_has_bits & 0x00000002u) {
      cbtimeleave_ = from.cbtimeleave_;
    }
    if (cached_has_bits & 0x00000004u) {
      nchiprobotcount_ = from.nchiprobotcount_;
    }
    if (cached_has_bits & 0x00000008u) {
      lusermaxscore_ = from.lusermaxscore_;
    }
    if (cached_has_bits & 0x00000010u) {
      luserscore_ = from.luserscore_;
    }
    if (cached_has_bits & 0x00000020u) {
      nroundcount_ = from.nroundcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_GameStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_GameStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_GameStart::CopyFrom(const CMD_S_GameStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_GameStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_GameStart::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_deskdata()) {
    if (!this->deskdata_->IsInitialized()) return false;
  }
  return true;
}

void CMD_S_GameStart::Swap(CMD_S_GameStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_GameStart::InternalSwap(CMD_S_GameStart* other) {
  using std::swap;
  swap(deskdata_, other->deskdata_);
  swap(cbtimeleave_, other->cbtimeleave_);
  swap(nchiprobotcount_, other->nchiprobotcount_);
  swap(lusermaxscore_, other->lusermaxscore_);
  swap(luserscore_, other->luserscore_);
  swap(nroundcount_, other->nroundcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_GameStart::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerScoreValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerScoreValue::kUserIdFieldNumber;
const int PlayerScoreValue::kReturnScoreFieldNumber;
const int PlayerScoreValue::kUserScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerScoreValue::PlayerScoreValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerScoreValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.PlayerScoreValue)
}
PlayerScoreValue::PlayerScoreValue(const PlayerScoreValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&returnscore_, &from.returnscore_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&returnscore_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:Common.PlayerScoreValue)
}

void PlayerScoreValue::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&returnscore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&returnscore_)) + sizeof(userid_));
}

PlayerScoreValue::~PlayerScoreValue() {
  // @@protoc_insertion_point(destructor:Common.PlayerScoreValue)
  SharedDtor();
}

void PlayerScoreValue::SharedDtor() {
}

void PlayerScoreValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerScoreValue::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerScoreValue& PlayerScoreValue::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerScoreValue();
  return *internal_default_instance();
}

PlayerScoreValue* PlayerScoreValue::New(::google::protobuf::Arena* arena) const {
  PlayerScoreValue* n = new PlayerScoreValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerScoreValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.PlayerScoreValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&returnscore_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userid_) -
        reinterpret_cast<char*>(&returnscore_)) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerScoreValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.PlayerScoreValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double returnScore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_returnscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &returnscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double userScore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_userscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &userscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.PlayerScoreValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.PlayerScoreValue)
  return false;
#undef DO_
}

void PlayerScoreValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.PlayerScoreValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // required double returnScore = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->returnscore(), output);
  }

  // optional double userScore = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->userscore(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.PlayerScoreValue)
}

::google::protobuf::uint8* PlayerScoreValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.PlayerScoreValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // required double returnScore = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->returnscore(), target);
  }

  // optional double userScore = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->userscore(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.PlayerScoreValue)
  return target;
}

size_t PlayerScoreValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.PlayerScoreValue)
  size_t total_size = 0;

  if (has_returnscore()) {
    // required double returnScore = 2;
    total_size += 1 + 8;
  }

  if (has_userid()) {
    // required int32 userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  return total_size;
}
size_t PlayerScoreValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.PlayerScoreValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required double returnScore = 2;
    total_size += 1 + 8;

    // required int32 userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional double userScore = 3;
  if (has_userscore()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerScoreValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.PlayerScoreValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerScoreValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerScoreValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.PlayerScoreValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.PlayerScoreValue)
    MergeFrom(*source);
  }
}

void PlayerScoreValue::MergeFrom(const PlayerScoreValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.PlayerScoreValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      returnscore_ = from.returnscore_;
    }
    if (cached_has_bits & 0x00000002u) {
      userscore_ = from.userscore_;
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerScoreValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.PlayerScoreValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerScoreValue::CopyFrom(const PlayerScoreValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.PlayerScoreValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerScoreValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void PlayerScoreValue::Swap(PlayerScoreValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerScoreValue::InternalSwap(PlayerScoreValue* other) {
  using std::swap;
  swap(returnscore_, other->returnscore_);
  swap(userscore_, other->userscore_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerScoreValue::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_GameEnd::InitAsDefaultInstance() {
  ::Common::_CMD_S_GameEnd_default_instance_._instance.get_mutable()->deskdata_ = const_cast< ::Common::GameDeskInfo*>(
      ::Common::GameDeskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_GameEnd::kDeskDataFieldNumber;
const int CMD_S_GameEnd::kCbTimeLeaveFieldNumber;
const int CMD_S_GameEnd::kGameEndScoreFieldNumber;
const int CMD_S_GameEnd::kLUserMaxScoreFieldNumber;
const int CMD_S_GameEnd::kLUserScoreFieldNumber;
const int CMD_S_GameEnd::kLRevenueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_GameEnd::CMD_S_GameEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_GameEnd();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_GameEnd)
}
CMD_S_GameEnd::CMD_S_GameEnd(const CMD_S_GameEnd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gameendscore_(from.gameendscore_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deskdata()) {
    deskdata_ = new ::Common::GameDeskInfo(*from.deskdata_);
  } else {
    deskdata_ = NULL;
  }
  ::memcpy(&lusermaxscore_, &from.lusermaxscore_,
    static_cast<size_t>(reinterpret_cast<char*>(&cbtimeleave_) -
    reinterpret_cast<char*>(&lusermaxscore_)) + sizeof(cbtimeleave_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_GameEnd)
}

void CMD_S_GameEnd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&deskdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cbtimeleave_) -
      reinterpret_cast<char*>(&deskdata_)) + sizeof(cbtimeleave_));
}

CMD_S_GameEnd::~CMD_S_GameEnd() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_GameEnd)
  SharedDtor();
}

void CMD_S_GameEnd::SharedDtor() {
  if (this != internal_default_instance()) delete deskdata_;
}

void CMD_S_GameEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_GameEnd::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_GameEnd& CMD_S_GameEnd::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_GameEnd();
  return *internal_default_instance();
}

CMD_S_GameEnd* CMD_S_GameEnd::New(::google::protobuf::Arena* arena) const {
  CMD_S_GameEnd* n = new CMD_S_GameEnd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_GameEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_GameEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gameendscore_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(deskdata_ != NULL);
    deskdata_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&lusermaxscore_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cbtimeleave_) -
        reinterpret_cast<char*>(&lusermaxscore_)) + sizeof(cbtimeleave_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_GameEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_GameEnd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.GameDeskInfo DeskData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbTimeLeave = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cbtimeleave();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbtimeleave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.PlayerScoreValue gameEndScore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_gameendscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserMaxScore = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_lusermaxscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lusermaxscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserScore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_luserscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &luserscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lRevenue = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_lrevenue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lrevenue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_GameEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_GameEnd)
  return false;
#undef DO_
}

void CMD_S_GameEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_GameEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deskdata_, output);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cbtimeleave(), output);
  }

  // repeated .Common.PlayerScoreValue gameEndScore = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gameendscore_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gameendscore(static_cast<int>(i)), output);
  }

  // required double lUserMaxScore = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lusermaxscore(), output);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->luserscore(), output);
  }

  // required double lRevenue = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->lrevenue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_GameEnd)
}

::google::protobuf::uint8* CMD_S_GameEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_GameEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->deskdata_, deterministic, target);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cbtimeleave(), target);
  }

  // repeated .Common.PlayerScoreValue gameEndScore = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gameendscore_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->gameendscore(static_cast<int>(i)), deterministic, target);
  }

  // required double lUserMaxScore = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lusermaxscore(), target);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->luserscore(), target);
  }

  // required double lRevenue = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->lrevenue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_GameEnd)
  return target;
}

size_t CMD_S_GameEnd::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_GameEnd)
  size_t total_size = 0;

  if (has_deskdata()) {
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);
  }

  if (has_lusermaxscore()) {
    // required double lUserMaxScore = 4;
    total_size += 1 + 8;
  }

  if (has_luserscore()) {
    // required double lUserScore = 5;
    total_size += 1 + 8;
  }

  if (has_lrevenue()) {
    // required double lRevenue = 6;
    total_size += 1 + 8;
  }

  if (has_cbtimeleave()) {
    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());
  }

  return total_size;
}
size_t CMD_S_GameEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_GameEnd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);

    // required double lUserMaxScore = 4;
    total_size += 1 + 8;

    // required double lUserScore = 5;
    total_size += 1 + 8;

    // required double lRevenue = 6;
    total_size += 1 + 8;

    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Common.PlayerScoreValue gameEndScore = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->gameendscore_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gameendscore(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_GameEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_GameEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_GameEnd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_GameEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_GameEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_GameEnd)
    MergeFrom(*source);
  }
}

void CMD_S_GameEnd::MergeFrom(const CMD_S_GameEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_GameEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gameendscore_.MergeFrom(from.gameendscore_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_deskdata()->::Common::GameDeskInfo::MergeFrom(from.deskdata());
    }
    if (cached_has_bits & 0x00000002u) {
      lusermaxscore_ = from.lusermaxscore_;
    }
    if (cached_has_bits & 0x00000004u) {
      luserscore_ = from.luserscore_;
    }
    if (cached_has_bits & 0x00000008u) {
      lrevenue_ = from.lrevenue_;
    }
    if (cached_has_bits & 0x00000010u) {
      cbtimeleave_ = from.cbtimeleave_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_GameEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_GameEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_GameEnd::CopyFrom(const CMD_S_GameEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_GameEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_GameEnd::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->gameendscore())) return false;
  if (has_deskdata()) {
    if (!this->deskdata_->IsInitialized()) return false;
  }
  return true;
}

void CMD_S_GameEnd::Swap(CMD_S_GameEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_GameEnd::InternalSwap(CMD_S_GameEnd* other) {
  using std::swap;
  gameendscore_.InternalSwap(&other->gameendscore_);
  swap(deskdata_, other->deskdata_);
  swap(lusermaxscore_, other->lusermaxscore_);
  swap(luserscore_, other->luserscore_);
  swap(lrevenue_, other->lrevenue_);
  swap(cbtimeleave_, other->cbtimeleave_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_GameEnd::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_BankerApplyEnd::InitAsDefaultInstance() {
  ::Common::_CMD_S_BankerApplyEnd_default_instance_._instance.get_mutable()->deskdata_ = const_cast< ::Common::GameDeskInfo*>(
      ::Common::GameDeskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_BankerApplyEnd::kDeskDataFieldNumber;
const int CMD_S_BankerApplyEnd::kCbTimeLeaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_BankerApplyEnd::CMD_S_BankerApplyEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_BankerApplyEnd();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_BankerApplyEnd)
}
CMD_S_BankerApplyEnd::CMD_S_BankerApplyEnd(const CMD_S_BankerApplyEnd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deskdata()) {
    deskdata_ = new ::Common::GameDeskInfo(*from.deskdata_);
  } else {
    deskdata_ = NULL;
  }
  cbtimeleave_ = from.cbtimeleave_;
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_BankerApplyEnd)
}

void CMD_S_BankerApplyEnd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&deskdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cbtimeleave_) -
      reinterpret_cast<char*>(&deskdata_)) + sizeof(cbtimeleave_));
}

CMD_S_BankerApplyEnd::~CMD_S_BankerApplyEnd() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_BankerApplyEnd)
  SharedDtor();
}

void CMD_S_BankerApplyEnd::SharedDtor() {
  if (this != internal_default_instance()) delete deskdata_;
}

void CMD_S_BankerApplyEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_BankerApplyEnd::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_BankerApplyEnd& CMD_S_BankerApplyEnd::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_BankerApplyEnd();
  return *internal_default_instance();
}

CMD_S_BankerApplyEnd* CMD_S_BankerApplyEnd::New(::google::protobuf::Arena* arena) const {
  CMD_S_BankerApplyEnd* n = new CMD_S_BankerApplyEnd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_BankerApplyEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_BankerApplyEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(deskdata_ != NULL);
    deskdata_->Clear();
  }
  cbtimeleave_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_BankerApplyEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_BankerApplyEnd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.GameDeskInfo DeskData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbTimeLeave = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cbtimeleave();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbtimeleave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_BankerApplyEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_BankerApplyEnd)
  return false;
#undef DO_
}

void CMD_S_BankerApplyEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_BankerApplyEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deskdata_, output);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cbtimeleave(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_BankerApplyEnd)
}

::google::protobuf::uint8* CMD_S_BankerApplyEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_BankerApplyEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->deskdata_, deterministic, target);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cbtimeleave(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_BankerApplyEnd)
  return target;
}

size_t CMD_S_BankerApplyEnd::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_BankerApplyEnd)
  size_t total_size = 0;

  if (has_deskdata()) {
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);
  }

  if (has_cbtimeleave()) {
    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());
  }

  return total_size;
}
size_t CMD_S_BankerApplyEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_BankerApplyEnd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);

    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_BankerApplyEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_BankerApplyEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_BankerApplyEnd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_BankerApplyEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_BankerApplyEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_BankerApplyEnd)
    MergeFrom(*source);
  }
}

void CMD_S_BankerApplyEnd::MergeFrom(const CMD_S_BankerApplyEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_BankerApplyEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_deskdata()->::Common::GameDeskInfo::MergeFrom(from.deskdata());
    }
    if (cached_has_bits & 0x00000002u) {
      cbtimeleave_ = from.cbtimeleave_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_BankerApplyEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_BankerApplyEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_BankerApplyEnd::CopyFrom(const CMD_S_BankerApplyEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_BankerApplyEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_BankerApplyEnd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_deskdata()) {
    if (!this->deskdata_->IsInitialized()) return false;
  }
  return true;
}

void CMD_S_BankerApplyEnd::Swap(CMD_S_BankerApplyEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_BankerApplyEnd::InternalSwap(CMD_S_BankerApplyEnd* other) {
  using std::swap;
  swap(deskdata_, other->deskdata_);
  swap(cbtimeleave_, other->cbtimeleave_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_BankerApplyEnd::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_JettonEnd::InitAsDefaultInstance() {
  ::Common::_CMD_S_JettonEnd_default_instance_._instance.get_mutable()->deskdata_ = const_cast< ::Common::GameDeskInfo*>(
      ::Common::GameDeskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_JettonEnd::kDeskDataFieldNumber;
const int CMD_S_JettonEnd::kCbTimeLeaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_JettonEnd::CMD_S_JettonEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_JettonEnd();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_JettonEnd)
}
CMD_S_JettonEnd::CMD_S_JettonEnd(const CMD_S_JettonEnd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deskdata()) {
    deskdata_ = new ::Common::GameDeskInfo(*from.deskdata_);
  } else {
    deskdata_ = NULL;
  }
  cbtimeleave_ = from.cbtimeleave_;
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_JettonEnd)
}

void CMD_S_JettonEnd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&deskdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cbtimeleave_) -
      reinterpret_cast<char*>(&deskdata_)) + sizeof(cbtimeleave_));
}

CMD_S_JettonEnd::~CMD_S_JettonEnd() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_JettonEnd)
  SharedDtor();
}

void CMD_S_JettonEnd::SharedDtor() {
  if (this != internal_default_instance()) delete deskdata_;
}

void CMD_S_JettonEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_JettonEnd::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_JettonEnd& CMD_S_JettonEnd::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_JettonEnd();
  return *internal_default_instance();
}

CMD_S_JettonEnd* CMD_S_JettonEnd::New(::google::protobuf::Arena* arena) const {
  CMD_S_JettonEnd* n = new CMD_S_JettonEnd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_JettonEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_JettonEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(deskdata_ != NULL);
    deskdata_->Clear();
  }
  cbtimeleave_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_JettonEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_JettonEnd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.GameDeskInfo DeskData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbTimeLeave = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cbtimeleave();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbtimeleave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_JettonEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_JettonEnd)
  return false;
#undef DO_
}

void CMD_S_JettonEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_JettonEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deskdata_, output);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cbtimeleave(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_JettonEnd)
}

::google::protobuf::uint8* CMD_S_JettonEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_JettonEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->deskdata_, deterministic, target);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cbtimeleave(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_JettonEnd)
  return target;
}

size_t CMD_S_JettonEnd::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_JettonEnd)
  size_t total_size = 0;

  if (has_deskdata()) {
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);
  }

  if (has_cbtimeleave()) {
    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());
  }

  return total_size;
}
size_t CMD_S_JettonEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_JettonEnd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);

    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_JettonEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_JettonEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_JettonEnd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_JettonEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_JettonEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_JettonEnd)
    MergeFrom(*source);
  }
}

void CMD_S_JettonEnd::MergeFrom(const CMD_S_JettonEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_JettonEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_deskdata()->::Common::GameDeskInfo::MergeFrom(from.deskdata());
    }
    if (cached_has_bits & 0x00000002u) {
      cbtimeleave_ = from.cbtimeleave_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_JettonEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_JettonEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_JettonEnd::CopyFrom(const CMD_S_JettonEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_JettonEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_JettonEnd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_deskdata()) {
    if (!this->deskdata_->IsInitialized()) return false;
  }
  return true;
}

void CMD_S_JettonEnd::Swap(CMD_S_JettonEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_JettonEnd::InternalSwap(CMD_S_JettonEnd* other) {
  using std::swap;
  swap(deskdata_, other->deskdata_);
  swap(cbtimeleave_, other->cbtimeleave_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_JettonEnd::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_OpenCardEnd::InitAsDefaultInstance() {
  ::Common::_CMD_S_OpenCardEnd_default_instance_._instance.get_mutable()->deskdata_ = const_cast< ::Common::GameDeskInfo*>(
      ::Common::GameDeskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_OpenCardEnd::kDeskDataFieldNumber;
const int CMD_S_OpenCardEnd::kCbTimeLeaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_OpenCardEnd::CMD_S_OpenCardEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_OpenCardEnd();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_OpenCardEnd)
}
CMD_S_OpenCardEnd::CMD_S_OpenCardEnd(const CMD_S_OpenCardEnd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deskdata()) {
    deskdata_ = new ::Common::GameDeskInfo(*from.deskdata_);
  } else {
    deskdata_ = NULL;
  }
  cbtimeleave_ = from.cbtimeleave_;
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_OpenCardEnd)
}

void CMD_S_OpenCardEnd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&deskdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cbtimeleave_) -
      reinterpret_cast<char*>(&deskdata_)) + sizeof(cbtimeleave_));
}

CMD_S_OpenCardEnd::~CMD_S_OpenCardEnd() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_OpenCardEnd)
  SharedDtor();
}

void CMD_S_OpenCardEnd::SharedDtor() {
  if (this != internal_default_instance()) delete deskdata_;
}

void CMD_S_OpenCardEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_OpenCardEnd::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_OpenCardEnd& CMD_S_OpenCardEnd::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_OpenCardEnd();
  return *internal_default_instance();
}

CMD_S_OpenCardEnd* CMD_S_OpenCardEnd::New(::google::protobuf::Arena* arena) const {
  CMD_S_OpenCardEnd* n = new CMD_S_OpenCardEnd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_OpenCardEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_OpenCardEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(deskdata_ != NULL);
    deskdata_->Clear();
  }
  cbtimeleave_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_OpenCardEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_OpenCardEnd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.GameDeskInfo DeskData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbTimeLeave = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cbtimeleave();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbtimeleave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_OpenCardEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_OpenCardEnd)
  return false;
#undef DO_
}

void CMD_S_OpenCardEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_OpenCardEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deskdata_, output);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cbtimeleave(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_OpenCardEnd)
}

::google::protobuf::uint8* CMD_S_OpenCardEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_OpenCardEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->deskdata_, deterministic, target);
  }

  // required int32 cbTimeLeave = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cbtimeleave(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_OpenCardEnd)
  return target;
}

size_t CMD_S_OpenCardEnd::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_OpenCardEnd)
  size_t total_size = 0;

  if (has_deskdata()) {
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);
  }

  if (has_cbtimeleave()) {
    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());
  }

  return total_size;
}
size_t CMD_S_OpenCardEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_OpenCardEnd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Common.GameDeskInfo DeskData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);

    // required int32 cbTimeLeave = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbtimeleave());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_OpenCardEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_OpenCardEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_OpenCardEnd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_OpenCardEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_OpenCardEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_OpenCardEnd)
    MergeFrom(*source);
  }
}

void CMD_S_OpenCardEnd::MergeFrom(const CMD_S_OpenCardEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_OpenCardEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_deskdata()->::Common::GameDeskInfo::MergeFrom(from.deskdata());
    }
    if (cached_has_bits & 0x00000002u) {
      cbtimeleave_ = from.cbtimeleave_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_OpenCardEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_OpenCardEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_OpenCardEnd::CopyFrom(const CMD_S_OpenCardEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_OpenCardEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_OpenCardEnd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_deskdata()) {
    if (!this->deskdata_->IsInitialized()) return false;
  }
  return true;
}

void CMD_S_OpenCardEnd::Swap(CMD_S_OpenCardEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_OpenCardEnd::InternalSwap(CMD_S_OpenCardEnd* other) {
  using std::swap;
  swap(deskdata_, other->deskdata_);
  swap(cbtimeleave_, other->cbtimeleave_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_OpenCardEnd::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_User_Get_Card::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_User_Get_Card::kDwUserIDFieldNumber;
const int CMD_S_User_Get_Card::kCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_User_Get_Card::CMD_S_User_Get_Card()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Get_Card();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_User_Get_Card)
}
CMD_S_User_Get_Card::CMD_S_User_Get_Card(const CMD_S_User_Get_Card& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dwuserid_ = from.dwuserid_;
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_User_Get_Card)
}

void CMD_S_User_Get_Card::SharedCtor() {
  _cached_size_ = 0;
  dwuserid_ = 0;
}

CMD_S_User_Get_Card::~CMD_S_User_Get_Card() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_User_Get_Card)
  SharedDtor();
}

void CMD_S_User_Get_Card::SharedDtor() {
}

void CMD_S_User_Get_Card::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_User_Get_Card::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_User_Get_Card& CMD_S_User_Get_Card::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Get_Card();
  return *internal_default_instance();
}

CMD_S_User_Get_Card* CMD_S_User_Get_Card::New(::google::protobuf::Arena* arena) const {
  CMD_S_User_Get_Card* n = new CMD_S_User_Get_Card;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_User_Get_Card::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_User_Get_Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cards_.Clear();
  dwuserid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_User_Get_Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_User_Get_Card)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dwUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dwuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Cards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_User_Get_Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_User_Get_Card)
  return false;
#undef DO_
}

void CMD_S_User_Get_Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_User_Get_Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dwuserid(), output);
  }

  // repeated int32 Cards = 2;
  for (int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->cards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_User_Get_Card)
}

::google::protobuf::uint8* CMD_S_User_Get_Card::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_User_Get_Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dwuserid(), target);
  }

  // repeated int32 Cards = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->cards_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_User_Get_Card)
  return target;
}

size_t CMD_S_User_Get_Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_User_Get_Card)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 dwUserID = 1;
  if (has_dwuserid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());
  }
  // repeated int32 Cards = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cards_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_User_Get_Card::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_User_Get_Card)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_User_Get_Card* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_User_Get_Card>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_User_Get_Card)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_User_Get_Card)
    MergeFrom(*source);
  }
}

void CMD_S_User_Get_Card::MergeFrom(const CMD_S_User_Get_Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_User_Get_Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  if (from.has_dwuserid()) {
    set_dwuserid(from.dwuserid());
  }
}

void CMD_S_User_Get_Card::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_User_Get_Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_User_Get_Card::CopyFrom(const CMD_S_User_Get_Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_User_Get_Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_User_Get_Card::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMD_S_User_Get_Card::Swap(CMD_S_User_Get_Card* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_User_Get_Card::InternalSwap(CMD_S_User_Get_Card* other) {
  using std::swap;
  cards_.InternalSwap(&other->cards_);
  swap(dwuserid_, other->dwuserid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_User_Get_Card::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_User_Out_Card::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_User_Out_Card::kDwUserIDFieldNumber;
const int CMD_S_User_Out_Card::kCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_User_Out_Card::CMD_S_User_Out_Card()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Out_Card();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_User_Out_Card)
}
CMD_S_User_Out_Card::CMD_S_User_Out_Card(const CMD_S_User_Out_Card& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dwuserid_ = from.dwuserid_;
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_User_Out_Card)
}

void CMD_S_User_Out_Card::SharedCtor() {
  _cached_size_ = 0;
  dwuserid_ = 0;
}

CMD_S_User_Out_Card::~CMD_S_User_Out_Card() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_User_Out_Card)
  SharedDtor();
}

void CMD_S_User_Out_Card::SharedDtor() {
}

void CMD_S_User_Out_Card::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_User_Out_Card::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_User_Out_Card& CMD_S_User_Out_Card::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Out_Card();
  return *internal_default_instance();
}

CMD_S_User_Out_Card* CMD_S_User_Out_Card::New(::google::protobuf::Arena* arena) const {
  CMD_S_User_Out_Card* n = new CMD_S_User_Out_Card;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_User_Out_Card::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_User_Out_Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cards_.Clear();
  dwuserid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_User_Out_Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_User_Out_Card)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dwUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dwuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Cards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_User_Out_Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_User_Out_Card)
  return false;
#undef DO_
}

void CMD_S_User_Out_Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_User_Out_Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dwuserid(), output);
  }

  // repeated int32 Cards = 2;
  for (int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->cards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_User_Out_Card)
}

::google::protobuf::uint8* CMD_S_User_Out_Card::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_User_Out_Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dwuserid(), target);
  }

  // repeated int32 Cards = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->cards_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_User_Out_Card)
  return target;
}

size_t CMD_S_User_Out_Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_User_Out_Card)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 dwUserID = 1;
  if (has_dwuserid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());
  }
  // repeated int32 Cards = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cards_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_User_Out_Card::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_User_Out_Card)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_User_Out_Card* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_User_Out_Card>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_User_Out_Card)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_User_Out_Card)
    MergeFrom(*source);
  }
}

void CMD_S_User_Out_Card::MergeFrom(const CMD_S_User_Out_Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_User_Out_Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  if (from.has_dwuserid()) {
    set_dwuserid(from.dwuserid());
  }
}

void CMD_S_User_Out_Card::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_User_Out_Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_User_Out_Card::CopyFrom(const CMD_S_User_Out_Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_User_Out_Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_User_Out_Card::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMD_S_User_Out_Card::Swap(CMD_S_User_Out_Card* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_User_Out_Card::InternalSwap(CMD_S_User_Out_Card* other) {
  using std::swap;
  cards_.InternalSwap(&other->cards_);
  swap(dwuserid_, other->dwuserid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_User_Out_Card::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_Open_cardSucees::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_Open_cardSucees::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_Open_cardSucees::CMD_S_Open_cardSucees()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_Open_cardSucees();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_Open_cardSucees)
}
CMD_S_Open_cardSucees::CMD_S_Open_cardSucees(const CMD_S_Open_cardSucees& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_Open_cardSucees)
}

void CMD_S_Open_cardSucees::SharedCtor() {
  _cached_size_ = 0;
}

CMD_S_Open_cardSucees::~CMD_S_Open_cardSucees() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_Open_cardSucees)
  SharedDtor();
}

void CMD_S_Open_cardSucees::SharedDtor() {
}

void CMD_S_Open_cardSucees::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_Open_cardSucees::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_Open_cardSucees& CMD_S_Open_cardSucees::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_Open_cardSucees();
  return *internal_default_instance();
}

CMD_S_Open_cardSucees* CMD_S_Open_cardSucees::New(::google::protobuf::Arena* arena) const {
  CMD_S_Open_cardSucees* n = new CMD_S_Open_cardSucees;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_Open_cardSucees::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_Open_cardSucees)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_Open_cardSucees::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_Open_cardSucees)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.PlayerListItem players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_Open_cardSucees)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_Open_cardSucees)
  return false;
#undef DO_
}

void CMD_S_Open_cardSucees::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_Open_cardSucees)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Common.PlayerListItem players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->players(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_Open_cardSucees)
}

::google::protobuf::uint8* CMD_S_Open_cardSucees::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_Open_cardSucees)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Common.PlayerListItem players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_Open_cardSucees)
  return target;
}

size_t CMD_S_Open_cardSucees::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_Open_cardSucees)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .Common.PlayerListItem players = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_Open_cardSucees::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_Open_cardSucees)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_Open_cardSucees* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_Open_cardSucees>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_Open_cardSucees)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_Open_cardSucees)
    MergeFrom(*source);
  }
}

void CMD_S_Open_cardSucees::MergeFrom(const CMD_S_Open_cardSucees& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_Open_cardSucees)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
}

void CMD_S_Open_cardSucees::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_Open_cardSucees)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_Open_cardSucees::CopyFrom(const CMD_S_Open_cardSucees& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_Open_cardSucees)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_Open_cardSucees::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->players())) return false;
  return true;
}

void CMD_S_Open_cardSucees::Swap(CMD_S_Open_cardSucees* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_Open_cardSucees::InternalSwap(CMD_S_Open_cardSucees* other) {
  using std::swap;
  players_.InternalSwap(&other->players_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_Open_cardSucees::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_C_Out_Card_Req::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_C_Out_Card_Req::kDwUserIDFieldNumber;
const int CMD_C_Out_Card_Req::kCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_C_Out_Card_Req::CMD_C_Out_Card_Req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_Out_Card_Req();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_C_Out_Card_Req)
}
CMD_C_Out_Card_Req::CMD_C_Out_Card_Req(const CMD_C_Out_Card_Req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cards_, &from.cards_,
    static_cast<size_t>(reinterpret_cast<char*>(&dwuserid_) -
    reinterpret_cast<char*>(&cards_)) + sizeof(dwuserid_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_C_Out_Card_Req)
}

void CMD_C_Out_Card_Req::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&cards_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dwuserid_) -
      reinterpret_cast<char*>(&cards_)) + sizeof(dwuserid_));
}

CMD_C_Out_Card_Req::~CMD_C_Out_Card_Req() {
  // @@protoc_insertion_point(destructor:Common.CMD_C_Out_Card_Req)
  SharedDtor();
}

void CMD_C_Out_Card_Req::SharedDtor() {
}

void CMD_C_Out_Card_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_C_Out_Card_Req::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_C_Out_Card_Req& CMD_C_Out_Card_Req::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_Out_Card_Req();
  return *internal_default_instance();
}

CMD_C_Out_Card_Req* CMD_C_Out_Card_Req::New(::google::protobuf::Arena* arena) const {
  CMD_C_Out_Card_Req* n = new CMD_C_Out_Card_Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_C_Out_Card_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_C_Out_Card_Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&cards_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dwuserid_) -
        reinterpret_cast<char*>(&cards_)) + sizeof(dwuserid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_C_Out_Card_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_C_Out_Card_Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dwUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dwuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Cards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_cards();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cards_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_C_Out_Card_Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_C_Out_Card_Req)
  return false;
#undef DO_
}

void CMD_C_Out_Card_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_C_Out_Card_Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dwuserid(), output);
  }

  // required double Cards = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->cards(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_C_Out_Card_Req)
}

::google::protobuf::uint8* CMD_C_Out_Card_Req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_C_Out_Card_Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dwuserid(), target);
  }

  // required double Cards = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->cards(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_C_Out_Card_Req)
  return target;
}

size_t CMD_C_Out_Card_Req::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_C_Out_Card_Req)
  size_t total_size = 0;

  if (has_cards()) {
    // required double Cards = 2;
    total_size += 1 + 8;
  }

  if (has_dwuserid()) {
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());
  }

  return total_size;
}
size_t CMD_C_Out_Card_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_C_Out_Card_Req)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double Cards = 2;
    total_size += 1 + 8;

    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_C_Out_Card_Req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_C_Out_Card_Req)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_C_Out_Card_Req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_C_Out_Card_Req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_C_Out_Card_Req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_C_Out_Card_Req)
    MergeFrom(*source);
  }
}

void CMD_C_Out_Card_Req::MergeFrom(const CMD_C_Out_Card_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_C_Out_Card_Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      cards_ = from.cards_;
    }
    if (cached_has_bits & 0x00000002u) {
      dwuserid_ = from.dwuserid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_C_Out_Card_Req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_C_Out_Card_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_C_Out_Card_Req::CopyFrom(const CMD_C_Out_Card_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_C_Out_Card_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_C_Out_Card_Req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMD_C_Out_Card_Req::Swap(CMD_C_Out_Card_Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_C_Out_Card_Req::InternalSwap(CMD_C_Out_Card_Req* other) {
  using std::swap;
  swap(cards_, other->cards_);
  swap(dwuserid_, other->dwuserid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_C_Out_Card_Req::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_C_SyncGameDesk_Req::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_C_SyncGameDesk_Req::CMD_C_SyncGameDesk_Req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_SyncGameDesk_Req();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_C_SyncGameDesk_Req)
}
CMD_C_SyncGameDesk_Req::CMD_C_SyncGameDesk_Req(const CMD_C_SyncGameDesk_Req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Common.CMD_C_SyncGameDesk_Req)
}

void CMD_C_SyncGameDesk_Req::SharedCtor() {
  _cached_size_ = 0;
}

CMD_C_SyncGameDesk_Req::~CMD_C_SyncGameDesk_Req() {
  // @@protoc_insertion_point(destructor:Common.CMD_C_SyncGameDesk_Req)
  SharedDtor();
}

void CMD_C_SyncGameDesk_Req::SharedDtor() {
}

void CMD_C_SyncGameDesk_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_C_SyncGameDesk_Req::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_C_SyncGameDesk_Req& CMD_C_SyncGameDesk_Req::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_SyncGameDesk_Req();
  return *internal_default_instance();
}

CMD_C_SyncGameDesk_Req* CMD_C_SyncGameDesk_Req::New(::google::protobuf::Arena* arena) const {
  CMD_C_SyncGameDesk_Req* n = new CMD_C_SyncGameDesk_Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_C_SyncGameDesk_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_C_SyncGameDesk_Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_C_SyncGameDesk_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_C_SyncGameDesk_Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_C_SyncGameDesk_Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_C_SyncGameDesk_Req)
  return false;
#undef DO_
}

void CMD_C_SyncGameDesk_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_C_SyncGameDesk_Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_C_SyncGameDesk_Req)
}

::google::protobuf::uint8* CMD_C_SyncGameDesk_Req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_C_SyncGameDesk_Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_C_SyncGameDesk_Req)
  return target;
}

size_t CMD_C_SyncGameDesk_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_C_SyncGameDesk_Req)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_C_SyncGameDesk_Req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_C_SyncGameDesk_Req)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_C_SyncGameDesk_Req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_C_SyncGameDesk_Req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_C_SyncGameDesk_Req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_C_SyncGameDesk_Req)
    MergeFrom(*source);
  }
}

void CMD_C_SyncGameDesk_Req::MergeFrom(const CMD_C_SyncGameDesk_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_C_SyncGameDesk_Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMD_C_SyncGameDesk_Req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_C_SyncGameDesk_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_C_SyncGameDesk_Req::CopyFrom(const CMD_C_SyncGameDesk_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_C_SyncGameDesk_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_C_SyncGameDesk_Req::IsInitialized() const {
  return true;
}

void CMD_C_SyncGameDesk_Req::Swap(CMD_C_SyncGameDesk_Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_C_SyncGameDesk_Req::InternalSwap(CMD_C_SyncGameDesk_Req* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_C_SyncGameDesk_Req::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_Out_Card_Ack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_Out_Card_Ack::kErrorCodeFieldNumber;
const int CMD_S_Out_Card_Ack::kErrorMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_Out_Card_Ack::CMD_S_Out_Card_Ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_Out_Card_Ack();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_Out_Card_Ack)
}
CMD_S_Out_Card_Ack::CMD_S_Out_Card_Ack(const CMD_S_Out_Card_Ack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errormsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_errormsg()) {
    errormsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormsg_);
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_Out_Card_Ack)
}

void CMD_S_Out_Card_Ack::SharedCtor() {
  _cached_size_ = 0;
  errormsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 0;
}

CMD_S_Out_Card_Ack::~CMD_S_Out_Card_Ack() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_Out_Card_Ack)
  SharedDtor();
}

void CMD_S_Out_Card_Ack::SharedDtor() {
  errormsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_S_Out_Card_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_Out_Card_Ack::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_Out_Card_Ack& CMD_S_Out_Card_Ack::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_Out_Card_Ack();
  return *internal_default_instance();
}

CMD_S_Out_Card_Ack* CMD_S_Out_Card_Ack::New(::google::protobuf::Arena* arena) const {
  CMD_S_Out_Card_Ack* n = new CMD_S_Out_Card_Ack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_Out_Card_Ack::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_Out_Card_Ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!errormsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*errormsg_.UnsafeRawStringPointer())->clear();
  }
  errorcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_Out_Card_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_Out_Card_Ack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string errorMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errormsg().data(), static_cast<int>(this->errormsg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Common.CMD_S_Out_Card_Ack.errorMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_Out_Card_Ack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_Out_Card_Ack)
  return false;
#undef DO_
}

void CMD_S_Out_Card_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_Out_Card_Ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errorCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string errorMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormsg().data(), static_cast<int>(this->errormsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_S_Out_Card_Ack.errorMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errormsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_Out_Card_Ack)
}

::google::protobuf::uint8* CMD_S_Out_Card_Ack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_Out_Card_Ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errorCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string errorMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormsg().data(), static_cast<int>(this->errormsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_S_Out_Card_Ack.errorMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errormsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_Out_Card_Ack)
  return target;
}

size_t CMD_S_Out_Card_Ack::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_Out_Card_Ack)
  size_t total_size = 0;

  if (has_errormsg()) {
    // required string errorMsg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errormsg());
  }

  if (has_errorcode()) {
    // required int32 errorCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  return total_size;
}
size_t CMD_S_Out_Card_Ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_Out_Card_Ack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string errorMsg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errormsg());

    // required int32 errorCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_Out_Card_Ack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_Out_Card_Ack)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_Out_Card_Ack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_Out_Card_Ack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_Out_Card_Ack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_Out_Card_Ack)
    MergeFrom(*source);
  }
}

void CMD_S_Out_Card_Ack::MergeFrom(const CMD_S_Out_Card_Ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_Out_Card_Ack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_errormsg();
      errormsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_Out_Card_Ack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_Out_Card_Ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_Out_Card_Ack::CopyFrom(const CMD_S_Out_Card_Ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_Out_Card_Ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_Out_Card_Ack::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMD_S_Out_Card_Ack::Swap(CMD_S_Out_Card_Ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_Out_Card_Ack::InternalSwap(CMD_S_Out_Card_Ack* other) {
  using std::swap;
  errormsg_.Swap(&other->errormsg_);
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_Out_Card_Ack::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_C_PlaceJet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_C_PlaceJet::kCbJettonAreaFieldNumber;
const int CMD_C_PlaceJet::kLJettonScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_C_PlaceJet::CMD_C_PlaceJet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_PlaceJet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_C_PlaceJet)
}
CMD_C_PlaceJet::CMD_C_PlaceJet(const CMD_C_PlaceJet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ljettonscore_, &from.ljettonscore_,
    static_cast<size_t>(reinterpret_cast<char*>(&cbjettonarea_) -
    reinterpret_cast<char*>(&ljettonscore_)) + sizeof(cbjettonarea_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_C_PlaceJet)
}

void CMD_C_PlaceJet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ljettonscore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cbjettonarea_) -
      reinterpret_cast<char*>(&ljettonscore_)) + sizeof(cbjettonarea_));
}

CMD_C_PlaceJet::~CMD_C_PlaceJet() {
  // @@protoc_insertion_point(destructor:Common.CMD_C_PlaceJet)
  SharedDtor();
}

void CMD_C_PlaceJet::SharedDtor() {
}

void CMD_C_PlaceJet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_C_PlaceJet::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_C_PlaceJet& CMD_C_PlaceJet::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_PlaceJet();
  return *internal_default_instance();
}

CMD_C_PlaceJet* CMD_C_PlaceJet::New(::google::protobuf::Arena* arena) const {
  CMD_C_PlaceJet* n = new CMD_C_PlaceJet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_C_PlaceJet::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_C_PlaceJet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&ljettonscore_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cbjettonarea_) -
        reinterpret_cast<char*>(&ljettonscore_)) + sizeof(cbjettonarea_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_C_PlaceJet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_C_PlaceJet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cbJettonArea = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_cbjettonarea();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbjettonarea_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lJettonScore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_ljettonscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ljettonscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_C_PlaceJet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_C_PlaceJet)
  return false;
#undef DO_
}

void CMD_C_PlaceJet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_C_PlaceJet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 cbJettonArea = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cbjettonarea(), output);
  }

  // required double lJettonScore = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ljettonscore(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_C_PlaceJet)
}

::google::protobuf::uint8* CMD_C_PlaceJet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_C_PlaceJet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 cbJettonArea = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cbjettonarea(), target);
  }

  // required double lJettonScore = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ljettonscore(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_C_PlaceJet)
  return target;
}

size_t CMD_C_PlaceJet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_C_PlaceJet)
  size_t total_size = 0;

  if (has_ljettonscore()) {
    // required double lJettonScore = 2;
    total_size += 1 + 8;
  }

  if (has_cbjettonarea()) {
    // required int32 cbJettonArea = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbjettonarea());
  }

  return total_size;
}
size_t CMD_C_PlaceJet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_C_PlaceJet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double lJettonScore = 2;
    total_size += 1 + 8;

    // required int32 cbJettonArea = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbjettonarea());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_C_PlaceJet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_C_PlaceJet)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_C_PlaceJet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_C_PlaceJet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_C_PlaceJet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_C_PlaceJet)
    MergeFrom(*source);
  }
}

void CMD_C_PlaceJet::MergeFrom(const CMD_C_PlaceJet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_C_PlaceJet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ljettonscore_ = from.ljettonscore_;
    }
    if (cached_has_bits & 0x00000002u) {
      cbjettonarea_ = from.cbjettonarea_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_C_PlaceJet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_C_PlaceJet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_C_PlaceJet::CopyFrom(const CMD_C_PlaceJet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_C_PlaceJet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_C_PlaceJet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMD_C_PlaceJet::Swap(CMD_C_PlaceJet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_C_PlaceJet::InternalSwap(CMD_C_PlaceJet* other) {
  using std::swap;
  swap(ljettonscore_, other->ljettonscore_);
  swap(cbjettonarea_, other->cbjettonarea_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_C_PlaceJet::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_PlaceJettonFail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_PlaceJettonFail::kDwUserIDFieldNumber;
const int CMD_S_PlaceJettonFail::kCbJettonAreaFieldNumber;
const int CMD_S_PlaceJettonFail::kLPlaceScoreFieldNumber;
const int CMD_S_PlaceJettonFail::kCbAndroidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_PlaceJettonFail::CMD_S_PlaceJettonFail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_PlaceJettonFail();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_PlaceJettonFail)
}
CMD_S_PlaceJettonFail::CMD_S_PlaceJettonFail(const CMD_S_PlaceJettonFail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dwuserid_, &from.dwuserid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cbandroid_) -
    reinterpret_cast<char*>(&dwuserid_)) + sizeof(cbandroid_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_PlaceJettonFail)
}

void CMD_S_PlaceJettonFail::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&dwuserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cbandroid_) -
      reinterpret_cast<char*>(&dwuserid_)) + sizeof(cbandroid_));
}

CMD_S_PlaceJettonFail::~CMD_S_PlaceJettonFail() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_PlaceJettonFail)
  SharedDtor();
}

void CMD_S_PlaceJettonFail::SharedDtor() {
}

void CMD_S_PlaceJettonFail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_PlaceJettonFail::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_PlaceJettonFail& CMD_S_PlaceJettonFail::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_PlaceJettonFail();
  return *internal_default_instance();
}

CMD_S_PlaceJettonFail* CMD_S_PlaceJettonFail::New(::google::protobuf::Arena* arena) const {
  CMD_S_PlaceJettonFail* n = new CMD_S_PlaceJettonFail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_PlaceJettonFail::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_PlaceJettonFail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&dwuserid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cbandroid_) -
        reinterpret_cast<char*>(&dwuserid_)) + sizeof(cbandroid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_PlaceJettonFail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_PlaceJettonFail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dwUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dwuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbJettonArea = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cbjettonarea();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbjettonarea_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lPlaceScore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_lplacescore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lplacescore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbAndroid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_cbandroid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbandroid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_PlaceJettonFail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_PlaceJettonFail)
  return false;
#undef DO_
}

void CMD_S_PlaceJettonFail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_PlaceJettonFail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dwuserid(), output);
  }

  // required int32 cbJettonArea = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cbjettonarea(), output);
  }

  // required double lPlaceScore = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->lplacescore(), output);
  }

  // required int32 cbAndroid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cbandroid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_PlaceJettonFail)
}

::google::protobuf::uint8* CMD_S_PlaceJettonFail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_PlaceJettonFail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dwuserid(), target);
  }

  // required int32 cbJettonArea = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cbjettonarea(), target);
  }

  // required double lPlaceScore = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->lplacescore(), target);
  }

  // required int32 cbAndroid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cbandroid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_PlaceJettonFail)
  return target;
}

size_t CMD_S_PlaceJettonFail::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_PlaceJettonFail)
  size_t total_size = 0;

  if (has_dwuserid()) {
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());
  }

  if (has_cbjettonarea()) {
    // required int32 cbJettonArea = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbjettonarea());
  }

  if (has_lplacescore()) {
    // required double lPlaceScore = 3;
    total_size += 1 + 8;
  }

  if (has_cbandroid()) {
    // required int32 cbAndroid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbandroid());
  }

  return total_size;
}
size_t CMD_S_PlaceJettonFail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_PlaceJettonFail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());

    // required int32 cbJettonArea = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbjettonarea());

    // required double lPlaceScore = 3;
    total_size += 1 + 8;

    // required int32 cbAndroid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbandroid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_PlaceJettonFail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_PlaceJettonFail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_PlaceJettonFail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_PlaceJettonFail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_PlaceJettonFail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_PlaceJettonFail)
    MergeFrom(*source);
  }
}

void CMD_S_PlaceJettonFail::MergeFrom(const CMD_S_PlaceJettonFail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_PlaceJettonFail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      dwuserid_ = from.dwuserid_;
    }
    if (cached_has_bits & 0x00000002u) {
      cbjettonarea_ = from.cbjettonarea_;
    }
    if (cached_has_bits & 0x00000004u) {
      lplacescore_ = from.lplacescore_;
    }
    if (cached_has_bits & 0x00000008u) {
      cbandroid_ = from.cbandroid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_PlaceJettonFail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_PlaceJettonFail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_PlaceJettonFail::CopyFrom(const CMD_S_PlaceJettonFail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_PlaceJettonFail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_PlaceJettonFail::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void CMD_S_PlaceJettonFail::Swap(CMD_S_PlaceJettonFail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_PlaceJettonFail::InternalSwap(CMD_S_PlaceJettonFail* other) {
  using std::swap;
  swap(dwuserid_, other->dwuserid_);
  swap(cbjettonarea_, other->cbjettonarea_);
  swap(lplacescore_, other->lplacescore_);
  swap(cbandroid_, other->cbandroid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_PlaceJettonFail::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_PlaceJetSuccess::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_PlaceJetSuccess::kDwUserIDFieldNumber;
const int CMD_S_PlaceJetSuccess::kCbJettonAreaFieldNumber;
const int CMD_S_PlaceJetSuccess::kLJettonScoreFieldNumber;
const int CMD_S_PlaceJetSuccess::kBIsAndroidFieldNumber;
const int CMD_S_PlaceJetSuccess::kLUserScoreFieldNumber;
const int CMD_S_PlaceJetSuccess::kAllJettonScoreFieldNumber;
const int CMD_S_PlaceJetSuccess::kSelfJettonScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_PlaceJetSuccess::CMD_S_PlaceJetSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_PlaceJetSuccess();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_PlaceJetSuccess)
}
CMD_S_PlaceJetSuccess::CMD_S_PlaceJetSuccess(const CMD_S_PlaceJetSuccess& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      alljettonscore_(from.alljettonscore_),
      selfjettonscore_(from.selfjettonscore_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dwuserid_, &from.dwuserid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bisandroid_) -
    reinterpret_cast<char*>(&dwuserid_)) + sizeof(bisandroid_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_PlaceJetSuccess)
}

void CMD_S_PlaceJetSuccess::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&dwuserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bisandroid_) -
      reinterpret_cast<char*>(&dwuserid_)) + sizeof(bisandroid_));
}

CMD_S_PlaceJetSuccess::~CMD_S_PlaceJetSuccess() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_PlaceJetSuccess)
  SharedDtor();
}

void CMD_S_PlaceJetSuccess::SharedDtor() {
}

void CMD_S_PlaceJetSuccess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_PlaceJetSuccess::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_PlaceJetSuccess& CMD_S_PlaceJetSuccess::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_PlaceJetSuccess();
  return *internal_default_instance();
}

CMD_S_PlaceJetSuccess* CMD_S_PlaceJetSuccess::New(::google::protobuf::Arena* arena) const {
  CMD_S_PlaceJetSuccess* n = new CMD_S_PlaceJetSuccess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_PlaceJetSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_PlaceJetSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alljettonscore_.Clear();
  selfjettonscore_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&dwuserid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bisandroid_) -
        reinterpret_cast<char*>(&dwuserid_)) + sizeof(bisandroid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_PlaceJetSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_PlaceJetSuccess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dwUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dwuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cbJettonArea = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cbjettonarea();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbjettonarea_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lJettonScore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_ljettonscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ljettonscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool bIsAndroid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bisandroid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bisandroid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserScore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_luserscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &luserscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.PlaceJettonScore AllJettonScore = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_alljettonscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.PlaceJettonScore SelfJettonScore = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_selfjettonscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_PlaceJetSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_PlaceJetSuccess)
  return false;
#undef DO_
}

void CMD_S_PlaceJetSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_PlaceJetSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dwuserid(), output);
  }

  // required int32 cbJettonArea = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cbjettonarea(), output);
  }

  // required double lJettonScore = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ljettonscore(), output);
  }

  // required bool bIsAndroid = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bisandroid(), output);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->luserscore(), output);
  }

  // repeated .Common.PlaceJettonScore AllJettonScore = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alljettonscore_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->alljettonscore(static_cast<int>(i)), output);
  }

  // repeated .Common.PlaceJettonScore SelfJettonScore = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selfjettonscore_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->selfjettonscore(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_PlaceJetSuccess)
}

::google::protobuf::uint8* CMD_S_PlaceJetSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_PlaceJetSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dwuserid(), target);
  }

  // required int32 cbJettonArea = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cbjettonarea(), target);
  }

  // required double lJettonScore = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->ljettonscore(), target);
  }

  // required bool bIsAndroid = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bisandroid(), target);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->luserscore(), target);
  }

  // repeated .Common.PlaceJettonScore AllJettonScore = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alljettonscore_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->alljettonscore(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Common.PlaceJettonScore SelfJettonScore = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selfjettonscore_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->selfjettonscore(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_PlaceJetSuccess)
  return target;
}

size_t CMD_S_PlaceJetSuccess::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_PlaceJetSuccess)
  size_t total_size = 0;

  if (has_dwuserid()) {
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());
  }

  if (has_cbjettonarea()) {
    // required int32 cbJettonArea = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbjettonarea());
  }

  if (has_ljettonscore()) {
    // required double lJettonScore = 3;
    total_size += 1 + 8;
  }

  if (has_luserscore()) {
    // required double lUserScore = 5;
    total_size += 1 + 8;
  }

  if (has_bisandroid()) {
    // required bool bIsAndroid = 4;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t CMD_S_PlaceJetSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_PlaceJetSuccess)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());

    // required int32 cbJettonArea = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbjettonarea());

    // required double lJettonScore = 3;
    total_size += 1 + 8;

    // required double lUserScore = 5;
    total_size += 1 + 8;

    // required bool bIsAndroid = 4;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Common.PlaceJettonScore AllJettonScore = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->alljettonscore_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alljettonscore(static_cast<int>(i)));
    }
  }

  // repeated .Common.PlaceJettonScore SelfJettonScore = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->selfjettonscore_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->selfjettonscore(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_PlaceJetSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_PlaceJetSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_PlaceJetSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_PlaceJetSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_PlaceJetSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_PlaceJetSuccess)
    MergeFrom(*source);
  }
}

void CMD_S_PlaceJetSuccess::MergeFrom(const CMD_S_PlaceJetSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_PlaceJetSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alljettonscore_.MergeFrom(from.alljettonscore_);
  selfjettonscore_.MergeFrom(from.selfjettonscore_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      dwuserid_ = from.dwuserid_;
    }
    if (cached_has_bits & 0x00000002u) {
      cbjettonarea_ = from.cbjettonarea_;
    }
    if (cached_has_bits & 0x00000004u) {
      ljettonscore_ = from.ljettonscore_;
    }
    if (cached_has_bits & 0x00000008u) {
      luserscore_ = from.luserscore_;
    }
    if (cached_has_bits & 0x00000010u) {
      bisandroid_ = from.bisandroid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_PlaceJetSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_PlaceJetSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_PlaceJetSuccess::CopyFrom(const CMD_S_PlaceJetSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_PlaceJetSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_PlaceJetSuccess::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->alljettonscore())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->selfjettonscore())) return false;
  return true;
}

void CMD_S_PlaceJetSuccess::Swap(CMD_S_PlaceJetSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_PlaceJetSuccess::InternalSwap(CMD_S_PlaceJetSuccess* other) {
  using std::swap;
  alljettonscore_.InternalSwap(&other->alljettonscore_);
  selfjettonscore_.InternalSwap(&other->selfjettonscore_);
  swap(dwuserid_, other->dwuserid_);
  swap(cbjettonarea_, other->cbjettonarea_);
  swap(ljettonscore_, other->ljettonscore_);
  swap(luserscore_, other->luserscore_);
  swap(bisandroid_, other->bisandroid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_PlaceJetSuccess::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_ApplyBanker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_ApplyBanker::kWApplyChairIDFieldNumber;
const int CMD_S_ApplyBanker::kLApplyMultiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_ApplyBanker::CMD_S_ApplyBanker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ApplyBanker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_ApplyBanker)
}
CMD_S_ApplyBanker::CMD_S_ApplyBanker(const CMD_S_ApplyBanker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wapplychairid_, &from.wapplychairid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lapplymulti_) -
    reinterpret_cast<char*>(&wapplychairid_)) + sizeof(lapplymulti_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_ApplyBanker)
}

void CMD_S_ApplyBanker::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&wapplychairid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lapplymulti_) -
      reinterpret_cast<char*>(&wapplychairid_)) + sizeof(lapplymulti_));
}

CMD_S_ApplyBanker::~CMD_S_ApplyBanker() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_ApplyBanker)
  SharedDtor();
}

void CMD_S_ApplyBanker::SharedDtor() {
}

void CMD_S_ApplyBanker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_ApplyBanker::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_ApplyBanker& CMD_S_ApplyBanker::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ApplyBanker();
  return *internal_default_instance();
}

CMD_S_ApplyBanker* CMD_S_ApplyBanker::New(::google::protobuf::Arena* arena) const {
  CMD_S_ApplyBanker* n = new CMD_S_ApplyBanker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_ApplyBanker::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_ApplyBanker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&wapplychairid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lapplymulti_) -
        reinterpret_cast<char*>(&wapplychairid_)) + sizeof(lapplymulti_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_ApplyBanker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_ApplyBanker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 wApplyChairID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_wapplychairid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wapplychairid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lApplyMulti = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lapplymulti();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lapplymulti_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_ApplyBanker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_ApplyBanker)
  return false;
#undef DO_
}

void CMD_S_ApplyBanker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_ApplyBanker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wApplyChairID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wapplychairid(), output);
  }

  // required int32 lApplyMulti = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lapplymulti(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_ApplyBanker)
}

::google::protobuf::uint8* CMD_S_ApplyBanker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_ApplyBanker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wApplyChairID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wapplychairid(), target);
  }

  // required int32 lApplyMulti = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lapplymulti(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_ApplyBanker)
  return target;
}

size_t CMD_S_ApplyBanker::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_ApplyBanker)
  size_t total_size = 0;

  if (has_wapplychairid()) {
    // required int32 wApplyChairID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wapplychairid());
  }

  if (has_lapplymulti()) {
    // required int32 lApplyMulti = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lapplymulti());
  }

  return total_size;
}
size_t CMD_S_ApplyBanker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_ApplyBanker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 wApplyChairID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wapplychairid());

    // required int32 lApplyMulti = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lapplymulti());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_ApplyBanker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_ApplyBanker)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_ApplyBanker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_ApplyBanker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_ApplyBanker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_ApplyBanker)
    MergeFrom(*source);
  }
}

void CMD_S_ApplyBanker::MergeFrom(const CMD_S_ApplyBanker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_ApplyBanker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      wapplychairid_ = from.wapplychairid_;
    }
    if (cached_has_bits & 0x00000002u) {
      lapplymulti_ = from.lapplymulti_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_ApplyBanker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_ApplyBanker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_ApplyBanker::CopyFrom(const CMD_S_ApplyBanker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_ApplyBanker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_ApplyBanker::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMD_S_ApplyBanker::Swap(CMD_S_ApplyBanker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_ApplyBanker::InternalSwap(CMD_S_ApplyBanker* other) {
  using std::swap;
  swap(wapplychairid_, other->wapplychairid_);
  swap(lapplymulti_, other->lapplymulti_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_ApplyBanker::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_ApplyBankerSuccess::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_ApplyBankerSuccess::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_ApplyBankerSuccess::CMD_S_ApplyBankerSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ApplyBankerSuccess();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_ApplyBankerSuccess)
}
CMD_S_ApplyBankerSuccess::CMD_S_ApplyBankerSuccess(const CMD_S_ApplyBankerSuccess& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_ApplyBankerSuccess)
}

void CMD_S_ApplyBankerSuccess::SharedCtor() {
  _cached_size_ = 0;
}

CMD_S_ApplyBankerSuccess::~CMD_S_ApplyBankerSuccess() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_ApplyBankerSuccess)
  SharedDtor();
}

void CMD_S_ApplyBankerSuccess::SharedDtor() {
}

void CMD_S_ApplyBankerSuccess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_ApplyBankerSuccess::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_ApplyBankerSuccess& CMD_S_ApplyBankerSuccess::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ApplyBankerSuccess();
  return *internal_default_instance();
}

CMD_S_ApplyBankerSuccess* CMD_S_ApplyBankerSuccess::New(::google::protobuf::Arena* arena) const {
  CMD_S_ApplyBankerSuccess* n = new CMD_S_ApplyBankerSuccess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_ApplyBankerSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_ApplyBankerSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_ApplyBankerSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_ApplyBankerSuccess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Common.PlayerListItem players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_ApplyBankerSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_ApplyBankerSuccess)
  return false;
#undef DO_
}

void CMD_S_ApplyBankerSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_ApplyBankerSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Common.PlayerListItem players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->players(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_ApplyBankerSuccess)
}

::google::protobuf::uint8* CMD_S_ApplyBankerSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_ApplyBankerSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Common.PlayerListItem players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_ApplyBankerSuccess)
  return target;
}

size_t CMD_S_ApplyBankerSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_ApplyBankerSuccess)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .Common.PlayerListItem players = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_ApplyBankerSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_ApplyBankerSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_ApplyBankerSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_ApplyBankerSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_ApplyBankerSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_ApplyBankerSuccess)
    MergeFrom(*source);
  }
}

void CMD_S_ApplyBankerSuccess::MergeFrom(const CMD_S_ApplyBankerSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_ApplyBankerSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
}

void CMD_S_ApplyBankerSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_ApplyBankerSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_ApplyBankerSuccess::CopyFrom(const CMD_S_ApplyBankerSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_ApplyBankerSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_ApplyBankerSuccess::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->players())) return false;
  return true;
}

void CMD_S_ApplyBankerSuccess::Swap(CMD_S_ApplyBankerSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_ApplyBankerSuccess::InternalSwap(CMD_S_ApplyBankerSuccess* other) {
  using std::swap;
  players_.InternalSwap(&other->players_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_ApplyBankerSuccess::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_ApplyBanker_Fail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_ApplyBanker_Fail::kNErrorCodeFieldNumber;
const int CMD_S_ApplyBanker_Fail::kSzErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_ApplyBanker_Fail::CMD_S_ApplyBanker_Fail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ApplyBanker_Fail();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_ApplyBanker_Fail)
}
CMD_S_ApplyBanker_Fail::CMD_S_ApplyBanker_Fail(const CMD_S_ApplyBanker_Fail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szerrormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_szerrormessage()) {
    szerrormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szerrormessage_);
  }
  nerrorcode_ = from.nerrorcode_;
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_ApplyBanker_Fail)
}

void CMD_S_ApplyBanker_Fail::SharedCtor() {
  _cached_size_ = 0;
  szerrormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerrorcode_ = 0;
}

CMD_S_ApplyBanker_Fail::~CMD_S_ApplyBanker_Fail() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_ApplyBanker_Fail)
  SharedDtor();
}

void CMD_S_ApplyBanker_Fail::SharedDtor() {
  szerrormessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_S_ApplyBanker_Fail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_ApplyBanker_Fail::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_ApplyBanker_Fail& CMD_S_ApplyBanker_Fail::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ApplyBanker_Fail();
  return *internal_default_instance();
}

CMD_S_ApplyBanker_Fail* CMD_S_ApplyBanker_Fail::New(::google::protobuf::Arena* arena) const {
  CMD_S_ApplyBanker_Fail* n = new CMD_S_ApplyBanker_Fail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_ApplyBanker_Fail::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_ApplyBanker_Fail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!szerrormessage_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*szerrormessage_.UnsafeRawStringPointer())->clear();
  }
  nerrorcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_ApplyBanker_Fail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_ApplyBanker_Fail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nErrorCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_nerrorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nerrorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string szErrorMessage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szerrormessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szerrormessage().data(), static_cast<int>(this->szerrormessage().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Common.CMD_S_ApplyBanker_Fail.szErrorMessage");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_ApplyBanker_Fail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_ApplyBanker_Fail)
  return false;
#undef DO_
}

void CMD_S_ApplyBanker_Fail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_ApplyBanker_Fail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 nErrorCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nerrorcode(), output);
  }

  // optional string szErrorMessage = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szerrormessage().data(), static_cast<int>(this->szerrormessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_S_ApplyBanker_Fail.szErrorMessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szerrormessage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_ApplyBanker_Fail)
}

::google::protobuf::uint8* CMD_S_ApplyBanker_Fail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_ApplyBanker_Fail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 nErrorCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nerrorcode(), target);
  }

  // optional string szErrorMessage = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szerrormessage().data(), static_cast<int>(this->szerrormessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_S_ApplyBanker_Fail.szErrorMessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szerrormessage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_ApplyBanker_Fail)
  return target;
}

size_t CMD_S_ApplyBanker_Fail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_ApplyBanker_Fail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 nErrorCode = 1;
  if (has_nerrorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nerrorcode());
  }
  // optional string szErrorMessage = 2;
  if (has_szerrormessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szerrormessage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_ApplyBanker_Fail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_ApplyBanker_Fail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_ApplyBanker_Fail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_ApplyBanker_Fail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_ApplyBanker_Fail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_ApplyBanker_Fail)
    MergeFrom(*source);
  }
}

void CMD_S_ApplyBanker_Fail::MergeFrom(const CMD_S_ApplyBanker_Fail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_ApplyBanker_Fail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_szerrormessage();
      szerrormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szerrormessage_);
    }
    if (cached_has_bits & 0x00000002u) {
      nerrorcode_ = from.nerrorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_ApplyBanker_Fail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_ApplyBanker_Fail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_ApplyBanker_Fail::CopyFrom(const CMD_S_ApplyBanker_Fail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_ApplyBanker_Fail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_ApplyBanker_Fail::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void CMD_S_ApplyBanker_Fail::Swap(CMD_S_ApplyBanker_Fail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_ApplyBanker_Fail::InternalSwap(CMD_S_ApplyBanker_Fail* other) {
  using std::swap;
  szerrormessage_.Swap(&other->szerrormessage_);
  swap(nerrorcode_, other->nerrorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_ApplyBanker_Fail::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_OpenCard::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_OpenCard::kWApplyChairIDFieldNumber;
const int CMD_S_OpenCard::kWApplyuseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_OpenCard::CMD_S_OpenCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_OpenCard();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_OpenCard)
}
CMD_S_OpenCard::CMD_S_OpenCard(const CMD_S_OpenCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wapplychairid_, &from.wapplychairid_,
    static_cast<size_t>(reinterpret_cast<char*>(&wapplyuserid_) -
    reinterpret_cast<char*>(&wapplychairid_)) + sizeof(wapplyuserid_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_OpenCard)
}

void CMD_S_OpenCard::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&wapplychairid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wapplyuserid_) -
      reinterpret_cast<char*>(&wapplychairid_)) + sizeof(wapplyuserid_));
}

CMD_S_OpenCard::~CMD_S_OpenCard() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_OpenCard)
  SharedDtor();
}

void CMD_S_OpenCard::SharedDtor() {
}

void CMD_S_OpenCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_OpenCard::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_OpenCard& CMD_S_OpenCard::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_OpenCard();
  return *internal_default_instance();
}

CMD_S_OpenCard* CMD_S_OpenCard::New(::google::protobuf::Arena* arena) const {
  CMD_S_OpenCard* n = new CMD_S_OpenCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_OpenCard::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_OpenCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&wapplychairid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&wapplyuserid_) -
        reinterpret_cast<char*>(&wapplychairid_)) + sizeof(wapplyuserid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_OpenCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_OpenCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 wApplyChairID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_wapplychairid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wapplychairid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 wApplyuserid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_wapplyuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wapplyuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_OpenCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_OpenCard)
  return false;
#undef DO_
}

void CMD_S_OpenCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_OpenCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wApplyChairID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wapplychairid(), output);
  }

  // required int32 wApplyuserid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wapplyuserid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_OpenCard)
}

::google::protobuf::uint8* CMD_S_OpenCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_OpenCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wApplyChairID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wapplychairid(), target);
  }

  // required int32 wApplyuserid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wapplyuserid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_OpenCard)
  return target;
}

size_t CMD_S_OpenCard::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_OpenCard)
  size_t total_size = 0;

  if (has_wapplychairid()) {
    // required int32 wApplyChairID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wapplychairid());
  }

  if (has_wapplyuserid()) {
    // required int32 wApplyuserid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wapplyuserid());
  }

  return total_size;
}
size_t CMD_S_OpenCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_OpenCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 wApplyChairID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wapplychairid());

    // required int32 wApplyuserid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wapplyuserid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_OpenCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_OpenCard)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_OpenCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_OpenCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_OpenCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_OpenCard)
    MergeFrom(*source);
  }
}

void CMD_S_OpenCard::MergeFrom(const CMD_S_OpenCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_OpenCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      wapplychairid_ = from.wapplychairid_;
    }
    if (cached_has_bits & 0x00000002u) {
      wapplyuserid_ = from.wapplyuserid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_OpenCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_OpenCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_OpenCard::CopyFrom(const CMD_S_OpenCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_OpenCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_OpenCard::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMD_S_OpenCard::Swap(CMD_S_OpenCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_OpenCard::InternalSwap(CMD_S_OpenCard* other) {
  using std::swap;
  swap(wapplychairid_, other->wapplychairid_);
  swap(wapplyuserid_, other->wapplyuserid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_OpenCard::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_CancelBanker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_CancelBanker::kDwUserIDFieldNumber;
const int CMD_S_CancelBanker::kSzCancelUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_CancelBanker::CMD_S_CancelBanker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_CancelBanker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_CancelBanker)
}
CMD_S_CancelBanker::CMD_S_CancelBanker(const CMD_S_CancelBanker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szcanceluser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_szcanceluser()) {
    szcanceluser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcanceluser_);
  }
  dwuserid_ = from.dwuserid_;
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_CancelBanker)
}

void CMD_S_CancelBanker::SharedCtor() {
  _cached_size_ = 0;
  szcanceluser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dwuserid_ = 0;
}

CMD_S_CancelBanker::~CMD_S_CancelBanker() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_CancelBanker)
  SharedDtor();
}

void CMD_S_CancelBanker::SharedDtor() {
  szcanceluser_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_S_CancelBanker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_CancelBanker::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_CancelBanker& CMD_S_CancelBanker::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_CancelBanker();
  return *internal_default_instance();
}

CMD_S_CancelBanker* CMD_S_CancelBanker::New(::google::protobuf::Arena* arena) const {
  CMD_S_CancelBanker* n = new CMD_S_CancelBanker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_CancelBanker::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_CancelBanker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!szcanceluser_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*szcanceluser_.UnsafeRawStringPointer())->clear();
  }
  dwuserid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_CancelBanker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_CancelBanker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dwUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dwuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string szCancelUser = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szcanceluser()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szcanceluser().data(), static_cast<int>(this->szcanceluser().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Common.CMD_S_CancelBanker.szCancelUser");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_CancelBanker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_CancelBanker)
  return false;
#undef DO_
}

void CMD_S_CancelBanker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_CancelBanker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dwuserid(), output);
  }

  // required string szCancelUser = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szcanceluser().data(), static_cast<int>(this->szcanceluser().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_S_CancelBanker.szCancelUser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szcanceluser(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_CancelBanker)
}

::google::protobuf::uint8* CMD_S_CancelBanker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_CancelBanker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dwuserid(), target);
  }

  // required string szCancelUser = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szcanceluser().data(), static_cast<int>(this->szcanceluser().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_S_CancelBanker.szCancelUser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szcanceluser(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_CancelBanker)
  return target;
}

size_t CMD_S_CancelBanker::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_CancelBanker)
  size_t total_size = 0;

  if (has_szcanceluser()) {
    // required string szCancelUser = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szcanceluser());
  }

  if (has_dwuserid()) {
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());
  }

  return total_size;
}
size_t CMD_S_CancelBanker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_CancelBanker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string szCancelUser = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szcanceluser());

    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_CancelBanker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_CancelBanker)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_CancelBanker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_CancelBanker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_CancelBanker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_CancelBanker)
    MergeFrom(*source);
  }
}

void CMD_S_CancelBanker::MergeFrom(const CMD_S_CancelBanker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_CancelBanker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_szcanceluser();
      szcanceluser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcanceluser_);
    }
    if (cached_has_bits & 0x00000002u) {
      dwuserid_ = from.dwuserid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_CancelBanker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_CancelBanker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_CancelBanker::CopyFrom(const CMD_S_CancelBanker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_CancelBanker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_CancelBanker::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMD_S_CancelBanker::Swap(CMD_S_CancelBanker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_CancelBanker::InternalSwap(CMD_S_CancelBanker* other) {
  using std::swap;
  szcanceluser_.Swap(&other->szcanceluser_);
  swap(dwuserid_, other->dwuserid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_CancelBanker::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_CancelBanker_Fail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_CancelBanker_Fail::kNErrorCodeFieldNumber;
const int CMD_S_CancelBanker_Fail::kSzErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_CancelBanker_Fail::CMD_S_CancelBanker_Fail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_CancelBanker_Fail();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_CancelBanker_Fail)
}
CMD_S_CancelBanker_Fail::CMD_S_CancelBanker_Fail(const CMD_S_CancelBanker_Fail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szerrormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_szerrormessage()) {
    szerrormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szerrormessage_);
  }
  nerrorcode_ = from.nerrorcode_;
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_CancelBanker_Fail)
}

void CMD_S_CancelBanker_Fail::SharedCtor() {
  _cached_size_ = 0;
  szerrormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerrorcode_ = 0;
}

CMD_S_CancelBanker_Fail::~CMD_S_CancelBanker_Fail() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_CancelBanker_Fail)
  SharedDtor();
}

void CMD_S_CancelBanker_Fail::SharedDtor() {
  szerrormessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_S_CancelBanker_Fail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_CancelBanker_Fail::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_CancelBanker_Fail& CMD_S_CancelBanker_Fail::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_CancelBanker_Fail();
  return *internal_default_instance();
}

CMD_S_CancelBanker_Fail* CMD_S_CancelBanker_Fail::New(::google::protobuf::Arena* arena) const {
  CMD_S_CancelBanker_Fail* n = new CMD_S_CancelBanker_Fail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_CancelBanker_Fail::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_CancelBanker_Fail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!szerrormessage_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*szerrormessage_.UnsafeRawStringPointer())->clear();
  }
  nerrorcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_CancelBanker_Fail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_CancelBanker_Fail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nErrorCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_nerrorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nerrorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string szErrorMessage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szerrormessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szerrormessage().data(), static_cast<int>(this->szerrormessage().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Common.CMD_S_CancelBanker_Fail.szErrorMessage");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_CancelBanker_Fail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_CancelBanker_Fail)
  return false;
#undef DO_
}

void CMD_S_CancelBanker_Fail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_CancelBanker_Fail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 nErrorCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nerrorcode(), output);
  }

  // optional string szErrorMessage = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szerrormessage().data(), static_cast<int>(this->szerrormessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_S_CancelBanker_Fail.szErrorMessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szerrormessage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_CancelBanker_Fail)
}

::google::protobuf::uint8* CMD_S_CancelBanker_Fail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_CancelBanker_Fail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 nErrorCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nerrorcode(), target);
  }

  // optional string szErrorMessage = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szerrormessage().data(), static_cast<int>(this->szerrormessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.CMD_S_CancelBanker_Fail.szErrorMessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szerrormessage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_CancelBanker_Fail)
  return target;
}

size_t CMD_S_CancelBanker_Fail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_CancelBanker_Fail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 nErrorCode = 1;
  if (has_nerrorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nerrorcode());
  }
  // optional string szErrorMessage = 2;
  if (has_szerrormessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szerrormessage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_CancelBanker_Fail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_CancelBanker_Fail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_CancelBanker_Fail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_CancelBanker_Fail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_CancelBanker_Fail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_CancelBanker_Fail)
    MergeFrom(*source);
  }
}

void CMD_S_CancelBanker_Fail::MergeFrom(const CMD_S_CancelBanker_Fail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_CancelBanker_Fail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_szerrormessage();
      szerrormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szerrormessage_);
    }
    if (cached_has_bits & 0x00000002u) {
      nerrorcode_ = from.nerrorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_CancelBanker_Fail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_CancelBanker_Fail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_CancelBanker_Fail::CopyFrom(const CMD_S_CancelBanker_Fail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_CancelBanker_Fail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_CancelBanker_Fail::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void CMD_S_CancelBanker_Fail::Swap(CMD_S_CancelBanker_Fail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_CancelBanker_Fail::InternalSwap(CMD_S_CancelBanker_Fail* other) {
  using std::swap;
  szerrormessage_.Swap(&other->szerrormessage_);
  swap(nerrorcode_, other->nerrorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_CancelBanker_Fail::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_ChangeBanker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_ChangeBanker::kWBankerChairIDFieldNumber;
const int CMD_S_ChangeBanker::kLBankerScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_ChangeBanker::CMD_S_ChangeBanker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ChangeBanker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_ChangeBanker)
}
CMD_S_ChangeBanker::CMD_S_ChangeBanker(const CMD_S_ChangeBanker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lbankerscore_, &from.lbankerscore_,
    static_cast<size_t>(reinterpret_cast<char*>(&wbankerchairid_) -
    reinterpret_cast<char*>(&lbankerscore_)) + sizeof(wbankerchairid_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_ChangeBanker)
}

void CMD_S_ChangeBanker::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lbankerscore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wbankerchairid_) -
      reinterpret_cast<char*>(&lbankerscore_)) + sizeof(wbankerchairid_));
}

CMD_S_ChangeBanker::~CMD_S_ChangeBanker() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_ChangeBanker)
  SharedDtor();
}

void CMD_S_ChangeBanker::SharedDtor() {
}

void CMD_S_ChangeBanker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_ChangeBanker::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_ChangeBanker& CMD_S_ChangeBanker::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ChangeBanker();
  return *internal_default_instance();
}

CMD_S_ChangeBanker* CMD_S_ChangeBanker::New(::google::protobuf::Arena* arena) const {
  CMD_S_ChangeBanker* n = new CMD_S_ChangeBanker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_ChangeBanker::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_ChangeBanker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&lbankerscore_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&wbankerchairid_) -
        reinterpret_cast<char*>(&lbankerscore_)) + sizeof(wbankerchairid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_ChangeBanker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_ChangeBanker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 wBankerChairID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_wbankerchairid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wbankerchairid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lBankerScore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_lbankerscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lbankerscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_ChangeBanker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_ChangeBanker)
  return false;
#undef DO_
}

void CMD_S_ChangeBanker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_ChangeBanker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wBankerChairID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wbankerchairid(), output);
  }

  // required double lBankerScore = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->lbankerscore(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_ChangeBanker)
}

::google::protobuf::uint8* CMD_S_ChangeBanker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_ChangeBanker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wBankerChairID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wbankerchairid(), target);
  }

  // required double lBankerScore = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->lbankerscore(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_ChangeBanker)
  return target;
}

size_t CMD_S_ChangeBanker::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_ChangeBanker)
  size_t total_size = 0;

  if (has_lbankerscore()) {
    // required double lBankerScore = 2;
    total_size += 1 + 8;
  }

  if (has_wbankerchairid()) {
    // required int32 wBankerChairID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wbankerchairid());
  }

  return total_size;
}
size_t CMD_S_ChangeBanker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_ChangeBanker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double lBankerScore = 2;
    total_size += 1 + 8;

    // required int32 wBankerChairID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wbankerchairid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_ChangeBanker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_ChangeBanker)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_ChangeBanker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_ChangeBanker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_ChangeBanker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_ChangeBanker)
    MergeFrom(*source);
  }
}

void CMD_S_ChangeBanker::MergeFrom(const CMD_S_ChangeBanker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_ChangeBanker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      lbankerscore_ = from.lbankerscore_;
    }
    if (cached_has_bits & 0x00000002u) {
      wbankerchairid_ = from.wbankerchairid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_ChangeBanker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_ChangeBanker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_ChangeBanker::CopyFrom(const CMD_S_ChangeBanker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_ChangeBanker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_ChangeBanker::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMD_S_ChangeBanker::Swap(CMD_S_ChangeBanker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_ChangeBanker::InternalSwap(CMD_S_ChangeBanker* other) {
  using std::swap;
  swap(lbankerscore_, other->lbankerscore_);
  swap(wbankerchairid_, other->wbankerchairid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_ChangeBanker::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_C_PlayerList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_C_PlayerList::kNLimitCountFieldNumber;
const int CMD_C_PlayerList::kNBeginIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_C_PlayerList::CMD_C_PlayerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_PlayerList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_C_PlayerList)
}
CMD_C_PlayerList::CMD_C_PlayerList(const CMD_C_PlayerList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nlimitcount_, &from.nlimitcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&nbeginindex_) -
    reinterpret_cast<char*>(&nlimitcount_)) + sizeof(nbeginindex_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_C_PlayerList)
}

void CMD_C_PlayerList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&nlimitcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbeginindex_) -
      reinterpret_cast<char*>(&nlimitcount_)) + sizeof(nbeginindex_));
}

CMD_C_PlayerList::~CMD_C_PlayerList() {
  // @@protoc_insertion_point(destructor:Common.CMD_C_PlayerList)
  SharedDtor();
}

void CMD_C_PlayerList::SharedDtor() {
}

void CMD_C_PlayerList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_C_PlayerList::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_C_PlayerList& CMD_C_PlayerList::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_PlayerList();
  return *internal_default_instance();
}

CMD_C_PlayerList* CMD_C_PlayerList::New(::google::protobuf::Arena* arena) const {
  CMD_C_PlayerList* n = new CMD_C_PlayerList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_C_PlayerList::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_C_PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&nlimitcount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nbeginindex_) -
        reinterpret_cast<char*>(&nlimitcount_)) + sizeof(nbeginindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_C_PlayerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_C_PlayerList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nLimitCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_nlimitcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlimitcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nBeginIndex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_nbeginindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbeginindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_C_PlayerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_C_PlayerList)
  return false;
#undef DO_
}

void CMD_C_PlayerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_C_PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 nLimitCount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nlimitcount(), output);
  }

  // optional int32 nBeginIndex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nbeginindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_C_PlayerList)
}

::google::protobuf::uint8* CMD_C_PlayerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_C_PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 nLimitCount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nlimitcount(), target);
  }

  // optional int32 nBeginIndex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nbeginindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_C_PlayerList)
  return target;
}

size_t CMD_C_PlayerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_C_PlayerList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 nLimitCount = 1;
  if (has_nlimitcount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nlimitcount());
  }
  // optional int32 nBeginIndex = 2;
  if (has_nbeginindex()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nbeginindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_C_PlayerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_C_PlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_C_PlayerList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_C_PlayerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_C_PlayerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_C_PlayerList)
    MergeFrom(*source);
  }
}

void CMD_C_PlayerList::MergeFrom(const CMD_C_PlayerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_C_PlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      nlimitcount_ = from.nlimitcount_;
    }
    if (cached_has_bits & 0x00000002u) {
      nbeginindex_ = from.nbeginindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_C_PlayerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_C_PlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_C_PlayerList::CopyFrom(const CMD_C_PlayerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_C_PlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_C_PlayerList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMD_C_PlayerList::Swap(CMD_C_PlayerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_C_PlayerList::InternalSwap(CMD_C_PlayerList* other) {
  using std::swap;
  swap(nlimitcount_, other->nlimitcount_);
  swap(nbeginindex_, other->nbeginindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_C_PlayerList::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerListItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerListItem::kDwUserIDFieldNumber;
const int PlayerListItem::kHeaderIDFieldNumber;
const int PlayerListItem::kNVipLevelFieldNumber;
const int PlayerListItem::kNickNameFieldNumber;
const int PlayerListItem::kLUserScoreFieldNumber;
const int PlayerListItem::kLTwentyWinScoreFieldNumber;
const int PlayerListItem::kLTwentyWinCountFieldNumber;
const int PlayerListItem::kIsdivineMathFieldNumber;
const int PlayerListItem::kIndexFieldNumber;
const int PlayerListItem::kIsBankerFieldNumber;
const int PlayerListItem::kGenderFieldNumber;
const int PlayerListItem::kIsApplyBankerFieldNumber;
const int PlayerListItem::kApplyBankerMultiFieldNumber;
const int PlayerListItem::kLJettonFieldNumber;
const int PlayerListItem::kSzLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerListItem::PlayerListItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerListItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.PlayerListItem)
}
PlayerListItem::PlayerListItem(const PlayerListItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  szlocation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_szlocation()) {
    szlocation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szlocation_);
  }
  ::memcpy(&dwuserid_, &from.dwuserid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ljetton_) -
    reinterpret_cast<char*>(&dwuserid_)) + sizeof(ljetton_));
  // @@protoc_insertion_point(copy_constructor:Common.PlayerListItem)
}

void PlayerListItem::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szlocation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dwuserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ljetton_) -
      reinterpret_cast<char*>(&dwuserid_)) + sizeof(ljetton_));
}

PlayerListItem::~PlayerListItem() {
  // @@protoc_insertion_point(destructor:Common.PlayerListItem)
  SharedDtor();
}

void PlayerListItem::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szlocation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerListItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerListItem::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerListItem& PlayerListItem::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerListItem();
  return *internal_default_instance();
}

PlayerListItem* PlayerListItem::New(::google::protobuf::Arena* arena) const {
  PlayerListItem* n = new PlayerListItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerListItem::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.PlayerListItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!szlocation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*szlocation_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&dwuserid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ltwentywinscore_) -
        reinterpret_cast<char*>(&dwuserid_)) + sizeof(ltwentywinscore_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&isdivinemath_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ljetton_) -
        reinterpret_cast<char*>(&isdivinemath_)) + sizeof(ljetton_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerListItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.PlayerListItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dwUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dwuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 headerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_headerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &headerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nVipLevel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_nviplevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nviplevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string nickName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Common.PlayerListItem.nickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lUserScore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_luserscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &luserscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lTwentyWinScore = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_ltwentywinscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ltwentywinscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lTwentyWinCount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_ltwentywincount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ltwentywincount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isdivineMath = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_isdivinemath();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isdivinemath_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Index = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isBanker = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_isbanker();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isbanker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 gender = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_gender();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isApplyBanker = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_isapplybanker();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isapplybanker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ApplyBankerMulti = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_applybankermulti();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &applybankermulti_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lJetton = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_ljetton();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ljetton_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string szLocation = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szlocation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szlocation().data(), static_cast<int>(this->szlocation().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Common.PlayerListItem.szLocation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.PlayerListItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.PlayerListItem)
  return false;
#undef DO_
}

void PlayerListItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.PlayerListItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dwuserid(), output);
  }

  // required int32 headerID = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->headerid(), output);
  }

  // required int32 nVipLevel = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nviplevel(), output);
  }

  // required string nickName = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.PlayerListItem.nickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nickname(), output);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->luserscore(), output);
  }

  // optional double lTwentyWinScore = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->ltwentywinscore(), output);
  }

  // optional int32 lTwentyWinCount = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->ltwentywincount(), output);
  }

  // optional int32 isdivineMath = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->isdivinemath(), output);
  }

  // optional int32 Index = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->index(), output);
  }

  // optional int32 isBanker = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->isbanker(), output);
  }

  // required int32 gender = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->gender(), output);
  }

  // optional int32 isApplyBanker = 12;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->isapplybanker(), output);
  }

  // optional int32 ApplyBankerMulti = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->applybankermulti(), output);
  }

  // optional int32 lJetton = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->ljetton(), output);
  }

  // optional string szLocation = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szlocation().data(), static_cast<int>(this->szlocation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.PlayerListItem.szLocation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->szlocation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.PlayerListItem)
}

::google::protobuf::uint8* PlayerListItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.PlayerListItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dwuserid(), target);
  }

  // required int32 headerID = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->headerid(), target);
  }

  // required int32 nVipLevel = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nviplevel(), target);
  }

  // required string nickName = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.PlayerListItem.nickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nickname(), target);
  }

  // required double lUserScore = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->luserscore(), target);
  }

  // optional double lTwentyWinScore = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->ltwentywinscore(), target);
  }

  // optional int32 lTwentyWinCount = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->ltwentywincount(), target);
  }

  // optional int32 isdivineMath = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->isdivinemath(), target);
  }

  // optional int32 Index = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->index(), target);
  }

  // optional int32 isBanker = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->isbanker(), target);
  }

  // required int32 gender = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->gender(), target);
  }

  // optional int32 isApplyBanker = 12;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->isapplybanker(), target);
  }

  // optional int32 ApplyBankerMulti = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->applybankermulti(), target);
  }

  // optional int32 lJetton = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->ljetton(), target);
  }

  // optional string szLocation = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szlocation().data(), static_cast<int>(this->szlocation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Common.PlayerListItem.szLocation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->szlocation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.PlayerListItem)
  return target;
}

size_t PlayerListItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.PlayerListItem)
  size_t total_size = 0;

  if (has_nickname()) {
    // required string nickName = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_dwuserid()) {
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());
  }

  if (has_headerid()) {
    // required int32 headerID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->headerid());
  }

  if (has_luserscore()) {
    // required double lUserScore = 5;
    total_size += 1 + 8;
  }

  if (has_nviplevel()) {
    // required int32 nVipLevel = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nviplevel());
  }

  if (has_gender()) {
    // required int32 gender = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gender());
  }

  return total_size;
}
size_t PlayerListItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.PlayerListItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000083d) ^ 0x0000083d) == 0) {  // All required fields are present.
    // required string nickName = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());

    // required int32 headerID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->headerid());

    // required double lUserScore = 5;
    total_size += 1 + 8;

    // required int32 nVipLevel = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nviplevel());

    // required int32 gender = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gender());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string szLocation = 15;
  if (has_szlocation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szlocation());
  }

  if (_has_bits_[0 / 32] & 192u) {
    // optional int32 lTwentyWinCount = 7;
    if (has_ltwentywincount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ltwentywincount());
    }

    // optional double lTwentyWinScore = 6;
    if (has_ltwentywinscore()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 isdivineMath = 8;
    if (has_isdivinemath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isdivinemath());
    }

    // optional int32 Index = 9;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 isBanker = 10;
    if (has_isbanker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isbanker());
    }

  }
  if (_has_bits_[8 / 32] & 28672u) {
    // optional int32 isApplyBanker = 12;
    if (has_isapplybanker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isapplybanker());
    }

    // optional int32 ApplyBankerMulti = 13;
    if (has_applybankermulti()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->applybankermulti());
    }

    // optional int32 lJetton = 14;
    if (has_ljetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ljetton());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerListItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.PlayerListItem)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerListItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerListItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.PlayerListItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.PlayerListItem)
    MergeFrom(*source);
  }
}

void PlayerListItem::MergeFrom(const PlayerListItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.PlayerListItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_szlocation();
      szlocation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szlocation_);
    }
    if (cached_has_bits & 0x00000004u) {
      dwuserid_ = from.dwuserid_;
    }
    if (cached_has_bits & 0x00000008u) {
      headerid_ = from.headerid_;
    }
    if (cached_has_bits & 0x00000010u) {
      luserscore_ = from.luserscore_;
    }
    if (cached_has_bits & 0x00000020u) {
      nviplevel_ = from.nviplevel_;
    }
    if (cached_has_bits & 0x00000040u) {
      ltwentywincount_ = from.ltwentywincount_;
    }
    if (cached_has_bits & 0x00000080u) {
      ltwentywinscore_ = from.ltwentywinscore_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      isdivinemath_ = from.isdivinemath_;
    }
    if (cached_has_bits & 0x00000200u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000400u) {
      isbanker_ = from.isbanker_;
    }
    if (cached_has_bits & 0x00000800u) {
      gender_ = from.gender_;
    }
    if (cached_has_bits & 0x00001000u) {
      isapplybanker_ = from.isapplybanker_;
    }
    if (cached_has_bits & 0x00002000u) {
      applybankermulti_ = from.applybankermulti_;
    }
    if (cached_has_bits & 0x00004000u) {
      ljetton_ = from.ljetton_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerListItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.PlayerListItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerListItem::CopyFrom(const PlayerListItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.PlayerListItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerListItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000083d) != 0x0000083d) return false;
  return true;
}

void PlayerListItem::Swap(PlayerListItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerListItem::InternalSwap(PlayerListItem* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  szlocation_.Swap(&other->szlocation_);
  swap(dwuserid_, other->dwuserid_);
  swap(headerid_, other->headerid_);
  swap(luserscore_, other->luserscore_);
  swap(nviplevel_, other->nviplevel_);
  swap(ltwentywincount_, other->ltwentywincount_);
  swap(ltwentywinscore_, other->ltwentywinscore_);
  swap(isdivinemath_, other->isdivinemath_);
  swap(index_, other->index_);
  swap(isbanker_, other->isbanker_);
  swap(gender_, other->gender_);
  swap(isapplybanker_, other->isapplybanker_);
  swap(applybankermulti_, other->applybankermulti_);
  swap(ljetton_, other->ljetton_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerListItem::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_User_Enter::InitAsDefaultInstance() {
  ::Common::_CMD_S_User_Enter_default_instance_._instance.get_mutable()->deskdata_ = const_cast< ::Common::GameDeskInfo*>(
      ::Common::GameDeskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_User_Enter::kDeskDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_User_Enter::CMD_S_User_Enter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Enter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_User_Enter)
}
CMD_S_User_Enter::CMD_S_User_Enter(const CMD_S_User_Enter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deskdata()) {
    deskdata_ = new ::Common::GameDeskInfo(*from.deskdata_);
  } else {
    deskdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_User_Enter)
}

void CMD_S_User_Enter::SharedCtor() {
  _cached_size_ = 0;
  deskdata_ = NULL;
}

CMD_S_User_Enter::~CMD_S_User_Enter() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_User_Enter)
  SharedDtor();
}

void CMD_S_User_Enter::SharedDtor() {
  if (this != internal_default_instance()) delete deskdata_;
}

void CMD_S_User_Enter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_User_Enter::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_User_Enter& CMD_S_User_Enter::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Enter();
  return *internal_default_instance();
}

CMD_S_User_Enter* CMD_S_User_Enter::New(::google::protobuf::Arena* arena) const {
  CMD_S_User_Enter* n = new CMD_S_User_Enter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_User_Enter::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_User_Enter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(deskdata_ != NULL);
    deskdata_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_User_Enter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_User_Enter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.GameDeskInfo DeskData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_User_Enter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_User_Enter)
  return false;
#undef DO_
}

void CMD_S_User_Enter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_User_Enter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deskdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_User_Enter)
}

::google::protobuf::uint8* CMD_S_User_Enter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_User_Enter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->deskdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_User_Enter)
  return target;
}

size_t CMD_S_User_Enter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_User_Enter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Common.GameDeskInfo DeskData = 1;
  if (has_deskdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_User_Enter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_User_Enter)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_User_Enter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_User_Enter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_User_Enter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_User_Enter)
    MergeFrom(*source);
  }
}

void CMD_S_User_Enter::MergeFrom(const CMD_S_User_Enter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_User_Enter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_deskdata()) {
    mutable_deskdata()->::Common::GameDeskInfo::MergeFrom(from.deskdata());
  }
}

void CMD_S_User_Enter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_User_Enter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_User_Enter::CopyFrom(const CMD_S_User_Enter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_User_Enter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_User_Enter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_deskdata()) {
    if (!this->deskdata_->IsInitialized()) return false;
  }
  return true;
}

void CMD_S_User_Enter::Swap(CMD_S_User_Enter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_User_Enter::InternalSwap(CMD_S_User_Enter* other) {
  using std::swap;
  swap(deskdata_, other->deskdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_User_Enter::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_User_Leave::InitAsDefaultInstance() {
  ::Common::_CMD_S_User_Leave_default_instance_._instance.get_mutable()->deskdata_ = const_cast< ::Common::GameDeskInfo*>(
      ::Common::GameDeskInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_User_Leave::kDeskDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_User_Leave::CMD_S_User_Leave()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Leave();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_User_Leave)
}
CMD_S_User_Leave::CMD_S_User_Leave(const CMD_S_User_Leave& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deskdata()) {
    deskdata_ = new ::Common::GameDeskInfo(*from.deskdata_);
  } else {
    deskdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_User_Leave)
}

void CMD_S_User_Leave::SharedCtor() {
  _cached_size_ = 0;
  deskdata_ = NULL;
}

CMD_S_User_Leave::~CMD_S_User_Leave() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_User_Leave)
  SharedDtor();
}

void CMD_S_User_Leave::SharedDtor() {
  if (this != internal_default_instance()) delete deskdata_;
}

void CMD_S_User_Leave::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_User_Leave::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_User_Leave& CMD_S_User_Leave::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Leave();
  return *internal_default_instance();
}

CMD_S_User_Leave* CMD_S_User_Leave::New(::google::protobuf::Arena* arena) const {
  CMD_S_User_Leave* n = new CMD_S_User_Leave;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_User_Leave::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_User_Leave)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(deskdata_ != NULL);
    deskdata_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_User_Leave::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_User_Leave)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.GameDeskInfo DeskData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_User_Leave)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_User_Leave)
  return false;
#undef DO_
}

void CMD_S_User_Leave::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_User_Leave)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deskdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_User_Leave)
}

::google::protobuf::uint8* CMD_S_User_Leave::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_User_Leave)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.GameDeskInfo DeskData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->deskdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_User_Leave)
  return target;
}

size_t CMD_S_User_Leave::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_User_Leave)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Common.GameDeskInfo DeskData = 1;
  if (has_deskdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deskdata_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_User_Leave::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_User_Leave)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_User_Leave* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_User_Leave>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_User_Leave)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_User_Leave)
    MergeFrom(*source);
  }
}

void CMD_S_User_Leave::MergeFrom(const CMD_S_User_Leave& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_User_Leave)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_deskdata()) {
    mutable_deskdata()->::Common::GameDeskInfo::MergeFrom(from.deskdata());
  }
}

void CMD_S_User_Leave::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_User_Leave)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_User_Leave::CopyFrom(const CMD_S_User_Leave& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_User_Leave)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_User_Leave::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_deskdata()) {
    if (!this->deskdata_->IsInitialized()) return false;
  }
  return true;
}

void CMD_S_User_Leave::Swap(CMD_S_User_Leave* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_User_Leave::InternalSwap(CMD_S_User_Leave* other) {
  using std::swap;
  swap(deskdata_, other->deskdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_User_Leave::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_User_Reday::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_User_Reday::kDwUserIDFieldNumber;
const int CMD_S_User_Reday::kDwChairidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_User_Reday::CMD_S_User_Reday()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Reday();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_User_Reday)
}
CMD_S_User_Reday::CMD_S_User_Reday(const CMD_S_User_Reday& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dwuserid_, &from.dwuserid_,
    static_cast<size_t>(reinterpret_cast<char*>(&dwchairid_) -
    reinterpret_cast<char*>(&dwuserid_)) + sizeof(dwchairid_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_User_Reday)
}

void CMD_S_User_Reday::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&dwuserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dwchairid_) -
      reinterpret_cast<char*>(&dwuserid_)) + sizeof(dwchairid_));
}

CMD_S_User_Reday::~CMD_S_User_Reday() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_User_Reday)
  SharedDtor();
}

void CMD_S_User_Reday::SharedDtor() {
}

void CMD_S_User_Reday::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_User_Reday::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_User_Reday& CMD_S_User_Reday::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Reday();
  return *internal_default_instance();
}

CMD_S_User_Reday* CMD_S_User_Reday::New(::google::protobuf::Arena* arena) const {
  CMD_S_User_Reday* n = new CMD_S_User_Reday;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_User_Reday::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_User_Reday)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&dwuserid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dwchairid_) -
        reinterpret_cast<char*>(&dwuserid_)) + sizeof(dwchairid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_User_Reday::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_User_Reday)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dwUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dwuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dwChairid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dwchairid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dwchairid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_User_Reday)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_User_Reday)
  return false;
#undef DO_
}

void CMD_S_User_Reday::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_User_Reday)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dwuserid(), output);
  }

  // required int32 dwChairid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dwchairid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_User_Reday)
}

::google::protobuf::uint8* CMD_S_User_Reday::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_User_Reday)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dwUserID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dwuserid(), target);
  }

  // required int32 dwChairid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dwchairid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_User_Reday)
  return target;
}

size_t CMD_S_User_Reday::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_User_Reday)
  size_t total_size = 0;

  if (has_dwuserid()) {
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());
  }

  if (has_dwchairid()) {
    // required int32 dwChairid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwchairid());
  }

  return total_size;
}
size_t CMD_S_User_Reday::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_User_Reday)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 dwUserID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwuserid());

    // required int32 dwChairid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dwchairid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_User_Reday::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_User_Reday)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_User_Reday* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_User_Reday>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_User_Reday)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_User_Reday)
    MergeFrom(*source);
  }
}

void CMD_S_User_Reday::MergeFrom(const CMD_S_User_Reday& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_User_Reday)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      dwuserid_ = from.dwuserid_;
    }
    if (cached_has_bits & 0x00000002u) {
      dwchairid_ = from.dwchairid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_User_Reday::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_User_Reday)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_User_Reday::CopyFrom(const CMD_S_User_Reday& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_User_Reday)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_User_Reday::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMD_S_User_Reday::Swap(CMD_S_User_Reday* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_User_Reday::InternalSwap(CMD_S_User_Reday* other) {
  using std::swap;
  swap(dwuserid_, other->dwuserid_);
  swap(dwchairid_, other->dwchairid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_User_Reday::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMD_S_PlayerList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_S_PlayerList::kNEndIndexFieldNumber;
const int CMD_S_PlayerList::kNResultCountFieldNumber;
const int CMD_S_PlayerList::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_S_PlayerList::CMD_S_PlayerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_PlayerList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CMD_S_PlayerList)
}
CMD_S_PlayerList::CMD_S_PlayerList(const CMD_S_PlayerList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nendindex_, &from.nendindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&nresultcount_) -
    reinterpret_cast<char*>(&nendindex_)) + sizeof(nresultcount_));
  // @@protoc_insertion_point(copy_constructor:Common.CMD_S_PlayerList)
}

void CMD_S_PlayerList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&nendindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nresultcount_) -
      reinterpret_cast<char*>(&nendindex_)) + sizeof(nresultcount_));
}

CMD_S_PlayerList::~CMD_S_PlayerList() {
  // @@protoc_insertion_point(destructor:Common.CMD_S_PlayerList)
  SharedDtor();
}

void CMD_S_PlayerList::SharedDtor() {
}

void CMD_S_PlayerList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_S_PlayerList::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_S_PlayerList& CMD_S_PlayerList::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_PlayerList();
  return *internal_default_instance();
}

CMD_S_PlayerList* CMD_S_PlayerList::New(::google::protobuf::Arena* arena) const {
  CMD_S_PlayerList* n = new CMD_S_PlayerList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_S_PlayerList::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CMD_S_PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&nendindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nresultcount_) -
        reinterpret_cast<char*>(&nendindex_)) + sizeof(nresultcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_S_PlayerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CMD_S_PlayerList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nEndIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_nendindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nendindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nResultCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_nresultcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nresultcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Common.PlayerListItem players = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CMD_S_PlayerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CMD_S_PlayerList)
  return false;
#undef DO_
}

void CMD_S_PlayerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CMD_S_PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 nEndIndex = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nendindex(), output);
  }

  // required int32 nResultCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nresultcount(), output);
  }

  // repeated .Common.PlayerListItem players = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->players(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CMD_S_PlayerList)
}

::google::protobuf::uint8* CMD_S_PlayerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CMD_S_PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 nEndIndex = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nendindex(), target);
  }

  // required int32 nResultCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nresultcount(), target);
  }

  // repeated .Common.PlayerListItem players = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CMD_S_PlayerList)
  return target;
}

size_t CMD_S_PlayerList::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Common.CMD_S_PlayerList)
  size_t total_size = 0;

  if (has_nendindex()) {
    // required int32 nEndIndex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nendindex());
  }

  if (has_nresultcount()) {
    // required int32 nResultCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nresultcount());
  }

  return total_size;
}
size_t CMD_S_PlayerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CMD_S_PlayerList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 nEndIndex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nendindex());

    // required int32 nResultCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nresultcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Common.PlayerListItem players = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_S_PlayerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CMD_S_PlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_S_PlayerList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_S_PlayerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CMD_S_PlayerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CMD_S_PlayerList)
    MergeFrom(*source);
  }
}

void CMD_S_PlayerList::MergeFrom(const CMD_S_PlayerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CMD_S_PlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      nendindex_ = from.nendindex_;
    }
    if (cached_has_bits & 0x00000002u) {
      nresultcount_ = from.nresultcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_S_PlayerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CMD_S_PlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_S_PlayerList::CopyFrom(const CMD_S_PlayerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CMD_S_PlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_S_PlayerList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->players())) return false;
  return true;
}

void CMD_S_PlayerList::Swap(CMD_S_PlayerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_S_PlayerList::InternalSwap(CMD_S_PlayerList* other) {
  using std::swap;
  players_.InternalSwap(&other->players_);
  swap(nendindex_, other->nendindex_);
  swap(nresultcount_, other->nresultcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_S_PlayerList::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardGroup::kGroupIdFieldNumber;
const int CardGroup::kCardTypeFieldNumber;
const int CardGroup::kCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardGroup::CardGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Common_2eMessage_2eproto::InitDefaultsCardGroup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Common.CardGroup)
}
CardGroup::CardGroup(const CardGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cardtype_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(cardtype_));
  // @@protoc_insertion_point(copy_constructor:Common.CardGroup)
}

void CardGroup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cardtype_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(cardtype_));
}

CardGroup::~CardGroup() {
  // @@protoc_insertion_point(destructor:Common.CardGroup)
  SharedDtor();
}

void CardGroup::SharedDtor() {
}

void CardGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardGroup::descriptor() {
  ::protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardGroup& CardGroup::default_instance() {
  ::protobuf_Common_2eMessage_2eproto::InitDefaultsCardGroup();
  return *internal_default_instance();
}

CardGroup* CardGroup::New(::google::protobuf::Arena* arena) const {
  CardGroup* n = new CardGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CardGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:Common.CardGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cards_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cardtype_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(cardtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CardGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Common.CardGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 CardType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cardtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Cards = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Common.CardGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Common.CardGroup)
  return false;
#undef DO_
}

void CardGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Common.CardGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_id(), output);
  }

  // optional int32 CardType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cardtype(), output);
  }

  // repeated int32 Cards = 3;
  for (int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->cards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Common.CardGroup)
}

::google::protobuf::uint8* CardGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Common.CardGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_id(), target);
  }

  // optional int32 CardType = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cardtype(), target);
  }

  // repeated int32 Cards = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->cards_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Common.CardGroup)
  return target;
}

size_t CardGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Common.CardGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 group_id = 1;
  if (has_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_id());
  }
  // repeated int32 Cards = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cards_size());
    total_size += data_size;
  }

  // optional int32 CardType = 2;
  if (has_cardtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cardtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Common.CardGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const CardGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Common.CardGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Common.CardGroup)
    MergeFrom(*source);
  }
}

void CardGroup::MergeFrom(const CardGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Common.CardGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      cardtype_ = from.cardtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CardGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Common.CardGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardGroup::CopyFrom(const CardGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Common.CardGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CardGroup::Swap(CardGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardGroup::InternalSwap(CardGroup* other) {
  using std::swap;
  cards_.InternalSwap(&other->cards_);
  swap(group_id_, other->group_id_);
  swap(cardtype_, other->cardtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CardGroup::GetMetadata() const {
  protobuf_Common_2eMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Common_2eMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Common

// @@protoc_insertion_point(global_scope)
