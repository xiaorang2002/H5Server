// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.Message.proto

#ifndef PROTOBUF_Common_2eMessage_2eproto__INCLUDED
#define PROTOBUF_Common_2eMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Common_2eMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[35];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPlaceJetInfoImpl();
void InitDefaultsPlaceJetInfo();
void InitDefaultsPlaceJettonScoreImpl();
void InitDefaultsPlaceJettonScore();
void InitDefaultsGameDeskInfoImpl();
void InitDefaultsGameDeskInfo();
void InitDefaultsCMD_S_SyncJetAreaScoreImpl();
void InitDefaultsCMD_S_SyncJetAreaScore();
void InitDefaultsCMD_Scene_StatusFreeImpl();
void InitDefaultsCMD_Scene_StatusFree();
void InitDefaultsCMD_S_StartPlaceJettonImpl();
void InitDefaultsCMD_S_StartPlaceJetton();
void InitDefaultsCMD_S_GameStartImpl();
void InitDefaultsCMD_S_GameStart();
void InitDefaultsPlayerScoreValueImpl();
void InitDefaultsPlayerScoreValue();
void InitDefaultsCMD_S_GameEndImpl();
void InitDefaultsCMD_S_GameEnd();
void InitDefaultsCMD_S_BankerApplyEndImpl();
void InitDefaultsCMD_S_BankerApplyEnd();
void InitDefaultsCMD_S_JettonEndImpl();
void InitDefaultsCMD_S_JettonEnd();
void InitDefaultsCMD_S_OpenCardEndImpl();
void InitDefaultsCMD_S_OpenCardEnd();
void InitDefaultsCMD_S_User_Get_CardImpl();
void InitDefaultsCMD_S_User_Get_Card();
void InitDefaultsCMD_S_User_Out_CardImpl();
void InitDefaultsCMD_S_User_Out_Card();
void InitDefaultsCMD_S_Open_cardSuceesImpl();
void InitDefaultsCMD_S_Open_cardSucees();
void InitDefaultsCMD_C_Out_Card_ReqImpl();
void InitDefaultsCMD_C_Out_Card_Req();
void InitDefaultsCMD_C_SyncGameDesk_ReqImpl();
void InitDefaultsCMD_C_SyncGameDesk_Req();
void InitDefaultsCMD_S_Out_Card_AckImpl();
void InitDefaultsCMD_S_Out_Card_Ack();
void InitDefaultsCMD_C_PlaceJetImpl();
void InitDefaultsCMD_C_PlaceJet();
void InitDefaultsCMD_S_PlaceJettonFailImpl();
void InitDefaultsCMD_S_PlaceJettonFail();
void InitDefaultsCMD_S_PlaceJetSuccessImpl();
void InitDefaultsCMD_S_PlaceJetSuccess();
void InitDefaultsCMD_S_ApplyBankerImpl();
void InitDefaultsCMD_S_ApplyBanker();
void InitDefaultsCMD_S_ApplyBankerSuccessImpl();
void InitDefaultsCMD_S_ApplyBankerSuccess();
void InitDefaultsCMD_S_ApplyBanker_FailImpl();
void InitDefaultsCMD_S_ApplyBanker_Fail();
void InitDefaultsCMD_S_OpenCardImpl();
void InitDefaultsCMD_S_OpenCard();
void InitDefaultsCMD_S_CancelBankerImpl();
void InitDefaultsCMD_S_CancelBanker();
void InitDefaultsCMD_S_CancelBanker_FailImpl();
void InitDefaultsCMD_S_CancelBanker_Fail();
void InitDefaultsCMD_S_ChangeBankerImpl();
void InitDefaultsCMD_S_ChangeBanker();
void InitDefaultsCMD_C_PlayerListImpl();
void InitDefaultsCMD_C_PlayerList();
void InitDefaultsPlayerListItemImpl();
void InitDefaultsPlayerListItem();
void InitDefaultsCMD_S_User_EnterImpl();
void InitDefaultsCMD_S_User_Enter();
void InitDefaultsCMD_S_User_LeaveImpl();
void InitDefaultsCMD_S_User_Leave();
void InitDefaultsCMD_S_User_RedayImpl();
void InitDefaultsCMD_S_User_Reday();
void InitDefaultsCMD_S_PlayerListImpl();
void InitDefaultsCMD_S_PlayerList();
void InitDefaultsCardGroupImpl();
void InitDefaultsCardGroup();
inline void InitDefaults() {
  InitDefaultsPlaceJetInfo();
  InitDefaultsPlaceJettonScore();
  InitDefaultsGameDeskInfo();
  InitDefaultsCMD_S_SyncJetAreaScore();
  InitDefaultsCMD_Scene_StatusFree();
  InitDefaultsCMD_S_StartPlaceJetton();
  InitDefaultsCMD_S_GameStart();
  InitDefaultsPlayerScoreValue();
  InitDefaultsCMD_S_GameEnd();
  InitDefaultsCMD_S_BankerApplyEnd();
  InitDefaultsCMD_S_JettonEnd();
  InitDefaultsCMD_S_OpenCardEnd();
  InitDefaultsCMD_S_User_Get_Card();
  InitDefaultsCMD_S_User_Out_Card();
  InitDefaultsCMD_S_Open_cardSucees();
  InitDefaultsCMD_C_Out_Card_Req();
  InitDefaultsCMD_C_SyncGameDesk_Req();
  InitDefaultsCMD_S_Out_Card_Ack();
  InitDefaultsCMD_C_PlaceJet();
  InitDefaultsCMD_S_PlaceJettonFail();
  InitDefaultsCMD_S_PlaceJetSuccess();
  InitDefaultsCMD_S_ApplyBanker();
  InitDefaultsCMD_S_ApplyBankerSuccess();
  InitDefaultsCMD_S_ApplyBanker_Fail();
  InitDefaultsCMD_S_OpenCard();
  InitDefaultsCMD_S_CancelBanker();
  InitDefaultsCMD_S_CancelBanker_Fail();
  InitDefaultsCMD_S_ChangeBanker();
  InitDefaultsCMD_C_PlayerList();
  InitDefaultsPlayerListItem();
  InitDefaultsCMD_S_User_Enter();
  InitDefaultsCMD_S_User_Leave();
  InitDefaultsCMD_S_User_Reday();
  InitDefaultsCMD_S_PlayerList();
  InitDefaultsCardGroup();
}
}  // namespace protobuf_Common_2eMessage_2eproto
namespace Common {
class CMD_C_Out_Card_Req;
class CMD_C_Out_Card_ReqDefaultTypeInternal;
extern CMD_C_Out_Card_ReqDefaultTypeInternal _CMD_C_Out_Card_Req_default_instance_;
class CMD_C_PlaceJet;
class CMD_C_PlaceJetDefaultTypeInternal;
extern CMD_C_PlaceJetDefaultTypeInternal _CMD_C_PlaceJet_default_instance_;
class CMD_C_PlayerList;
class CMD_C_PlayerListDefaultTypeInternal;
extern CMD_C_PlayerListDefaultTypeInternal _CMD_C_PlayerList_default_instance_;
class CMD_C_SyncGameDesk_Req;
class CMD_C_SyncGameDesk_ReqDefaultTypeInternal;
extern CMD_C_SyncGameDesk_ReqDefaultTypeInternal _CMD_C_SyncGameDesk_Req_default_instance_;
class CMD_S_ApplyBanker;
class CMD_S_ApplyBankerDefaultTypeInternal;
extern CMD_S_ApplyBankerDefaultTypeInternal _CMD_S_ApplyBanker_default_instance_;
class CMD_S_ApplyBankerSuccess;
class CMD_S_ApplyBankerSuccessDefaultTypeInternal;
extern CMD_S_ApplyBankerSuccessDefaultTypeInternal _CMD_S_ApplyBankerSuccess_default_instance_;
class CMD_S_ApplyBanker_Fail;
class CMD_S_ApplyBanker_FailDefaultTypeInternal;
extern CMD_S_ApplyBanker_FailDefaultTypeInternal _CMD_S_ApplyBanker_Fail_default_instance_;
class CMD_S_BankerApplyEnd;
class CMD_S_BankerApplyEndDefaultTypeInternal;
extern CMD_S_BankerApplyEndDefaultTypeInternal _CMD_S_BankerApplyEnd_default_instance_;
class CMD_S_CancelBanker;
class CMD_S_CancelBankerDefaultTypeInternal;
extern CMD_S_CancelBankerDefaultTypeInternal _CMD_S_CancelBanker_default_instance_;
class CMD_S_CancelBanker_Fail;
class CMD_S_CancelBanker_FailDefaultTypeInternal;
extern CMD_S_CancelBanker_FailDefaultTypeInternal _CMD_S_CancelBanker_Fail_default_instance_;
class CMD_S_ChangeBanker;
class CMD_S_ChangeBankerDefaultTypeInternal;
extern CMD_S_ChangeBankerDefaultTypeInternal _CMD_S_ChangeBanker_default_instance_;
class CMD_S_GameEnd;
class CMD_S_GameEndDefaultTypeInternal;
extern CMD_S_GameEndDefaultTypeInternal _CMD_S_GameEnd_default_instance_;
class CMD_S_GameStart;
class CMD_S_GameStartDefaultTypeInternal;
extern CMD_S_GameStartDefaultTypeInternal _CMD_S_GameStart_default_instance_;
class CMD_S_JettonEnd;
class CMD_S_JettonEndDefaultTypeInternal;
extern CMD_S_JettonEndDefaultTypeInternal _CMD_S_JettonEnd_default_instance_;
class CMD_S_OpenCard;
class CMD_S_OpenCardDefaultTypeInternal;
extern CMD_S_OpenCardDefaultTypeInternal _CMD_S_OpenCard_default_instance_;
class CMD_S_OpenCardEnd;
class CMD_S_OpenCardEndDefaultTypeInternal;
extern CMD_S_OpenCardEndDefaultTypeInternal _CMD_S_OpenCardEnd_default_instance_;
class CMD_S_Open_cardSucees;
class CMD_S_Open_cardSuceesDefaultTypeInternal;
extern CMD_S_Open_cardSuceesDefaultTypeInternal _CMD_S_Open_cardSucees_default_instance_;
class CMD_S_Out_Card_Ack;
class CMD_S_Out_Card_AckDefaultTypeInternal;
extern CMD_S_Out_Card_AckDefaultTypeInternal _CMD_S_Out_Card_Ack_default_instance_;
class CMD_S_PlaceJetSuccess;
class CMD_S_PlaceJetSuccessDefaultTypeInternal;
extern CMD_S_PlaceJetSuccessDefaultTypeInternal _CMD_S_PlaceJetSuccess_default_instance_;
class CMD_S_PlaceJettonFail;
class CMD_S_PlaceJettonFailDefaultTypeInternal;
extern CMD_S_PlaceJettonFailDefaultTypeInternal _CMD_S_PlaceJettonFail_default_instance_;
class CMD_S_PlayerList;
class CMD_S_PlayerListDefaultTypeInternal;
extern CMD_S_PlayerListDefaultTypeInternal _CMD_S_PlayerList_default_instance_;
class CMD_S_StartPlaceJetton;
class CMD_S_StartPlaceJettonDefaultTypeInternal;
extern CMD_S_StartPlaceJettonDefaultTypeInternal _CMD_S_StartPlaceJetton_default_instance_;
class CMD_S_SyncJetAreaScore;
class CMD_S_SyncJetAreaScoreDefaultTypeInternal;
extern CMD_S_SyncJetAreaScoreDefaultTypeInternal _CMD_S_SyncJetAreaScore_default_instance_;
class CMD_S_User_Enter;
class CMD_S_User_EnterDefaultTypeInternal;
extern CMD_S_User_EnterDefaultTypeInternal _CMD_S_User_Enter_default_instance_;
class CMD_S_User_Get_Card;
class CMD_S_User_Get_CardDefaultTypeInternal;
extern CMD_S_User_Get_CardDefaultTypeInternal _CMD_S_User_Get_Card_default_instance_;
class CMD_S_User_Leave;
class CMD_S_User_LeaveDefaultTypeInternal;
extern CMD_S_User_LeaveDefaultTypeInternal _CMD_S_User_Leave_default_instance_;
class CMD_S_User_Out_Card;
class CMD_S_User_Out_CardDefaultTypeInternal;
extern CMD_S_User_Out_CardDefaultTypeInternal _CMD_S_User_Out_Card_default_instance_;
class CMD_S_User_Reday;
class CMD_S_User_RedayDefaultTypeInternal;
extern CMD_S_User_RedayDefaultTypeInternal _CMD_S_User_Reday_default_instance_;
class CMD_Scene_StatusFree;
class CMD_Scene_StatusFreeDefaultTypeInternal;
extern CMD_Scene_StatusFreeDefaultTypeInternal _CMD_Scene_StatusFree_default_instance_;
class CardGroup;
class CardGroupDefaultTypeInternal;
extern CardGroupDefaultTypeInternal _CardGroup_default_instance_;
class GameDeskInfo;
class GameDeskInfoDefaultTypeInternal;
extern GameDeskInfoDefaultTypeInternal _GameDeskInfo_default_instance_;
class PlaceJetInfo;
class PlaceJetInfoDefaultTypeInternal;
extern PlaceJetInfoDefaultTypeInternal _PlaceJetInfo_default_instance_;
class PlaceJettonScore;
class PlaceJettonScoreDefaultTypeInternal;
extern PlaceJettonScoreDefaultTypeInternal _PlaceJettonScore_default_instance_;
class PlayerListItem;
class PlayerListItemDefaultTypeInternal;
extern PlayerListItemDefaultTypeInternal _PlayerListItem_default_instance_;
class PlayerScoreValue;
class PlayerScoreValueDefaultTypeInternal;
extern PlayerScoreValueDefaultTypeInternal _PlayerScoreValue_default_instance_;
}  // namespace Common
namespace Common {

enum SUBID {
  SUB_C_PLACE_JETTON = 100,
  SUB_C_QUERY_PLAYERLIST = 103,
  SUB_C_APPLY_BANKER = 101,
  SUB_C_CANCEL_BANKER = 102,
  CMD_C_OUT_CARD_REQ = 137,
  SUB_C_SYNC_DESK = 143,
  SUB_C_BANKERSUCCESS = 147,
  SUB_C_OPEN_SUCCESS = 148,
  SUB_S_GAME_FREE = 120,
  SUB_S_GAME_START = 121,
  SUB_S_PLACE_JETTON = 122,
  SUB_S_GAME_END = 123,
  SUB_S_APPLY_BANKER = 124,
  SUB_S_CHANGE_BANKER = 125,
  SUB_S_SEND_RECORD = 127,
  SUB_S_BANKAPPLY_END = 144,
  SUB_S_JETTONE_END = 145,
  SUB_S_OPENCARD_END = 146,
  SUB_S_PLACE_JET_FAIL = 128,
  SUB_S_CANCEL_BANKER = 129,
  SUB_S_QUERY_PLAYLIST = 130,
  SUB_S_GAME_PLAY = 131,
  SUB_S_USER_ENTER = 132,
  SUB_S_USER_LEAVE = 133,
  SUB_S_USER_REDAY = 134,
  SUB_S_USER_GET_CARD = 135,
  SUB_S_USER_OUT_CARD = 136,
  CMD_S_OUT_CARD_ACK = 138,
  CMD_S_START_PLACE_JETTON = 139,
  SUB_S_APPLY_BANKER_FAIL = 140,
  SUB_S_CANCEL_BANKER_FAIL = 141,
  SUB_S_SYNC_JET_AREA_SCORE = 142
};
bool SUBID_IsValid(int value);
const SUBID SUBID_MIN = SUB_C_PLACE_JETTON;
const SUBID SUBID_MAX = SUB_C_OPEN_SUCCESS;
const int SUBID_ARRAYSIZE = SUBID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SUBID_descriptor();
inline const ::std::string& SUBID_Name(SUBID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SUBID_descriptor(), value);
}
inline bool SUBID_Parse(
    const ::std::string& name, SUBID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SUBID>(
    SUBID_descriptor(), name, value);
}
enum STATUS_SCENE {
  SCENE_FREE = 0,
  SCENE_START = 100,
  SCENE_ENDBANKAPLLY = 101,
  SCENE_PLACEJET = 102,
  SCENE_PLACEJETEND = 103,
  SCENE_END = 200,
  SCENE_OPENCAREND = 104
};
bool STATUS_SCENE_IsValid(int value);
const STATUS_SCENE STATUS_SCENE_MIN = SCENE_FREE;
const STATUS_SCENE STATUS_SCENE_MAX = SCENE_END;
const int STATUS_SCENE_ARRAYSIZE = STATUS_SCENE_MAX + 1;

const ::google::protobuf::EnumDescriptor* STATUS_SCENE_descriptor();
inline const ::std::string& STATUS_SCENE_Name(STATUS_SCENE value) {
  return ::google::protobuf::internal::NameOfEnum(
    STATUS_SCENE_descriptor(), value);
}
inline bool STATUS_SCENE_Parse(
    const ::std::string& name, STATUS_SCENE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<STATUS_SCENE>(
    STATUS_SCENE_descriptor(), name, value);
}
enum NIUNIU_CARD_GROUP_TYEP {
  BEGIN = 0,
  NIU0 = 1,
  NIU1 = 2,
  NIU2 = 3,
  NIU3 = 4,
  NIU4 = 5,
  NIU5 = 6,
  NIU6 = 7,
  NIU7 = 8,
  NIU8 = 9,
  NIU9 = 10,
  NIUNIU = 11,
  TONGHUA = 12,
  HULUNIU = 13,
  WUHUANIU = 14,
  ZHADANGNIU = 15,
  TONGHUASHUN = 16,
  WUXIAONIU = 17,
  END = 18
};
bool NIUNIU_CARD_GROUP_TYEP_IsValid(int value);
const NIUNIU_CARD_GROUP_TYEP NIUNIU_CARD_GROUP_TYEP_MIN = BEGIN;
const NIUNIU_CARD_GROUP_TYEP NIUNIU_CARD_GROUP_TYEP_MAX = END;
const int NIUNIU_CARD_GROUP_TYEP_ARRAYSIZE = NIUNIU_CARD_GROUP_TYEP_MAX + 1;

const ::google::protobuf::EnumDescriptor* NIUNIU_CARD_GROUP_TYEP_descriptor();
inline const ::std::string& NIUNIU_CARD_GROUP_TYEP_Name(NIUNIU_CARD_GROUP_TYEP value) {
  return ::google::protobuf::internal::NameOfEnum(
    NIUNIU_CARD_GROUP_TYEP_descriptor(), value);
}
inline bool NIUNIU_CARD_GROUP_TYEP_Parse(
    const ::std::string& name, NIUNIU_CARD_GROUP_TYEP* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NIUNIU_CARD_GROUP_TYEP>(
    NIUNIU_CARD_GROUP_TYEP_descriptor(), name, value);
}
// ===================================================================

class PlaceJetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.PlaceJetInfo) */ {
 public:
  PlaceJetInfo();
  virtual ~PlaceJetInfo();

  PlaceJetInfo(const PlaceJetInfo& from);

  inline PlaceJetInfo& operator=(const PlaceJetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaceJetInfo(PlaceJetInfo&& from) noexcept
    : PlaceJetInfo() {
    *this = ::std::move(from);
  }

  inline PlaceJetInfo& operator=(PlaceJetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceJetInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlaceJetInfo* internal_default_instance() {
    return reinterpret_cast<const PlaceJetInfo*>(
               &_PlaceJetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PlaceJetInfo* other);
  friend void swap(PlaceJetInfo& a, PlaceJetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaceJetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaceJetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaceJetInfo& from);
  void MergeFrom(const PlaceJetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaceJetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lJettonType = 1;
  bool has_ljettontype() const;
  void clear_ljettontype();
  static const int kLJettonTypeFieldNumber = 1;
  ::google::protobuf::int32 ljettontype() const;
  void set_ljettontype(::google::protobuf::int32 value);

  // required int32 lJettonCount = 2;
  bool has_ljettoncount() const;
  void clear_ljettoncount();
  static const int kLJettonCountFieldNumber = 2;
  ::google::protobuf::int32 ljettoncount() const;
  void set_ljettoncount(::google::protobuf::int32 value);

  // required int32 lJettonArea = 3;
  bool has_ljettonarea() const;
  void clear_ljettonarea();
  static const int kLJettonAreaFieldNumber = 3;
  ::google::protobuf::int32 ljettonarea() const;
  void set_ljettonarea(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.PlaceJetInfo)
 private:
  void set_has_ljettontype();
  void clear_has_ljettontype();
  void set_has_ljettoncount();
  void clear_has_ljettoncount();
  void set_has_ljettonarea();
  void clear_has_ljettonarea();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ljettontype_;
  ::google::protobuf::int32 ljettoncount_;
  ::google::protobuf::int32 ljettonarea_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJetInfoImpl();
};
// -------------------------------------------------------------------

class PlaceJettonScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.PlaceJettonScore) */ {
 public:
  PlaceJettonScore();
  virtual ~PlaceJettonScore();

  PlaceJettonScore(const PlaceJettonScore& from);

  inline PlaceJettonScore& operator=(const PlaceJettonScore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaceJettonScore(PlaceJettonScore&& from) noexcept
    : PlaceJettonScore() {
    *this = ::std::move(from);
  }

  inline PlaceJettonScore& operator=(PlaceJettonScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceJettonScore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlaceJettonScore* internal_default_instance() {
    return reinterpret_cast<const PlaceJettonScore*>(
               &_PlaceJettonScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PlaceJettonScore* other);
  friend void swap(PlaceJettonScore& a, PlaceJettonScore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaceJettonScore* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaceJettonScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaceJettonScore& from);
  void MergeFrom(const PlaceJettonScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaceJettonScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double lJettonScore = 2;
  bool has_ljettonscore() const;
  void clear_ljettonscore();
  static const int kLJettonScoreFieldNumber = 2;
  double ljettonscore() const;
  void set_ljettonscore(double value);

  // required int32 dwUserID = 1;
  bool has_dwuserid() const;
  void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  ::google::protobuf::int32 dwuserid() const;
  void set_dwuserid(::google::protobuf::int32 value);

  // required int32 lJettonArea = 3;
  bool has_ljettonarea() const;
  void clear_ljettonarea();
  static const int kLJettonAreaFieldNumber = 3;
  ::google::protobuf::int32 ljettonarea() const;
  void set_ljettonarea(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.PlaceJettonScore)
 private:
  void set_has_dwuserid();
  void clear_has_dwuserid();
  void set_has_ljettonscore();
  void clear_has_ljettonscore();
  void set_has_ljettonarea();
  void clear_has_ljettonarea();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double ljettonscore_;
  ::google::protobuf::int32 dwuserid_;
  ::google::protobuf::int32 ljettonarea_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlaceJettonScoreImpl();
};
// -------------------------------------------------------------------

class GameDeskInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.GameDeskInfo) */ {
 public:
  GameDeskInfo();
  virtual ~GameDeskInfo();

  GameDeskInfo(const GameDeskInfo& from);

  inline GameDeskInfo& operator=(const GameDeskInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameDeskInfo(GameDeskInfo&& from) noexcept
    : GameDeskInfo() {
    *this = ::std::move(from);
  }

  inline GameDeskInfo& operator=(GameDeskInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameDeskInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameDeskInfo* internal_default_instance() {
    return reinterpret_cast<const GameDeskInfo*>(
               &_GameDeskInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GameDeskInfo* other);
  friend void swap(GameDeskInfo& a, GameDeskInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameDeskInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GameDeskInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameDeskInfo& from);
  void MergeFrom(const GameDeskInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameDeskInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Common.PlaceJettonScore lAllJettonScore = 1;
  int lalljettonscore_size() const;
  void clear_lalljettonscore();
  static const int kLAllJettonScoreFieldNumber = 1;
  const ::Common::PlaceJettonScore& lalljettonscore(int index) const;
  ::Common::PlaceJettonScore* mutable_lalljettonscore(int index);
  ::Common::PlaceJettonScore* add_lalljettonscore();
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
      mutable_lalljettonscore();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
      lalljettonscore() const;

  // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
  int selfjettonscore_size() const;
  void clear_selfjettonscore();
  static const int kSelfJettonScoreFieldNumber = 2;
  const ::Common::PlaceJettonScore& selfjettonscore(int index) const;
  ::Common::PlaceJettonScore* mutable_selfjettonscore(int index);
  ::Common::PlaceJettonScore* add_selfjettonscore();
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
      mutable_selfjettonscore();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
      selfjettonscore() const;

  // repeated .Common.PlaceJettonScore divineJettonScore = 3;
  int divinejettonscore_size() const;
  void clear_divinejettonscore();
  static const int kDivineJettonScoreFieldNumber = 3;
  const ::Common::PlaceJettonScore& divinejettonscore(int index) const;
  ::Common::PlaceJettonScore* mutable_divinejettonscore(int index);
  ::Common::PlaceJettonScore* add_divinejettonscore();
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
      mutable_divinejettonscore();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
      divinejettonscore() const;

  // repeated .Common.CardGroup Cards = 6;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 6;
  const ::Common::CardGroup& cards(int index) const;
  ::Common::CardGroup* mutable_cards(int index);
  ::Common::CardGroup* add_cards();
  ::google::protobuf::RepeatedPtrField< ::Common::CardGroup >*
      mutable_cards();
  const ::google::protobuf::RepeatedPtrField< ::Common::CardGroup >&
      cards() const;

  // repeated .Common.PlayerListItem players = 7;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 7;
  const ::Common::PlayerListItem& players(int index) const;
  ::Common::PlayerListItem* mutable_players(int index);
  ::Common::PlayerListItem* add_players();
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >&
      players() const;

  // repeated int32 winTag = 14;
  int wintag_size() const;
  void clear_wintag();
  static const int kWinTagFieldNumber = 14;
  ::google::protobuf::int32 wintag(int index) const;
  void set_wintag(int index, ::google::protobuf::int32 value);
  void add_wintag(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      wintag() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_wintag();

  // repeated int32 winCardGroupType = 15;
  int wincardgrouptype_size() const;
  void clear_wincardgrouptype();
  static const int kWinCardGroupTypeFieldNumber = 15;
  ::google::protobuf::int32 wincardgrouptype(int index) const;
  void set_wincardgrouptype(int index, ::google::protobuf::int32 value);
  void add_wincardgrouptype(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      wincardgrouptype() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_wincardgrouptype();

  // repeated .Common.PlaceJetInfo JetInfo = 16;
  int jetinfo_size() const;
  void clear_jetinfo();
  static const int kJetInfoFieldNumber = 16;
  const ::Common::PlaceJetInfo& jetinfo(int index) const;
  ::Common::PlaceJetInfo* mutable_jetinfo(int index);
  ::Common::PlaceJetInfo* add_jetinfo();
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJetInfo >*
      mutable_jetinfo();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJetInfo >&
      jetinfo() const;

  // optional string szGameRoomName = 13;
  bool has_szgameroomname() const;
  void clear_szgameroomname();
  static const int kSzGameRoomNameFieldNumber = 13;
  const ::std::string& szgameroomname() const;
  void set_szgameroomname(const ::std::string& value);
  #if LANG_CXX11
  void set_szgameroomname(::std::string&& value);
  #endif
  void set_szgameroomname(const char* value);
  void set_szgameroomname(const char* value, size_t size);
  ::std::string* mutable_szgameroomname();
  ::std::string* release_szgameroomname();
  void set_allocated_szgameroomname(::std::string* szgameroomname);

  // required double lApplyBankerCondition = 4;
  bool has_lapplybankercondition() const;
  void clear_lapplybankercondition();
  static const int kLApplyBankerConditionFieldNumber = 4;
  double lapplybankercondition() const;
  void set_lapplybankercondition(double value);

  // required double lAreaLimitScore = 5;
  bool has_larealimitscore() const;
  void clear_larealimitscore();
  static const int kLAreaLimitScoreFieldNumber = 5;
  double larealimitscore() const;
  void set_larealimitscore(double value);

  // required int32 wBankerChairID = 8;
  bool has_wbankerchairid() const;
  void clear_wbankerchairid();
  static const int kWBankerChairIDFieldNumber = 8;
  ::google::protobuf::int32 wbankerchairid() const;
  void set_wbankerchairid(::google::protobuf::int32 value);

  // required int32 cbBankerTime = 9;
  bool has_cbbankertime() const;
  void clear_cbbankertime();
  static const int kCbBankerTimeFieldNumber = 9;
  ::google::protobuf::int32 cbbankertime() const;
  void set_cbbankertime(::google::protobuf::int32 value);

  // required double lBankerWinScore = 10;
  bool has_lbankerwinscore() const;
  void clear_lbankerwinscore();
  static const int kLBankerWinScoreFieldNumber = 10;
  double lbankerwinscore() const;
  void set_lbankerwinscore(double value);

  // required double lBankerScore = 11;
  bool has_lbankerscore() const;
  void clear_lbankerscore();
  static const int kLBankerScoreFieldNumber = 11;
  double lbankerscore() const;
  void set_lbankerscore(double value);

  // required bool bEnableSysBanker = 12;
  bool has_benablesysbanker() const;
  void clear_benablesysbanker();
  static const int kBEnableSysBankerFieldNumber = 12;
  bool benablesysbanker() const;
  void set_benablesysbanker(bool value);

  // required int32 lOnlinePopulation = 17;
  bool has_lonlinepopulation() const;
  void clear_lonlinepopulation();
  static const int kLOnlinePopulationFieldNumber = 17;
  ::google::protobuf::int32 lonlinepopulation() const;
  void set_lonlinepopulation(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.GameDeskInfo)
 private:
  void set_has_lapplybankercondition();
  void clear_has_lapplybankercondition();
  void set_has_larealimitscore();
  void clear_has_larealimitscore();
  void set_has_wbankerchairid();
  void clear_has_wbankerchairid();
  void set_has_cbbankertime();
  void clear_has_cbbankertime();
  void set_has_lbankerwinscore();
  void clear_has_lbankerwinscore();
  void set_has_lbankerscore();
  void clear_has_lbankerscore();
  void set_has_benablesysbanker();
  void clear_has_benablesysbanker();
  void set_has_szgameroomname();
  void clear_has_szgameroomname();
  void set_has_lonlinepopulation();
  void clear_has_lonlinepopulation();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore > lalljettonscore_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore > selfjettonscore_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore > divinejettonscore_;
  ::google::protobuf::RepeatedPtrField< ::Common::CardGroup > cards_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem > players_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > wintag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > wincardgrouptype_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJetInfo > jetinfo_;
  ::google::protobuf::internal::ArenaStringPtr szgameroomname_;
  double lapplybankercondition_;
  double larealimitscore_;
  ::google::protobuf::int32 wbankerchairid_;
  ::google::protobuf::int32 cbbankertime_;
  double lbankerwinscore_;
  double lbankerscore_;
  bool benablesysbanker_;
  ::google::protobuf::int32 lonlinepopulation_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsGameDeskInfoImpl();
};
// -------------------------------------------------------------------

class CMD_S_SyncJetAreaScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_SyncJetAreaScore) */ {
 public:
  CMD_S_SyncJetAreaScore();
  virtual ~CMD_S_SyncJetAreaScore();

  CMD_S_SyncJetAreaScore(const CMD_S_SyncJetAreaScore& from);

  inline CMD_S_SyncJetAreaScore& operator=(const CMD_S_SyncJetAreaScore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_SyncJetAreaScore(CMD_S_SyncJetAreaScore&& from) noexcept
    : CMD_S_SyncJetAreaScore() {
    *this = ::std::move(from);
  }

  inline CMD_S_SyncJetAreaScore& operator=(CMD_S_SyncJetAreaScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_SyncJetAreaScore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_SyncJetAreaScore* internal_default_instance() {
    return reinterpret_cast<const CMD_S_SyncJetAreaScore*>(
               &_CMD_S_SyncJetAreaScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMD_S_SyncJetAreaScore* other);
  friend void swap(CMD_S_SyncJetAreaScore& a, CMD_S_SyncJetAreaScore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_SyncJetAreaScore* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_SyncJetAreaScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_SyncJetAreaScore& from);
  void MergeFrom(const CMD_S_SyncJetAreaScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_SyncJetAreaScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Common.PlaceJettonScore AllJettonScore = 1;
  int alljettonscore_size() const;
  void clear_alljettonscore();
  static const int kAllJettonScoreFieldNumber = 1;
  const ::Common::PlaceJettonScore& alljettonscore(int index) const;
  ::Common::PlaceJettonScore* mutable_alljettonscore(int index);
  ::Common::PlaceJettonScore* add_alljettonscore();
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
      mutable_alljettonscore();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
      alljettonscore() const;

  // repeated .Common.PlaceJettonScore SelfJettonScore = 2;
  int selfjettonscore_size() const;
  void clear_selfjettonscore();
  static const int kSelfJettonScoreFieldNumber = 2;
  const ::Common::PlaceJettonScore& selfjettonscore(int index) const;
  ::Common::PlaceJettonScore* mutable_selfjettonscore(int index);
  ::Common::PlaceJettonScore* add_selfjettonscore();
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
      mutable_selfjettonscore();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
      selfjettonscore() const;

  // @@protoc_insertion_point(class_scope:Common.CMD_S_SyncJetAreaScore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore > alljettonscore_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore > selfjettonscore_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_SyncJetAreaScoreImpl();
};
// -------------------------------------------------------------------

class CMD_Scene_StatusFree : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_Scene_StatusFree) */ {
 public:
  CMD_Scene_StatusFree();
  virtual ~CMD_Scene_StatusFree();

  CMD_Scene_StatusFree(const CMD_Scene_StatusFree& from);

  inline CMD_Scene_StatusFree& operator=(const CMD_Scene_StatusFree& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_Scene_StatusFree(CMD_Scene_StatusFree&& from) noexcept
    : CMD_Scene_StatusFree() {
    *this = ::std::move(from);
  }

  inline CMD_Scene_StatusFree& operator=(CMD_Scene_StatusFree&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Scene_StatusFree& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_Scene_StatusFree* internal_default_instance() {
    return reinterpret_cast<const CMD_Scene_StatusFree*>(
               &_CMD_Scene_StatusFree_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMD_Scene_StatusFree* other);
  friend void swap(CMD_Scene_StatusFree& a, CMD_Scene_StatusFree& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_Scene_StatusFree* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Scene_StatusFree* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Scene_StatusFree& from);
  void MergeFrom(const CMD_Scene_StatusFree& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Scene_StatusFree* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string szGameRoomName = 5;
  bool has_szgameroomname() const;
  void clear_szgameroomname();
  static const int kSzGameRoomNameFieldNumber = 5;
  const ::std::string& szgameroomname() const;
  void set_szgameroomname(const ::std::string& value);
  #if LANG_CXX11
  void set_szgameroomname(::std::string&& value);
  #endif
  void set_szgameroomname(const char* value);
  void set_szgameroomname(const char* value, size_t size);
  ::std::string* mutable_szgameroomname();
  ::std::string* release_szgameroomname();
  void set_allocated_szgameroomname(::std::string* szgameroomname);

  // required .Common.GameDeskInfo DeskData = 1;
  bool has_deskdata() const;
  void clear_deskdata();
  static const int kDeskDataFieldNumber = 1;
  const ::Common::GameDeskInfo& deskdata() const;
  ::Common::GameDeskInfo* release_deskdata();
  ::Common::GameDeskInfo* mutable_deskdata();
  void set_allocated_deskdata(::Common::GameDeskInfo* deskdata);

  // required double lUserMaxScore = 3;
  bool has_lusermaxscore() const;
  void clear_lusermaxscore();
  static const int kLUserMaxScoreFieldNumber = 3;
  double lusermaxscore() const;
  void set_lusermaxscore(double value);

  // required double lUserScore = 4;
  bool has_luserscore() const;
  void clear_luserscore();
  static const int kLUserScoreFieldNumber = 4;
  double luserscore() const;
  void set_luserscore(double value);

  // required int32 cbTimeLeave = 2;
  bool has_cbtimeleave() const;
  void clear_cbtimeleave();
  static const int kCbTimeLeaveFieldNumber = 2;
  ::google::protobuf::int32 cbtimeleave() const;
  void set_cbtimeleave(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_Scene_StatusFree)
 private:
  void set_has_deskdata();
  void clear_has_deskdata();
  void set_has_cbtimeleave();
  void clear_has_cbtimeleave();
  void set_has_lusermaxscore();
  void clear_has_lusermaxscore();
  void set_has_luserscore();
  void clear_has_luserscore();
  void set_has_szgameroomname();
  void clear_has_szgameroomname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr szgameroomname_;
  ::Common::GameDeskInfo* deskdata_;
  double lusermaxscore_;
  double luserscore_;
  ::google::protobuf::int32 cbtimeleave_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_Scene_StatusFreeImpl();
};
// -------------------------------------------------------------------

class CMD_S_StartPlaceJetton : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_StartPlaceJetton) */ {
 public:
  CMD_S_StartPlaceJetton();
  virtual ~CMD_S_StartPlaceJetton();

  CMD_S_StartPlaceJetton(const CMD_S_StartPlaceJetton& from);

  inline CMD_S_StartPlaceJetton& operator=(const CMD_S_StartPlaceJetton& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_StartPlaceJetton(CMD_S_StartPlaceJetton&& from) noexcept
    : CMD_S_StartPlaceJetton() {
    *this = ::std::move(from);
  }

  inline CMD_S_StartPlaceJetton& operator=(CMD_S_StartPlaceJetton&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_StartPlaceJetton& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_StartPlaceJetton* internal_default_instance() {
    return reinterpret_cast<const CMD_S_StartPlaceJetton*>(
               &_CMD_S_StartPlaceJetton_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMD_S_StartPlaceJetton* other);
  friend void swap(CMD_S_StartPlaceJetton& a, CMD_S_StartPlaceJetton& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_StartPlaceJetton* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_StartPlaceJetton* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_StartPlaceJetton& from);
  void MergeFrom(const CMD_S_StartPlaceJetton& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_StartPlaceJetton* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Common.GameDeskInfo DeskData = 1;
  bool has_deskdata() const;
  void clear_deskdata();
  static const int kDeskDataFieldNumber = 1;
  const ::Common::GameDeskInfo& deskdata() const;
  ::Common::GameDeskInfo* release_deskdata();
  ::Common::GameDeskInfo* mutable_deskdata();
  void set_allocated_deskdata(::Common::GameDeskInfo* deskdata);

  // required int32 cbPlaceTime = 2;
  bool has_cbplacetime() const;
  void clear_cbplacetime();
  static const int kCbPlaceTimeFieldNumber = 2;
  ::google::protobuf::int32 cbplacetime() const;
  void set_cbplacetime(::google::protobuf::int32 value);

  // required int32 cbTimeLeave = 3;
  bool has_cbtimeleave() const;
  void clear_cbtimeleave();
  static const int kCbTimeLeaveFieldNumber = 3;
  ::google::protobuf::int32 cbtimeleave() const;
  void set_cbtimeleave(::google::protobuf::int32 value);

  // required double lUserMaxScore = 4;
  bool has_lusermaxscore() const;
  void clear_lusermaxscore();
  static const int kLUserMaxScoreFieldNumber = 4;
  double lusermaxscore() const;
  void set_lusermaxscore(double value);

  // required double lUserScore = 5;
  bool has_luserscore() const;
  void clear_luserscore();
  static const int kLUserScoreFieldNumber = 5;
  double luserscore() const;
  void set_luserscore(double value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_StartPlaceJetton)
 private:
  void set_has_deskdata();
  void clear_has_deskdata();
  void set_has_cbplacetime();
  void clear_has_cbplacetime();
  void set_has_cbtimeleave();
  void clear_has_cbtimeleave();
  void set_has_lusermaxscore();
  void clear_has_lusermaxscore();
  void set_has_luserscore();
  void clear_has_luserscore();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Common::GameDeskInfo* deskdata_;
  ::google::protobuf::int32 cbplacetime_;
  ::google::protobuf::int32 cbtimeleave_;
  double lusermaxscore_;
  double luserscore_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_StartPlaceJettonImpl();
};
// -------------------------------------------------------------------

class CMD_S_GameStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_GameStart) */ {
 public:
  CMD_S_GameStart();
  virtual ~CMD_S_GameStart();

  CMD_S_GameStart(const CMD_S_GameStart& from);

  inline CMD_S_GameStart& operator=(const CMD_S_GameStart& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_GameStart(CMD_S_GameStart&& from) noexcept
    : CMD_S_GameStart() {
    *this = ::std::move(from);
  }

  inline CMD_S_GameStart& operator=(CMD_S_GameStart&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_GameStart& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_GameStart* internal_default_instance() {
    return reinterpret_cast<const CMD_S_GameStart*>(
               &_CMD_S_GameStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMD_S_GameStart* other);
  friend void swap(CMD_S_GameStart& a, CMD_S_GameStart& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_GameStart* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_GameStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_GameStart& from);
  void MergeFrom(const CMD_S_GameStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_GameStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Common.GameDeskInfo DeskData = 1;
  bool has_deskdata() const;
  void clear_deskdata();
  static const int kDeskDataFieldNumber = 1;
  const ::Common::GameDeskInfo& deskdata() const;
  ::Common::GameDeskInfo* release_deskdata();
  ::Common::GameDeskInfo* mutable_deskdata();
  void set_allocated_deskdata(::Common::GameDeskInfo* deskdata);

  // required int32 cbTimeLeave = 2;
  bool has_cbtimeleave() const;
  void clear_cbtimeleave();
  static const int kCbTimeLeaveFieldNumber = 2;
  ::google::protobuf::int32 cbtimeleave() const;
  void set_cbtimeleave(::google::protobuf::int32 value);

  // required int32 nChipRobotCount = 3;
  bool has_nchiprobotcount() const;
  void clear_nchiprobotcount();
  static const int kNChipRobotCountFieldNumber = 3;
  ::google::protobuf::int32 nchiprobotcount() const;
  void set_nchiprobotcount(::google::protobuf::int32 value);

  // required double lUserMaxScore = 4;
  bool has_lusermaxscore() const;
  void clear_lusermaxscore();
  static const int kLUserMaxScoreFieldNumber = 4;
  double lusermaxscore() const;
  void set_lusermaxscore(double value);

  // required double lUserScore = 5;
  bool has_luserscore() const;
  void clear_luserscore();
  static const int kLUserScoreFieldNumber = 5;
  double luserscore() const;
  void set_luserscore(double value);

  // required int32 nRoundCount = 6;
  bool has_nroundcount() const;
  void clear_nroundcount();
  static const int kNRoundCountFieldNumber = 6;
  ::google::protobuf::int32 nroundcount() const;
  void set_nroundcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_GameStart)
 private:
  void set_has_deskdata();
  void clear_has_deskdata();
  void set_has_cbtimeleave();
  void clear_has_cbtimeleave();
  void set_has_nchiprobotcount();
  void clear_has_nchiprobotcount();
  void set_has_lusermaxscore();
  void clear_has_lusermaxscore();
  void set_has_luserscore();
  void clear_has_luserscore();
  void set_has_nroundcount();
  void clear_has_nroundcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Common::GameDeskInfo* deskdata_;
  ::google::protobuf::int32 cbtimeleave_;
  ::google::protobuf::int32 nchiprobotcount_;
  double lusermaxscore_;
  double luserscore_;
  ::google::protobuf::int32 nroundcount_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_GameStartImpl();
};
// -------------------------------------------------------------------

class PlayerScoreValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.PlayerScoreValue) */ {
 public:
  PlayerScoreValue();
  virtual ~PlayerScoreValue();

  PlayerScoreValue(const PlayerScoreValue& from);

  inline PlayerScoreValue& operator=(const PlayerScoreValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerScoreValue(PlayerScoreValue&& from) noexcept
    : PlayerScoreValue() {
    *this = ::std::move(from);
  }

  inline PlayerScoreValue& operator=(PlayerScoreValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerScoreValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerScoreValue* internal_default_instance() {
    return reinterpret_cast<const PlayerScoreValue*>(
               &_PlayerScoreValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PlayerScoreValue* other);
  friend void swap(PlayerScoreValue& a, PlayerScoreValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerScoreValue* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerScoreValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerScoreValue& from);
  void MergeFrom(const PlayerScoreValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerScoreValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double returnScore = 2;
  bool has_returnscore() const;
  void clear_returnscore();
  static const int kReturnScoreFieldNumber = 2;
  double returnscore() const;
  void set_returnscore(double value);

  // optional double userScore = 3;
  bool has_userscore() const;
  void clear_userscore();
  static const int kUserScoreFieldNumber = 3;
  double userscore() const;
  void set_userscore(double value);

  // required int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.PlayerScoreValue)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_returnscore();
  void clear_has_returnscore();
  void set_has_userscore();
  void clear_has_userscore();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double returnscore_;
  double userscore_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerScoreValueImpl();
};
// -------------------------------------------------------------------

class CMD_S_GameEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_GameEnd) */ {
 public:
  CMD_S_GameEnd();
  virtual ~CMD_S_GameEnd();

  CMD_S_GameEnd(const CMD_S_GameEnd& from);

  inline CMD_S_GameEnd& operator=(const CMD_S_GameEnd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_GameEnd(CMD_S_GameEnd&& from) noexcept
    : CMD_S_GameEnd() {
    *this = ::std::move(from);
  }

  inline CMD_S_GameEnd& operator=(CMD_S_GameEnd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_GameEnd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_GameEnd* internal_default_instance() {
    return reinterpret_cast<const CMD_S_GameEnd*>(
               &_CMD_S_GameEnd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CMD_S_GameEnd* other);
  friend void swap(CMD_S_GameEnd& a, CMD_S_GameEnd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_GameEnd* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_GameEnd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_GameEnd& from);
  void MergeFrom(const CMD_S_GameEnd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_GameEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Common.PlayerScoreValue gameEndScore = 3;
  int gameendscore_size() const;
  void clear_gameendscore();
  static const int kGameEndScoreFieldNumber = 3;
  const ::Common::PlayerScoreValue& gameendscore(int index) const;
  ::Common::PlayerScoreValue* mutable_gameendscore(int index);
  ::Common::PlayerScoreValue* add_gameendscore();
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerScoreValue >*
      mutable_gameendscore();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlayerScoreValue >&
      gameendscore() const;

  // required .Common.GameDeskInfo DeskData = 1;
  bool has_deskdata() const;
  void clear_deskdata();
  static const int kDeskDataFieldNumber = 1;
  const ::Common::GameDeskInfo& deskdata() const;
  ::Common::GameDeskInfo* release_deskdata();
  ::Common::GameDeskInfo* mutable_deskdata();
  void set_allocated_deskdata(::Common::GameDeskInfo* deskdata);

  // required double lUserMaxScore = 4;
  bool has_lusermaxscore() const;
  void clear_lusermaxscore();
  static const int kLUserMaxScoreFieldNumber = 4;
  double lusermaxscore() const;
  void set_lusermaxscore(double value);

  // required double lUserScore = 5;
  bool has_luserscore() const;
  void clear_luserscore();
  static const int kLUserScoreFieldNumber = 5;
  double luserscore() const;
  void set_luserscore(double value);

  // required double lRevenue = 6;
  bool has_lrevenue() const;
  void clear_lrevenue();
  static const int kLRevenueFieldNumber = 6;
  double lrevenue() const;
  void set_lrevenue(double value);

  // required int32 cbTimeLeave = 2;
  bool has_cbtimeleave() const;
  void clear_cbtimeleave();
  static const int kCbTimeLeaveFieldNumber = 2;
  ::google::protobuf::int32 cbtimeleave() const;
  void set_cbtimeleave(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_GameEnd)
 private:
  void set_has_deskdata();
  void clear_has_deskdata();
  void set_has_cbtimeleave();
  void clear_has_cbtimeleave();
  void set_has_lusermaxscore();
  void clear_has_lusermaxscore();
  void set_has_luserscore();
  void clear_has_luserscore();
  void set_has_lrevenue();
  void clear_has_lrevenue();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerScoreValue > gameendscore_;
  ::Common::GameDeskInfo* deskdata_;
  double lusermaxscore_;
  double luserscore_;
  double lrevenue_;
  ::google::protobuf::int32 cbtimeleave_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_GameEndImpl();
};
// -------------------------------------------------------------------

class CMD_S_BankerApplyEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_BankerApplyEnd) */ {
 public:
  CMD_S_BankerApplyEnd();
  virtual ~CMD_S_BankerApplyEnd();

  CMD_S_BankerApplyEnd(const CMD_S_BankerApplyEnd& from);

  inline CMD_S_BankerApplyEnd& operator=(const CMD_S_BankerApplyEnd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_BankerApplyEnd(CMD_S_BankerApplyEnd&& from) noexcept
    : CMD_S_BankerApplyEnd() {
    *this = ::std::move(from);
  }

  inline CMD_S_BankerApplyEnd& operator=(CMD_S_BankerApplyEnd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_BankerApplyEnd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_BankerApplyEnd* internal_default_instance() {
    return reinterpret_cast<const CMD_S_BankerApplyEnd*>(
               &_CMD_S_BankerApplyEnd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CMD_S_BankerApplyEnd* other);
  friend void swap(CMD_S_BankerApplyEnd& a, CMD_S_BankerApplyEnd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_BankerApplyEnd* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_BankerApplyEnd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_BankerApplyEnd& from);
  void MergeFrom(const CMD_S_BankerApplyEnd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_BankerApplyEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Common.GameDeskInfo DeskData = 1;
  bool has_deskdata() const;
  void clear_deskdata();
  static const int kDeskDataFieldNumber = 1;
  const ::Common::GameDeskInfo& deskdata() const;
  ::Common::GameDeskInfo* release_deskdata();
  ::Common::GameDeskInfo* mutable_deskdata();
  void set_allocated_deskdata(::Common::GameDeskInfo* deskdata);

  // required int32 cbTimeLeave = 2;
  bool has_cbtimeleave() const;
  void clear_cbtimeleave();
  static const int kCbTimeLeaveFieldNumber = 2;
  ::google::protobuf::int32 cbtimeleave() const;
  void set_cbtimeleave(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_BankerApplyEnd)
 private:
  void set_has_deskdata();
  void clear_has_deskdata();
  void set_has_cbtimeleave();
  void clear_has_cbtimeleave();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Common::GameDeskInfo* deskdata_;
  ::google::protobuf::int32 cbtimeleave_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_BankerApplyEndImpl();
};
// -------------------------------------------------------------------

class CMD_S_JettonEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_JettonEnd) */ {
 public:
  CMD_S_JettonEnd();
  virtual ~CMD_S_JettonEnd();

  CMD_S_JettonEnd(const CMD_S_JettonEnd& from);

  inline CMD_S_JettonEnd& operator=(const CMD_S_JettonEnd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_JettonEnd(CMD_S_JettonEnd&& from) noexcept
    : CMD_S_JettonEnd() {
    *this = ::std::move(from);
  }

  inline CMD_S_JettonEnd& operator=(CMD_S_JettonEnd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_JettonEnd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_JettonEnd* internal_default_instance() {
    return reinterpret_cast<const CMD_S_JettonEnd*>(
               &_CMD_S_JettonEnd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CMD_S_JettonEnd* other);
  friend void swap(CMD_S_JettonEnd& a, CMD_S_JettonEnd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_JettonEnd* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_JettonEnd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_JettonEnd& from);
  void MergeFrom(const CMD_S_JettonEnd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_JettonEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Common.GameDeskInfo DeskData = 1;
  bool has_deskdata() const;
  void clear_deskdata();
  static const int kDeskDataFieldNumber = 1;
  const ::Common::GameDeskInfo& deskdata() const;
  ::Common::GameDeskInfo* release_deskdata();
  ::Common::GameDeskInfo* mutable_deskdata();
  void set_allocated_deskdata(::Common::GameDeskInfo* deskdata);

  // required int32 cbTimeLeave = 2;
  bool has_cbtimeleave() const;
  void clear_cbtimeleave();
  static const int kCbTimeLeaveFieldNumber = 2;
  ::google::protobuf::int32 cbtimeleave() const;
  void set_cbtimeleave(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_JettonEnd)
 private:
  void set_has_deskdata();
  void clear_has_deskdata();
  void set_has_cbtimeleave();
  void clear_has_cbtimeleave();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Common::GameDeskInfo* deskdata_;
  ::google::protobuf::int32 cbtimeleave_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_JettonEndImpl();
};
// -------------------------------------------------------------------

class CMD_S_OpenCardEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_OpenCardEnd) */ {
 public:
  CMD_S_OpenCardEnd();
  virtual ~CMD_S_OpenCardEnd();

  CMD_S_OpenCardEnd(const CMD_S_OpenCardEnd& from);

  inline CMD_S_OpenCardEnd& operator=(const CMD_S_OpenCardEnd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_OpenCardEnd(CMD_S_OpenCardEnd&& from) noexcept
    : CMD_S_OpenCardEnd() {
    *this = ::std::move(from);
  }

  inline CMD_S_OpenCardEnd& operator=(CMD_S_OpenCardEnd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_OpenCardEnd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_OpenCardEnd* internal_default_instance() {
    return reinterpret_cast<const CMD_S_OpenCardEnd*>(
               &_CMD_S_OpenCardEnd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CMD_S_OpenCardEnd* other);
  friend void swap(CMD_S_OpenCardEnd& a, CMD_S_OpenCardEnd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_OpenCardEnd* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_OpenCardEnd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_OpenCardEnd& from);
  void MergeFrom(const CMD_S_OpenCardEnd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_OpenCardEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Common.GameDeskInfo DeskData = 1;
  bool has_deskdata() const;
  void clear_deskdata();
  static const int kDeskDataFieldNumber = 1;
  const ::Common::GameDeskInfo& deskdata() const;
  ::Common::GameDeskInfo* release_deskdata();
  ::Common::GameDeskInfo* mutable_deskdata();
  void set_allocated_deskdata(::Common::GameDeskInfo* deskdata);

  // required int32 cbTimeLeave = 2;
  bool has_cbtimeleave() const;
  void clear_cbtimeleave();
  static const int kCbTimeLeaveFieldNumber = 2;
  ::google::protobuf::int32 cbtimeleave() const;
  void set_cbtimeleave(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_OpenCardEnd)
 private:
  void set_has_deskdata();
  void clear_has_deskdata();
  void set_has_cbtimeleave();
  void clear_has_cbtimeleave();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Common::GameDeskInfo* deskdata_;
  ::google::protobuf::int32 cbtimeleave_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_OpenCardEndImpl();
};
// -------------------------------------------------------------------

class CMD_S_User_Get_Card : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_User_Get_Card) */ {
 public:
  CMD_S_User_Get_Card();
  virtual ~CMD_S_User_Get_Card();

  CMD_S_User_Get_Card(const CMD_S_User_Get_Card& from);

  inline CMD_S_User_Get_Card& operator=(const CMD_S_User_Get_Card& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_User_Get_Card(CMD_S_User_Get_Card&& from) noexcept
    : CMD_S_User_Get_Card() {
    *this = ::std::move(from);
  }

  inline CMD_S_User_Get_Card& operator=(CMD_S_User_Get_Card&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_User_Get_Card& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_User_Get_Card* internal_default_instance() {
    return reinterpret_cast<const CMD_S_User_Get_Card*>(
               &_CMD_S_User_Get_Card_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CMD_S_User_Get_Card* other);
  friend void swap(CMD_S_User_Get_Card& a, CMD_S_User_Get_Card& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_User_Get_Card* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_User_Get_Card* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_User_Get_Card& from);
  void MergeFrom(const CMD_S_User_Get_Card& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_User_Get_Card* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Cards = 2;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 2;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // required int32 dwUserID = 1;
  bool has_dwuserid() const;
  void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  ::google::protobuf::int32 dwuserid() const;
  void set_dwuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_User_Get_Card)
 private:
  void set_has_dwuserid();
  void clear_has_dwuserid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 dwuserid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Get_CardImpl();
};
// -------------------------------------------------------------------

class CMD_S_User_Out_Card : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_User_Out_Card) */ {
 public:
  CMD_S_User_Out_Card();
  virtual ~CMD_S_User_Out_Card();

  CMD_S_User_Out_Card(const CMD_S_User_Out_Card& from);

  inline CMD_S_User_Out_Card& operator=(const CMD_S_User_Out_Card& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_User_Out_Card(CMD_S_User_Out_Card&& from) noexcept
    : CMD_S_User_Out_Card() {
    *this = ::std::move(from);
  }

  inline CMD_S_User_Out_Card& operator=(CMD_S_User_Out_Card&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_User_Out_Card& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_User_Out_Card* internal_default_instance() {
    return reinterpret_cast<const CMD_S_User_Out_Card*>(
               &_CMD_S_User_Out_Card_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CMD_S_User_Out_Card* other);
  friend void swap(CMD_S_User_Out_Card& a, CMD_S_User_Out_Card& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_User_Out_Card* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_User_Out_Card* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_User_Out_Card& from);
  void MergeFrom(const CMD_S_User_Out_Card& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_User_Out_Card* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Cards = 2;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 2;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // required int32 dwUserID = 1;
  bool has_dwuserid() const;
  void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  ::google::protobuf::int32 dwuserid() const;
  void set_dwuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_User_Out_Card)
 private:
  void set_has_dwuserid();
  void clear_has_dwuserid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 dwuserid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_Out_CardImpl();
};
// -------------------------------------------------------------------

class CMD_S_Open_cardSucees : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_Open_cardSucees) */ {
 public:
  CMD_S_Open_cardSucees();
  virtual ~CMD_S_Open_cardSucees();

  CMD_S_Open_cardSucees(const CMD_S_Open_cardSucees& from);

  inline CMD_S_Open_cardSucees& operator=(const CMD_S_Open_cardSucees& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_Open_cardSucees(CMD_S_Open_cardSucees&& from) noexcept
    : CMD_S_Open_cardSucees() {
    *this = ::std::move(from);
  }

  inline CMD_S_Open_cardSucees& operator=(CMD_S_Open_cardSucees&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_Open_cardSucees& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_Open_cardSucees* internal_default_instance() {
    return reinterpret_cast<const CMD_S_Open_cardSucees*>(
               &_CMD_S_Open_cardSucees_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CMD_S_Open_cardSucees* other);
  friend void swap(CMD_S_Open_cardSucees& a, CMD_S_Open_cardSucees& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_Open_cardSucees* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_Open_cardSucees* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_Open_cardSucees& from);
  void MergeFrom(const CMD_S_Open_cardSucees& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_Open_cardSucees* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Common.PlayerListItem players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::Common::PlayerListItem& players(int index) const;
  ::Common::PlayerListItem* mutable_players(int index);
  ::Common::PlayerListItem* add_players();
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >&
      players() const;

  // @@protoc_insertion_point(class_scope:Common.CMD_S_Open_cardSucees)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem > players_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_Open_cardSuceesImpl();
};
// -------------------------------------------------------------------

class CMD_C_Out_Card_Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_C_Out_Card_Req) */ {
 public:
  CMD_C_Out_Card_Req();
  virtual ~CMD_C_Out_Card_Req();

  CMD_C_Out_Card_Req(const CMD_C_Out_Card_Req& from);

  inline CMD_C_Out_Card_Req& operator=(const CMD_C_Out_Card_Req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_C_Out_Card_Req(CMD_C_Out_Card_Req&& from) noexcept
    : CMD_C_Out_Card_Req() {
    *this = ::std::move(from);
  }

  inline CMD_C_Out_Card_Req& operator=(CMD_C_Out_Card_Req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_C_Out_Card_Req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_C_Out_Card_Req* internal_default_instance() {
    return reinterpret_cast<const CMD_C_Out_Card_Req*>(
               &_CMD_C_Out_Card_Req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CMD_C_Out_Card_Req* other);
  friend void swap(CMD_C_Out_Card_Req& a, CMD_C_Out_Card_Req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_Out_Card_Req* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_C_Out_Card_Req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_C_Out_Card_Req& from);
  void MergeFrom(const CMD_C_Out_Card_Req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_C_Out_Card_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double Cards = 2;
  bool has_cards() const;
  void clear_cards();
  static const int kCardsFieldNumber = 2;
  double cards() const;
  void set_cards(double value);

  // required int32 dwUserID = 1;
  bool has_dwuserid() const;
  void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  ::google::protobuf::int32 dwuserid() const;
  void set_dwuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_C_Out_Card_Req)
 private:
  void set_has_dwuserid();
  void clear_has_dwuserid();
  void set_has_cards();
  void clear_has_cards();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double cards_;
  ::google::protobuf::int32 dwuserid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_Out_Card_ReqImpl();
};
// -------------------------------------------------------------------

class CMD_C_SyncGameDesk_Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_C_SyncGameDesk_Req) */ {
 public:
  CMD_C_SyncGameDesk_Req();
  virtual ~CMD_C_SyncGameDesk_Req();

  CMD_C_SyncGameDesk_Req(const CMD_C_SyncGameDesk_Req& from);

  inline CMD_C_SyncGameDesk_Req& operator=(const CMD_C_SyncGameDesk_Req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_C_SyncGameDesk_Req(CMD_C_SyncGameDesk_Req&& from) noexcept
    : CMD_C_SyncGameDesk_Req() {
    *this = ::std::move(from);
  }

  inline CMD_C_SyncGameDesk_Req& operator=(CMD_C_SyncGameDesk_Req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_C_SyncGameDesk_Req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_C_SyncGameDesk_Req* internal_default_instance() {
    return reinterpret_cast<const CMD_C_SyncGameDesk_Req*>(
               &_CMD_C_SyncGameDesk_Req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CMD_C_SyncGameDesk_Req* other);
  friend void swap(CMD_C_SyncGameDesk_Req& a, CMD_C_SyncGameDesk_Req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_SyncGameDesk_Req* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_C_SyncGameDesk_Req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_C_SyncGameDesk_Req& from);
  void MergeFrom(const CMD_C_SyncGameDesk_Req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_C_SyncGameDesk_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Common.CMD_C_SyncGameDesk_Req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_SyncGameDesk_ReqImpl();
};
// -------------------------------------------------------------------

class CMD_S_Out_Card_Ack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_Out_Card_Ack) */ {
 public:
  CMD_S_Out_Card_Ack();
  virtual ~CMD_S_Out_Card_Ack();

  CMD_S_Out_Card_Ack(const CMD_S_Out_Card_Ack& from);

  inline CMD_S_Out_Card_Ack& operator=(const CMD_S_Out_Card_Ack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_Out_Card_Ack(CMD_S_Out_Card_Ack&& from) noexcept
    : CMD_S_Out_Card_Ack() {
    *this = ::std::move(from);
  }

  inline CMD_S_Out_Card_Ack& operator=(CMD_S_Out_Card_Ack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_Out_Card_Ack& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_Out_Card_Ack* internal_default_instance() {
    return reinterpret_cast<const CMD_S_Out_Card_Ack*>(
               &_CMD_S_Out_Card_Ack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CMD_S_Out_Card_Ack* other);
  friend void swap(CMD_S_Out_Card_Ack& a, CMD_S_Out_Card_Ack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_Out_Card_Ack* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_Out_Card_Ack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_Out_Card_Ack& from);
  void MergeFrom(const CMD_S_Out_Card_Ack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_Out_Card_Ack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string errorMsg = 2;
  bool has_errormsg() const;
  void clear_errormsg();
  static const int kErrorMsgFieldNumber = 2;
  const ::std::string& errormsg() const;
  void set_errormsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errormsg(::std::string&& value);
  #endif
  void set_errormsg(const char* value);
  void set_errormsg(const char* value, size_t size);
  ::std::string* mutable_errormsg();
  ::std::string* release_errormsg();
  void set_allocated_errormsg(::std::string* errormsg);

  // required int32 errorCode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_Out_Card_Ack)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_errormsg();
  void clear_has_errormsg();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr errormsg_;
  ::google::protobuf::int32 errorcode_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_Out_Card_AckImpl();
};
// -------------------------------------------------------------------

class CMD_C_PlaceJet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_C_PlaceJet) */ {
 public:
  CMD_C_PlaceJet();
  virtual ~CMD_C_PlaceJet();

  CMD_C_PlaceJet(const CMD_C_PlaceJet& from);

  inline CMD_C_PlaceJet& operator=(const CMD_C_PlaceJet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_C_PlaceJet(CMD_C_PlaceJet&& from) noexcept
    : CMD_C_PlaceJet() {
    *this = ::std::move(from);
  }

  inline CMD_C_PlaceJet& operator=(CMD_C_PlaceJet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_C_PlaceJet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_C_PlaceJet* internal_default_instance() {
    return reinterpret_cast<const CMD_C_PlaceJet*>(
               &_CMD_C_PlaceJet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CMD_C_PlaceJet* other);
  friend void swap(CMD_C_PlaceJet& a, CMD_C_PlaceJet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_PlaceJet* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_C_PlaceJet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_C_PlaceJet& from);
  void MergeFrom(const CMD_C_PlaceJet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_C_PlaceJet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double lJettonScore = 2;
  bool has_ljettonscore() const;
  void clear_ljettonscore();
  static const int kLJettonScoreFieldNumber = 2;
  double ljettonscore() const;
  void set_ljettonscore(double value);

  // required int32 cbJettonArea = 1;
  bool has_cbjettonarea() const;
  void clear_cbjettonarea();
  static const int kCbJettonAreaFieldNumber = 1;
  ::google::protobuf::int32 cbjettonarea() const;
  void set_cbjettonarea(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_C_PlaceJet)
 private:
  void set_has_cbjettonarea();
  void clear_has_cbjettonarea();
  void set_has_ljettonscore();
  void clear_has_ljettonscore();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double ljettonscore_;
  ::google::protobuf::int32 cbjettonarea_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_PlaceJetImpl();
};
// -------------------------------------------------------------------

class CMD_S_PlaceJettonFail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_PlaceJettonFail) */ {
 public:
  CMD_S_PlaceJettonFail();
  virtual ~CMD_S_PlaceJettonFail();

  CMD_S_PlaceJettonFail(const CMD_S_PlaceJettonFail& from);

  inline CMD_S_PlaceJettonFail& operator=(const CMD_S_PlaceJettonFail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_PlaceJettonFail(CMD_S_PlaceJettonFail&& from) noexcept
    : CMD_S_PlaceJettonFail() {
    *this = ::std::move(from);
  }

  inline CMD_S_PlaceJettonFail& operator=(CMD_S_PlaceJettonFail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_PlaceJettonFail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_PlaceJettonFail* internal_default_instance() {
    return reinterpret_cast<const CMD_S_PlaceJettonFail*>(
               &_CMD_S_PlaceJettonFail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CMD_S_PlaceJettonFail* other);
  friend void swap(CMD_S_PlaceJettonFail& a, CMD_S_PlaceJettonFail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_PlaceJettonFail* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_PlaceJettonFail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_PlaceJettonFail& from);
  void MergeFrom(const CMD_S_PlaceJettonFail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_PlaceJettonFail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwUserID = 1;
  bool has_dwuserid() const;
  void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  ::google::protobuf::int32 dwuserid() const;
  void set_dwuserid(::google::protobuf::int32 value);

  // required int32 cbJettonArea = 2;
  bool has_cbjettonarea() const;
  void clear_cbjettonarea();
  static const int kCbJettonAreaFieldNumber = 2;
  ::google::protobuf::int32 cbjettonarea() const;
  void set_cbjettonarea(::google::protobuf::int32 value);

  // required double lPlaceScore = 3;
  bool has_lplacescore() const;
  void clear_lplacescore();
  static const int kLPlaceScoreFieldNumber = 3;
  double lplacescore() const;
  void set_lplacescore(double value);

  // required int32 cbAndroid = 4;
  bool has_cbandroid() const;
  void clear_cbandroid();
  static const int kCbAndroidFieldNumber = 4;
  ::google::protobuf::int32 cbandroid() const;
  void set_cbandroid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_PlaceJettonFail)
 private:
  void set_has_dwuserid();
  void clear_has_dwuserid();
  void set_has_cbjettonarea();
  void clear_has_cbjettonarea();
  void set_has_lplacescore();
  void clear_has_lplacescore();
  void set_has_cbandroid();
  void clear_has_cbandroid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 dwuserid_;
  ::google::protobuf::int32 cbjettonarea_;
  double lplacescore_;
  ::google::protobuf::int32 cbandroid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_PlaceJettonFailImpl();
};
// -------------------------------------------------------------------

class CMD_S_PlaceJetSuccess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_PlaceJetSuccess) */ {
 public:
  CMD_S_PlaceJetSuccess();
  virtual ~CMD_S_PlaceJetSuccess();

  CMD_S_PlaceJetSuccess(const CMD_S_PlaceJetSuccess& from);

  inline CMD_S_PlaceJetSuccess& operator=(const CMD_S_PlaceJetSuccess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_PlaceJetSuccess(CMD_S_PlaceJetSuccess&& from) noexcept
    : CMD_S_PlaceJetSuccess() {
    *this = ::std::move(from);
  }

  inline CMD_S_PlaceJetSuccess& operator=(CMD_S_PlaceJetSuccess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_PlaceJetSuccess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_PlaceJetSuccess* internal_default_instance() {
    return reinterpret_cast<const CMD_S_PlaceJetSuccess*>(
               &_CMD_S_PlaceJetSuccess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CMD_S_PlaceJetSuccess* other);
  friend void swap(CMD_S_PlaceJetSuccess& a, CMD_S_PlaceJetSuccess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_PlaceJetSuccess* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_PlaceJetSuccess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_PlaceJetSuccess& from);
  void MergeFrom(const CMD_S_PlaceJetSuccess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_PlaceJetSuccess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Common.PlaceJettonScore AllJettonScore = 6;
  int alljettonscore_size() const;
  void clear_alljettonscore();
  static const int kAllJettonScoreFieldNumber = 6;
  const ::Common::PlaceJettonScore& alljettonscore(int index) const;
  ::Common::PlaceJettonScore* mutable_alljettonscore(int index);
  ::Common::PlaceJettonScore* add_alljettonscore();
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
      mutable_alljettonscore();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
      alljettonscore() const;

  // repeated .Common.PlaceJettonScore SelfJettonScore = 7;
  int selfjettonscore_size() const;
  void clear_selfjettonscore();
  static const int kSelfJettonScoreFieldNumber = 7;
  const ::Common::PlaceJettonScore& selfjettonscore(int index) const;
  ::Common::PlaceJettonScore* mutable_selfjettonscore(int index);
  ::Common::PlaceJettonScore* add_selfjettonscore();
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
      mutable_selfjettonscore();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
      selfjettonscore() const;

  // required int32 dwUserID = 1;
  bool has_dwuserid() const;
  void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  ::google::protobuf::int32 dwuserid() const;
  void set_dwuserid(::google::protobuf::int32 value);

  // required int32 cbJettonArea = 2;
  bool has_cbjettonarea() const;
  void clear_cbjettonarea();
  static const int kCbJettonAreaFieldNumber = 2;
  ::google::protobuf::int32 cbjettonarea() const;
  void set_cbjettonarea(::google::protobuf::int32 value);

  // required double lJettonScore = 3;
  bool has_ljettonscore() const;
  void clear_ljettonscore();
  static const int kLJettonScoreFieldNumber = 3;
  double ljettonscore() const;
  void set_ljettonscore(double value);

  // required double lUserScore = 5;
  bool has_luserscore() const;
  void clear_luserscore();
  static const int kLUserScoreFieldNumber = 5;
  double luserscore() const;
  void set_luserscore(double value);

  // required bool bIsAndroid = 4;
  bool has_bisandroid() const;
  void clear_bisandroid();
  static const int kBIsAndroidFieldNumber = 4;
  bool bisandroid() const;
  void set_bisandroid(bool value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_PlaceJetSuccess)
 private:
  void set_has_dwuserid();
  void clear_has_dwuserid();
  void set_has_cbjettonarea();
  void clear_has_cbjettonarea();
  void set_has_ljettonscore();
  void clear_has_ljettonscore();
  void set_has_bisandroid();
  void clear_has_bisandroid();
  void set_has_luserscore();
  void clear_has_luserscore();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore > alljettonscore_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore > selfjettonscore_;
  ::google::protobuf::int32 dwuserid_;
  ::google::protobuf::int32 cbjettonarea_;
  double ljettonscore_;
  double luserscore_;
  bool bisandroid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_PlaceJetSuccessImpl();
};
// -------------------------------------------------------------------

class CMD_S_ApplyBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_ApplyBanker) */ {
 public:
  CMD_S_ApplyBanker();
  virtual ~CMD_S_ApplyBanker();

  CMD_S_ApplyBanker(const CMD_S_ApplyBanker& from);

  inline CMD_S_ApplyBanker& operator=(const CMD_S_ApplyBanker& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_ApplyBanker(CMD_S_ApplyBanker&& from) noexcept
    : CMD_S_ApplyBanker() {
    *this = ::std::move(from);
  }

  inline CMD_S_ApplyBanker& operator=(CMD_S_ApplyBanker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_ApplyBanker& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_ApplyBanker* internal_default_instance() {
    return reinterpret_cast<const CMD_S_ApplyBanker*>(
               &_CMD_S_ApplyBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CMD_S_ApplyBanker* other);
  friend void swap(CMD_S_ApplyBanker& a, CMD_S_ApplyBanker& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_ApplyBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_ApplyBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_ApplyBanker& from);
  void MergeFrom(const CMD_S_ApplyBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_ApplyBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 wApplyChairID = 1;
  bool has_wapplychairid() const;
  void clear_wapplychairid();
  static const int kWApplyChairIDFieldNumber = 1;
  ::google::protobuf::int32 wapplychairid() const;
  void set_wapplychairid(::google::protobuf::int32 value);

  // required int32 lApplyMulti = 2;
  bool has_lapplymulti() const;
  void clear_lapplymulti();
  static const int kLApplyMultiFieldNumber = 2;
  ::google::protobuf::int32 lapplymulti() const;
  void set_lapplymulti(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_ApplyBanker)
 private:
  void set_has_wapplychairid();
  void clear_has_wapplychairid();
  void set_has_lapplymulti();
  void clear_has_lapplymulti();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 wapplychairid_;
  ::google::protobuf::int32 lapplymulti_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ApplyBankerImpl();
};
// -------------------------------------------------------------------

class CMD_S_ApplyBankerSuccess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_ApplyBankerSuccess) */ {
 public:
  CMD_S_ApplyBankerSuccess();
  virtual ~CMD_S_ApplyBankerSuccess();

  CMD_S_ApplyBankerSuccess(const CMD_S_ApplyBankerSuccess& from);

  inline CMD_S_ApplyBankerSuccess& operator=(const CMD_S_ApplyBankerSuccess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_ApplyBankerSuccess(CMD_S_ApplyBankerSuccess&& from) noexcept
    : CMD_S_ApplyBankerSuccess() {
    *this = ::std::move(from);
  }

  inline CMD_S_ApplyBankerSuccess& operator=(CMD_S_ApplyBankerSuccess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_ApplyBankerSuccess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_ApplyBankerSuccess* internal_default_instance() {
    return reinterpret_cast<const CMD_S_ApplyBankerSuccess*>(
               &_CMD_S_ApplyBankerSuccess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CMD_S_ApplyBankerSuccess* other);
  friend void swap(CMD_S_ApplyBankerSuccess& a, CMD_S_ApplyBankerSuccess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_ApplyBankerSuccess* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_ApplyBankerSuccess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_ApplyBankerSuccess& from);
  void MergeFrom(const CMD_S_ApplyBankerSuccess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_ApplyBankerSuccess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Common.PlayerListItem players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::Common::PlayerListItem& players(int index) const;
  ::Common::PlayerListItem* mutable_players(int index);
  ::Common::PlayerListItem* add_players();
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >&
      players() const;

  // @@protoc_insertion_point(class_scope:Common.CMD_S_ApplyBankerSuccess)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem > players_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ApplyBankerSuccessImpl();
};
// -------------------------------------------------------------------

class CMD_S_ApplyBanker_Fail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_ApplyBanker_Fail) */ {
 public:
  CMD_S_ApplyBanker_Fail();
  virtual ~CMD_S_ApplyBanker_Fail();

  CMD_S_ApplyBanker_Fail(const CMD_S_ApplyBanker_Fail& from);

  inline CMD_S_ApplyBanker_Fail& operator=(const CMD_S_ApplyBanker_Fail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_ApplyBanker_Fail(CMD_S_ApplyBanker_Fail&& from) noexcept
    : CMD_S_ApplyBanker_Fail() {
    *this = ::std::move(from);
  }

  inline CMD_S_ApplyBanker_Fail& operator=(CMD_S_ApplyBanker_Fail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_ApplyBanker_Fail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_ApplyBanker_Fail* internal_default_instance() {
    return reinterpret_cast<const CMD_S_ApplyBanker_Fail*>(
               &_CMD_S_ApplyBanker_Fail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CMD_S_ApplyBanker_Fail* other);
  friend void swap(CMD_S_ApplyBanker_Fail& a, CMD_S_ApplyBanker_Fail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_ApplyBanker_Fail* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_ApplyBanker_Fail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_ApplyBanker_Fail& from);
  void MergeFrom(const CMD_S_ApplyBanker_Fail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_ApplyBanker_Fail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string szErrorMessage = 2;
  bool has_szerrormessage() const;
  void clear_szerrormessage();
  static const int kSzErrorMessageFieldNumber = 2;
  const ::std::string& szerrormessage() const;
  void set_szerrormessage(const ::std::string& value);
  #if LANG_CXX11
  void set_szerrormessage(::std::string&& value);
  #endif
  void set_szerrormessage(const char* value);
  void set_szerrormessage(const char* value, size_t size);
  ::std::string* mutable_szerrormessage();
  ::std::string* release_szerrormessage();
  void set_allocated_szerrormessage(::std::string* szerrormessage);

  // required int32 nErrorCode = 1;
  bool has_nerrorcode() const;
  void clear_nerrorcode();
  static const int kNErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 nerrorcode() const;
  void set_nerrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_ApplyBanker_Fail)
 private:
  void set_has_nerrorcode();
  void clear_has_nerrorcode();
  void set_has_szerrormessage();
  void clear_has_szerrormessage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr szerrormessage_;
  ::google::protobuf::int32 nerrorcode_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ApplyBanker_FailImpl();
};
// -------------------------------------------------------------------

class CMD_S_OpenCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_OpenCard) */ {
 public:
  CMD_S_OpenCard();
  virtual ~CMD_S_OpenCard();

  CMD_S_OpenCard(const CMD_S_OpenCard& from);

  inline CMD_S_OpenCard& operator=(const CMD_S_OpenCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_OpenCard(CMD_S_OpenCard&& from) noexcept
    : CMD_S_OpenCard() {
    *this = ::std::move(from);
  }

  inline CMD_S_OpenCard& operator=(CMD_S_OpenCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_OpenCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_OpenCard* internal_default_instance() {
    return reinterpret_cast<const CMD_S_OpenCard*>(
               &_CMD_S_OpenCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CMD_S_OpenCard* other);
  friend void swap(CMD_S_OpenCard& a, CMD_S_OpenCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_OpenCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_OpenCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_OpenCard& from);
  void MergeFrom(const CMD_S_OpenCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_OpenCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 wApplyChairID = 1;
  bool has_wapplychairid() const;
  void clear_wapplychairid();
  static const int kWApplyChairIDFieldNumber = 1;
  ::google::protobuf::int32 wapplychairid() const;
  void set_wapplychairid(::google::protobuf::int32 value);

  // required int32 wApplyuserid = 2;
  bool has_wapplyuserid() const;
  void clear_wapplyuserid();
  static const int kWApplyuseridFieldNumber = 2;
  ::google::protobuf::int32 wapplyuserid() const;
  void set_wapplyuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_OpenCard)
 private:
  void set_has_wapplychairid();
  void clear_has_wapplychairid();
  void set_has_wapplyuserid();
  void clear_has_wapplyuserid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 wapplychairid_;
  ::google::protobuf::int32 wapplyuserid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_OpenCardImpl();
};
// -------------------------------------------------------------------

class CMD_S_CancelBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_CancelBanker) */ {
 public:
  CMD_S_CancelBanker();
  virtual ~CMD_S_CancelBanker();

  CMD_S_CancelBanker(const CMD_S_CancelBanker& from);

  inline CMD_S_CancelBanker& operator=(const CMD_S_CancelBanker& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_CancelBanker(CMD_S_CancelBanker&& from) noexcept
    : CMD_S_CancelBanker() {
    *this = ::std::move(from);
  }

  inline CMD_S_CancelBanker& operator=(CMD_S_CancelBanker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_CancelBanker& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_CancelBanker* internal_default_instance() {
    return reinterpret_cast<const CMD_S_CancelBanker*>(
               &_CMD_S_CancelBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CMD_S_CancelBanker* other);
  friend void swap(CMD_S_CancelBanker& a, CMD_S_CancelBanker& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_CancelBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_CancelBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_CancelBanker& from);
  void MergeFrom(const CMD_S_CancelBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_CancelBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string szCancelUser = 2;
  bool has_szcanceluser() const;
  void clear_szcanceluser();
  static const int kSzCancelUserFieldNumber = 2;
  const ::std::string& szcanceluser() const;
  void set_szcanceluser(const ::std::string& value);
  #if LANG_CXX11
  void set_szcanceluser(::std::string&& value);
  #endif
  void set_szcanceluser(const char* value);
  void set_szcanceluser(const char* value, size_t size);
  ::std::string* mutable_szcanceluser();
  ::std::string* release_szcanceluser();
  void set_allocated_szcanceluser(::std::string* szcanceluser);

  // required int32 dwUserID = 1;
  bool has_dwuserid() const;
  void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  ::google::protobuf::int32 dwuserid() const;
  void set_dwuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_CancelBanker)
 private:
  void set_has_dwuserid();
  void clear_has_dwuserid();
  void set_has_szcanceluser();
  void clear_has_szcanceluser();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr szcanceluser_;
  ::google::protobuf::int32 dwuserid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_CancelBankerImpl();
};
// -------------------------------------------------------------------

class CMD_S_CancelBanker_Fail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_CancelBanker_Fail) */ {
 public:
  CMD_S_CancelBanker_Fail();
  virtual ~CMD_S_CancelBanker_Fail();

  CMD_S_CancelBanker_Fail(const CMD_S_CancelBanker_Fail& from);

  inline CMD_S_CancelBanker_Fail& operator=(const CMD_S_CancelBanker_Fail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_CancelBanker_Fail(CMD_S_CancelBanker_Fail&& from) noexcept
    : CMD_S_CancelBanker_Fail() {
    *this = ::std::move(from);
  }

  inline CMD_S_CancelBanker_Fail& operator=(CMD_S_CancelBanker_Fail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_CancelBanker_Fail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_CancelBanker_Fail* internal_default_instance() {
    return reinterpret_cast<const CMD_S_CancelBanker_Fail*>(
               &_CMD_S_CancelBanker_Fail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CMD_S_CancelBanker_Fail* other);
  friend void swap(CMD_S_CancelBanker_Fail& a, CMD_S_CancelBanker_Fail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_CancelBanker_Fail* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_CancelBanker_Fail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_CancelBanker_Fail& from);
  void MergeFrom(const CMD_S_CancelBanker_Fail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_CancelBanker_Fail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string szErrorMessage = 2;
  bool has_szerrormessage() const;
  void clear_szerrormessage();
  static const int kSzErrorMessageFieldNumber = 2;
  const ::std::string& szerrormessage() const;
  void set_szerrormessage(const ::std::string& value);
  #if LANG_CXX11
  void set_szerrormessage(::std::string&& value);
  #endif
  void set_szerrormessage(const char* value);
  void set_szerrormessage(const char* value, size_t size);
  ::std::string* mutable_szerrormessage();
  ::std::string* release_szerrormessage();
  void set_allocated_szerrormessage(::std::string* szerrormessage);

  // required int32 nErrorCode = 1;
  bool has_nerrorcode() const;
  void clear_nerrorcode();
  static const int kNErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 nerrorcode() const;
  void set_nerrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_CancelBanker_Fail)
 private:
  void set_has_nerrorcode();
  void clear_has_nerrorcode();
  void set_has_szerrormessage();
  void clear_has_szerrormessage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr szerrormessage_;
  ::google::protobuf::int32 nerrorcode_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_CancelBanker_FailImpl();
};
// -------------------------------------------------------------------

class CMD_S_ChangeBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_ChangeBanker) */ {
 public:
  CMD_S_ChangeBanker();
  virtual ~CMD_S_ChangeBanker();

  CMD_S_ChangeBanker(const CMD_S_ChangeBanker& from);

  inline CMD_S_ChangeBanker& operator=(const CMD_S_ChangeBanker& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_ChangeBanker(CMD_S_ChangeBanker&& from) noexcept
    : CMD_S_ChangeBanker() {
    *this = ::std::move(from);
  }

  inline CMD_S_ChangeBanker& operator=(CMD_S_ChangeBanker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_ChangeBanker& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_ChangeBanker* internal_default_instance() {
    return reinterpret_cast<const CMD_S_ChangeBanker*>(
               &_CMD_S_ChangeBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CMD_S_ChangeBanker* other);
  friend void swap(CMD_S_ChangeBanker& a, CMD_S_ChangeBanker& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_ChangeBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_ChangeBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_ChangeBanker& from);
  void MergeFrom(const CMD_S_ChangeBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_ChangeBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double lBankerScore = 2;
  bool has_lbankerscore() const;
  void clear_lbankerscore();
  static const int kLBankerScoreFieldNumber = 2;
  double lbankerscore() const;
  void set_lbankerscore(double value);

  // required int32 wBankerChairID = 1;
  bool has_wbankerchairid() const;
  void clear_wbankerchairid();
  static const int kWBankerChairIDFieldNumber = 1;
  ::google::protobuf::int32 wbankerchairid() const;
  void set_wbankerchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_ChangeBanker)
 private:
  void set_has_wbankerchairid();
  void clear_has_wbankerchairid();
  void set_has_lbankerscore();
  void clear_has_lbankerscore();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double lbankerscore_;
  ::google::protobuf::int32 wbankerchairid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_ChangeBankerImpl();
};
// -------------------------------------------------------------------

class CMD_C_PlayerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_C_PlayerList) */ {
 public:
  CMD_C_PlayerList();
  virtual ~CMD_C_PlayerList();

  CMD_C_PlayerList(const CMD_C_PlayerList& from);

  inline CMD_C_PlayerList& operator=(const CMD_C_PlayerList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_C_PlayerList(CMD_C_PlayerList&& from) noexcept
    : CMD_C_PlayerList() {
    *this = ::std::move(from);
  }

  inline CMD_C_PlayerList& operator=(CMD_C_PlayerList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_C_PlayerList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_C_PlayerList* internal_default_instance() {
    return reinterpret_cast<const CMD_C_PlayerList*>(
               &_CMD_C_PlayerList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CMD_C_PlayerList* other);
  friend void swap(CMD_C_PlayerList& a, CMD_C_PlayerList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_PlayerList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_C_PlayerList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_C_PlayerList& from);
  void MergeFrom(const CMD_C_PlayerList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_C_PlayerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nLimitCount = 1;
  bool has_nlimitcount() const;
  void clear_nlimitcount();
  static const int kNLimitCountFieldNumber = 1;
  ::google::protobuf::int32 nlimitcount() const;
  void set_nlimitcount(::google::protobuf::int32 value);

  // optional int32 nBeginIndex = 2;
  bool has_nbeginindex() const;
  void clear_nbeginindex();
  static const int kNBeginIndexFieldNumber = 2;
  ::google::protobuf::int32 nbeginindex() const;
  void set_nbeginindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_C_PlayerList)
 private:
  void set_has_nlimitcount();
  void clear_has_nlimitcount();
  void set_has_nbeginindex();
  void clear_has_nbeginindex();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 nlimitcount_;
  ::google::protobuf::int32 nbeginindex_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_C_PlayerListImpl();
};
// -------------------------------------------------------------------

class PlayerListItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.PlayerListItem) */ {
 public:
  PlayerListItem();
  virtual ~PlayerListItem();

  PlayerListItem(const PlayerListItem& from);

  inline PlayerListItem& operator=(const PlayerListItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerListItem(PlayerListItem&& from) noexcept
    : PlayerListItem() {
    *this = ::std::move(from);
  }

  inline PlayerListItem& operator=(PlayerListItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerListItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerListItem* internal_default_instance() {
    return reinterpret_cast<const PlayerListItem*>(
               &_PlayerListItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(PlayerListItem* other);
  friend void swap(PlayerListItem& a, PlayerListItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerListItem* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerListItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerListItem& from);
  void MergeFrom(const PlayerListItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerListItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string nickName = 4;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 4;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string szLocation = 15;
  bool has_szlocation() const;
  void clear_szlocation();
  static const int kSzLocationFieldNumber = 15;
  const ::std::string& szlocation() const;
  void set_szlocation(const ::std::string& value);
  #if LANG_CXX11
  void set_szlocation(::std::string&& value);
  #endif
  void set_szlocation(const char* value);
  void set_szlocation(const char* value, size_t size);
  ::std::string* mutable_szlocation();
  ::std::string* release_szlocation();
  void set_allocated_szlocation(::std::string* szlocation);

  // required int32 dwUserID = 1;
  bool has_dwuserid() const;
  void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  ::google::protobuf::int32 dwuserid() const;
  void set_dwuserid(::google::protobuf::int32 value);

  // required int32 headerID = 2;
  bool has_headerid() const;
  void clear_headerid();
  static const int kHeaderIDFieldNumber = 2;
  ::google::protobuf::int32 headerid() const;
  void set_headerid(::google::protobuf::int32 value);

  // required double lUserScore = 5;
  bool has_luserscore() const;
  void clear_luserscore();
  static const int kLUserScoreFieldNumber = 5;
  double luserscore() const;
  void set_luserscore(double value);

  // required int32 nVipLevel = 3;
  bool has_nviplevel() const;
  void clear_nviplevel();
  static const int kNVipLevelFieldNumber = 3;
  ::google::protobuf::int32 nviplevel() const;
  void set_nviplevel(::google::protobuf::int32 value);

  // optional int32 lTwentyWinCount = 7;
  bool has_ltwentywincount() const;
  void clear_ltwentywincount();
  static const int kLTwentyWinCountFieldNumber = 7;
  ::google::protobuf::int32 ltwentywincount() const;
  void set_ltwentywincount(::google::protobuf::int32 value);

  // optional double lTwentyWinScore = 6;
  bool has_ltwentywinscore() const;
  void clear_ltwentywinscore();
  static const int kLTwentyWinScoreFieldNumber = 6;
  double ltwentywinscore() const;
  void set_ltwentywinscore(double value);

  // optional int32 isdivineMath = 8;
  bool has_isdivinemath() const;
  void clear_isdivinemath();
  static const int kIsdivineMathFieldNumber = 8;
  ::google::protobuf::int32 isdivinemath() const;
  void set_isdivinemath(::google::protobuf::int32 value);

  // optional int32 Index = 9;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 9;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional int32 isBanker = 10;
  bool has_isbanker() const;
  void clear_isbanker();
  static const int kIsBankerFieldNumber = 10;
  ::google::protobuf::int32 isbanker() const;
  void set_isbanker(::google::protobuf::int32 value);

  // required int32 gender = 11;
  bool has_gender() const;
  void clear_gender();
  static const int kGenderFieldNumber = 11;
  ::google::protobuf::int32 gender() const;
  void set_gender(::google::protobuf::int32 value);

  // optional int32 isApplyBanker = 12;
  bool has_isapplybanker() const;
  void clear_isapplybanker();
  static const int kIsApplyBankerFieldNumber = 12;
  ::google::protobuf::int32 isapplybanker() const;
  void set_isapplybanker(::google::protobuf::int32 value);

  // optional int32 ApplyBankerMulti = 13;
  bool has_applybankermulti() const;
  void clear_applybankermulti();
  static const int kApplyBankerMultiFieldNumber = 13;
  ::google::protobuf::int32 applybankermulti() const;
  void set_applybankermulti(::google::protobuf::int32 value);

  // optional int32 lJetton = 14;
  bool has_ljetton() const;
  void clear_ljetton();
  static const int kLJettonFieldNumber = 14;
  ::google::protobuf::int32 ljetton() const;
  void set_ljetton(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.PlayerListItem)
 private:
  void set_has_dwuserid();
  void clear_has_dwuserid();
  void set_has_headerid();
  void clear_has_headerid();
  void set_has_nviplevel();
  void clear_has_nviplevel();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_luserscore();
  void clear_has_luserscore();
  void set_has_ltwentywinscore();
  void clear_has_ltwentywinscore();
  void set_has_ltwentywincount();
  void clear_has_ltwentywincount();
  void set_has_isdivinemath();
  void clear_has_isdivinemath();
  void set_has_index();
  void clear_has_index();
  void set_has_isbanker();
  void clear_has_isbanker();
  void set_has_gender();
  void clear_has_gender();
  void set_has_isapplybanker();
  void clear_has_isapplybanker();
  void set_has_applybankermulti();
  void clear_has_applybankermulti();
  void set_has_ljetton();
  void clear_has_ljetton();
  void set_has_szlocation();
  void clear_has_szlocation();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr szlocation_;
  ::google::protobuf::int32 dwuserid_;
  ::google::protobuf::int32 headerid_;
  double luserscore_;
  ::google::protobuf::int32 nviplevel_;
  ::google::protobuf::int32 ltwentywincount_;
  double ltwentywinscore_;
  ::google::protobuf::int32 isdivinemath_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 isbanker_;
  ::google::protobuf::int32 gender_;
  ::google::protobuf::int32 isapplybanker_;
  ::google::protobuf::int32 applybankermulti_;
  ::google::protobuf::int32 ljetton_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsPlayerListItemImpl();
};
// -------------------------------------------------------------------

class CMD_S_User_Enter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_User_Enter) */ {
 public:
  CMD_S_User_Enter();
  virtual ~CMD_S_User_Enter();

  CMD_S_User_Enter(const CMD_S_User_Enter& from);

  inline CMD_S_User_Enter& operator=(const CMD_S_User_Enter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_User_Enter(CMD_S_User_Enter&& from) noexcept
    : CMD_S_User_Enter() {
    *this = ::std::move(from);
  }

  inline CMD_S_User_Enter& operator=(CMD_S_User_Enter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_User_Enter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_User_Enter* internal_default_instance() {
    return reinterpret_cast<const CMD_S_User_Enter*>(
               &_CMD_S_User_Enter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(CMD_S_User_Enter* other);
  friend void swap(CMD_S_User_Enter& a, CMD_S_User_Enter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_User_Enter* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_User_Enter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_User_Enter& from);
  void MergeFrom(const CMD_S_User_Enter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_User_Enter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Common.GameDeskInfo DeskData = 1;
  bool has_deskdata() const;
  void clear_deskdata();
  static const int kDeskDataFieldNumber = 1;
  const ::Common::GameDeskInfo& deskdata() const;
  ::Common::GameDeskInfo* release_deskdata();
  ::Common::GameDeskInfo* mutable_deskdata();
  void set_allocated_deskdata(::Common::GameDeskInfo* deskdata);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_User_Enter)
 private:
  void set_has_deskdata();
  void clear_has_deskdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Common::GameDeskInfo* deskdata_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_EnterImpl();
};
// -------------------------------------------------------------------

class CMD_S_User_Leave : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_User_Leave) */ {
 public:
  CMD_S_User_Leave();
  virtual ~CMD_S_User_Leave();

  CMD_S_User_Leave(const CMD_S_User_Leave& from);

  inline CMD_S_User_Leave& operator=(const CMD_S_User_Leave& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_User_Leave(CMD_S_User_Leave&& from) noexcept
    : CMD_S_User_Leave() {
    *this = ::std::move(from);
  }

  inline CMD_S_User_Leave& operator=(CMD_S_User_Leave&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_User_Leave& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_User_Leave* internal_default_instance() {
    return reinterpret_cast<const CMD_S_User_Leave*>(
               &_CMD_S_User_Leave_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(CMD_S_User_Leave* other);
  friend void swap(CMD_S_User_Leave& a, CMD_S_User_Leave& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_User_Leave* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_User_Leave* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_User_Leave& from);
  void MergeFrom(const CMD_S_User_Leave& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_User_Leave* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Common.GameDeskInfo DeskData = 1;
  bool has_deskdata() const;
  void clear_deskdata();
  static const int kDeskDataFieldNumber = 1;
  const ::Common::GameDeskInfo& deskdata() const;
  ::Common::GameDeskInfo* release_deskdata();
  ::Common::GameDeskInfo* mutable_deskdata();
  void set_allocated_deskdata(::Common::GameDeskInfo* deskdata);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_User_Leave)
 private:
  void set_has_deskdata();
  void clear_has_deskdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Common::GameDeskInfo* deskdata_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_LeaveImpl();
};
// -------------------------------------------------------------------

class CMD_S_User_Reday : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_User_Reday) */ {
 public:
  CMD_S_User_Reday();
  virtual ~CMD_S_User_Reday();

  CMD_S_User_Reday(const CMD_S_User_Reday& from);

  inline CMD_S_User_Reday& operator=(const CMD_S_User_Reday& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_User_Reday(CMD_S_User_Reday&& from) noexcept
    : CMD_S_User_Reday() {
    *this = ::std::move(from);
  }

  inline CMD_S_User_Reday& operator=(CMD_S_User_Reday&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_User_Reday& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_User_Reday* internal_default_instance() {
    return reinterpret_cast<const CMD_S_User_Reday*>(
               &_CMD_S_User_Reday_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(CMD_S_User_Reday* other);
  friend void swap(CMD_S_User_Reday& a, CMD_S_User_Reday& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_User_Reday* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_User_Reday* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_User_Reday& from);
  void MergeFrom(const CMD_S_User_Reday& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_User_Reday* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwUserID = 1;
  bool has_dwuserid() const;
  void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  ::google::protobuf::int32 dwuserid() const;
  void set_dwuserid(::google::protobuf::int32 value);

  // required int32 dwChairid = 2;
  bool has_dwchairid() const;
  void clear_dwchairid();
  static const int kDwChairidFieldNumber = 2;
  ::google::protobuf::int32 dwchairid() const;
  void set_dwchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_User_Reday)
 private:
  void set_has_dwuserid();
  void clear_has_dwuserid();
  void set_has_dwchairid();
  void clear_has_dwchairid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 dwuserid_;
  ::google::protobuf::int32 dwchairid_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_User_RedayImpl();
};
// -------------------------------------------------------------------

class CMD_S_PlayerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CMD_S_PlayerList) */ {
 public:
  CMD_S_PlayerList();
  virtual ~CMD_S_PlayerList();

  CMD_S_PlayerList(const CMD_S_PlayerList& from);

  inline CMD_S_PlayerList& operator=(const CMD_S_PlayerList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_S_PlayerList(CMD_S_PlayerList&& from) noexcept
    : CMD_S_PlayerList() {
    *this = ::std::move(from);
  }

  inline CMD_S_PlayerList& operator=(CMD_S_PlayerList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_S_PlayerList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_S_PlayerList* internal_default_instance() {
    return reinterpret_cast<const CMD_S_PlayerList*>(
               &_CMD_S_PlayerList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(CMD_S_PlayerList* other);
  friend void swap(CMD_S_PlayerList& a, CMD_S_PlayerList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_PlayerList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_S_PlayerList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_S_PlayerList& from);
  void MergeFrom(const CMD_S_PlayerList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_S_PlayerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Common.PlayerListItem players = 3;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 3;
  const ::Common::PlayerListItem& players(int index) const;
  ::Common::PlayerListItem* mutable_players(int index);
  ::Common::PlayerListItem* add_players();
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >&
      players() const;

  // required int32 nEndIndex = 1;
  bool has_nendindex() const;
  void clear_nendindex();
  static const int kNEndIndexFieldNumber = 1;
  ::google::protobuf::int32 nendindex() const;
  void set_nendindex(::google::protobuf::int32 value);

  // required int32 nResultCount = 2;
  bool has_nresultcount() const;
  void clear_nresultcount();
  static const int kNResultCountFieldNumber = 2;
  ::google::protobuf::int32 nresultcount() const;
  void set_nresultcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CMD_S_PlayerList)
 private:
  void set_has_nendindex();
  void clear_has_nendindex();
  void set_has_nresultcount();
  void clear_has_nresultcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem > players_;
  ::google::protobuf::int32 nendindex_;
  ::google::protobuf::int32 nresultcount_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCMD_S_PlayerListImpl();
};
// -------------------------------------------------------------------

class CardGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Common.CardGroup) */ {
 public:
  CardGroup();
  virtual ~CardGroup();

  CardGroup(const CardGroup& from);

  inline CardGroup& operator=(const CardGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CardGroup(CardGroup&& from) noexcept
    : CardGroup() {
    *this = ::std::move(from);
  }

  inline CardGroup& operator=(CardGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CardGroup* internal_default_instance() {
    return reinterpret_cast<const CardGroup*>(
               &_CardGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(CardGroup* other);
  friend void swap(CardGroup& a, CardGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CardGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  CardGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardGroup& from);
  void MergeFrom(const CardGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Cards = 3;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 3;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // required int32 group_id = 1;
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::int32 group_id() const;
  void set_group_id(::google::protobuf::int32 value);

  // optional int32 CardType = 2;
  bool has_cardtype() const;
  void clear_cardtype();
  static const int kCardTypeFieldNumber = 2;
  ::google::protobuf::int32 cardtype() const;
  void set_cardtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Common.CardGroup)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_cardtype();
  void clear_has_cardtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 group_id_;
  ::google::protobuf::int32 cardtype_;
  friend struct ::protobuf_Common_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_Common_2eMessage_2eproto::InitDefaultsCardGroupImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlaceJetInfo

// required int32 lJettonType = 1;
inline bool PlaceJetInfo::has_ljettontype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceJetInfo::set_has_ljettontype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceJetInfo::clear_has_ljettontype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceJetInfo::clear_ljettontype() {
  ljettontype_ = 0;
  clear_has_ljettontype();
}
inline ::google::protobuf::int32 PlaceJetInfo::ljettontype() const {
  // @@protoc_insertion_point(field_get:Common.PlaceJetInfo.lJettonType)
  return ljettontype_;
}
inline void PlaceJetInfo::set_ljettontype(::google::protobuf::int32 value) {
  set_has_ljettontype();
  ljettontype_ = value;
  // @@protoc_insertion_point(field_set:Common.PlaceJetInfo.lJettonType)
}

// required int32 lJettonCount = 2;
inline bool PlaceJetInfo::has_ljettoncount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceJetInfo::set_has_ljettoncount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceJetInfo::clear_has_ljettoncount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceJetInfo::clear_ljettoncount() {
  ljettoncount_ = 0;
  clear_has_ljettoncount();
}
inline ::google::protobuf::int32 PlaceJetInfo::ljettoncount() const {
  // @@protoc_insertion_point(field_get:Common.PlaceJetInfo.lJettonCount)
  return ljettoncount_;
}
inline void PlaceJetInfo::set_ljettoncount(::google::protobuf::int32 value) {
  set_has_ljettoncount();
  ljettoncount_ = value;
  // @@protoc_insertion_point(field_set:Common.PlaceJetInfo.lJettonCount)
}

// required int32 lJettonArea = 3;
inline bool PlaceJetInfo::has_ljettonarea() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlaceJetInfo::set_has_ljettonarea() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlaceJetInfo::clear_has_ljettonarea() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlaceJetInfo::clear_ljettonarea() {
  ljettonarea_ = 0;
  clear_has_ljettonarea();
}
inline ::google::protobuf::int32 PlaceJetInfo::ljettonarea() const {
  // @@protoc_insertion_point(field_get:Common.PlaceJetInfo.lJettonArea)
  return ljettonarea_;
}
inline void PlaceJetInfo::set_ljettonarea(::google::protobuf::int32 value) {
  set_has_ljettonarea();
  ljettonarea_ = value;
  // @@protoc_insertion_point(field_set:Common.PlaceJetInfo.lJettonArea)
}

// -------------------------------------------------------------------

// PlaceJettonScore

// required int32 dwUserID = 1;
inline bool PlaceJettonScore::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaceJettonScore::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaceJettonScore::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaceJettonScore::clear_dwuserid() {
  dwuserid_ = 0;
  clear_has_dwuserid();
}
inline ::google::protobuf::int32 PlaceJettonScore::dwuserid() const {
  // @@protoc_insertion_point(field_get:Common.PlaceJettonScore.dwUserID)
  return dwuserid_;
}
inline void PlaceJettonScore::set_dwuserid(::google::protobuf::int32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.PlaceJettonScore.dwUserID)
}

// required double lJettonScore = 2;
inline bool PlaceJettonScore::has_ljettonscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaceJettonScore::set_has_ljettonscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaceJettonScore::clear_has_ljettonscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaceJettonScore::clear_ljettonscore() {
  ljettonscore_ = 0;
  clear_has_ljettonscore();
}
inline double PlaceJettonScore::ljettonscore() const {
  // @@protoc_insertion_point(field_get:Common.PlaceJettonScore.lJettonScore)
  return ljettonscore_;
}
inline void PlaceJettonScore::set_ljettonscore(double value) {
  set_has_ljettonscore();
  ljettonscore_ = value;
  // @@protoc_insertion_point(field_set:Common.PlaceJettonScore.lJettonScore)
}

// required int32 lJettonArea = 3;
inline bool PlaceJettonScore::has_ljettonarea() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlaceJettonScore::set_has_ljettonarea() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlaceJettonScore::clear_has_ljettonarea() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlaceJettonScore::clear_ljettonarea() {
  ljettonarea_ = 0;
  clear_has_ljettonarea();
}
inline ::google::protobuf::int32 PlaceJettonScore::ljettonarea() const {
  // @@protoc_insertion_point(field_get:Common.PlaceJettonScore.lJettonArea)
  return ljettonarea_;
}
inline void PlaceJettonScore::set_ljettonarea(::google::protobuf::int32 value) {
  set_has_ljettonarea();
  ljettonarea_ = value;
  // @@protoc_insertion_point(field_set:Common.PlaceJettonScore.lJettonArea)
}

// -------------------------------------------------------------------

// GameDeskInfo

// repeated .Common.PlaceJettonScore lAllJettonScore = 1;
inline int GameDeskInfo::lalljettonscore_size() const {
  return lalljettonscore_.size();
}
inline void GameDeskInfo::clear_lalljettonscore() {
  lalljettonscore_.Clear();
}
inline const ::Common::PlaceJettonScore& GameDeskInfo::lalljettonscore(int index) const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.lAllJettonScore)
  return lalljettonscore_.Get(index);
}
inline ::Common::PlaceJettonScore* GameDeskInfo::mutable_lalljettonscore(int index) {
  // @@protoc_insertion_point(field_mutable:Common.GameDeskInfo.lAllJettonScore)
  return lalljettonscore_.Mutable(index);
}
inline ::Common::PlaceJettonScore* GameDeskInfo::add_lalljettonscore() {
  // @@protoc_insertion_point(field_add:Common.GameDeskInfo.lAllJettonScore)
  return lalljettonscore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
GameDeskInfo::mutable_lalljettonscore() {
  // @@protoc_insertion_point(field_mutable_list:Common.GameDeskInfo.lAllJettonScore)
  return &lalljettonscore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
GameDeskInfo::lalljettonscore() const {
  // @@protoc_insertion_point(field_list:Common.GameDeskInfo.lAllJettonScore)
  return lalljettonscore_;
}

// repeated .Common.PlaceJettonScore SelfJettonScore = 2;
inline int GameDeskInfo::selfjettonscore_size() const {
  return selfjettonscore_.size();
}
inline void GameDeskInfo::clear_selfjettonscore() {
  selfjettonscore_.Clear();
}
inline const ::Common::PlaceJettonScore& GameDeskInfo::selfjettonscore(int index) const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.SelfJettonScore)
  return selfjettonscore_.Get(index);
}
inline ::Common::PlaceJettonScore* GameDeskInfo::mutable_selfjettonscore(int index) {
  // @@protoc_insertion_point(field_mutable:Common.GameDeskInfo.SelfJettonScore)
  return selfjettonscore_.Mutable(index);
}
inline ::Common::PlaceJettonScore* GameDeskInfo::add_selfjettonscore() {
  // @@protoc_insertion_point(field_add:Common.GameDeskInfo.SelfJettonScore)
  return selfjettonscore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
GameDeskInfo::mutable_selfjettonscore() {
  // @@protoc_insertion_point(field_mutable_list:Common.GameDeskInfo.SelfJettonScore)
  return &selfjettonscore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
GameDeskInfo::selfjettonscore() const {
  // @@protoc_insertion_point(field_list:Common.GameDeskInfo.SelfJettonScore)
  return selfjettonscore_;
}

// repeated .Common.PlaceJettonScore divineJettonScore = 3;
inline int GameDeskInfo::divinejettonscore_size() const {
  return divinejettonscore_.size();
}
inline void GameDeskInfo::clear_divinejettonscore() {
  divinejettonscore_.Clear();
}
inline const ::Common::PlaceJettonScore& GameDeskInfo::divinejettonscore(int index) const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.divineJettonScore)
  return divinejettonscore_.Get(index);
}
inline ::Common::PlaceJettonScore* GameDeskInfo::mutable_divinejettonscore(int index) {
  // @@protoc_insertion_point(field_mutable:Common.GameDeskInfo.divineJettonScore)
  return divinejettonscore_.Mutable(index);
}
inline ::Common::PlaceJettonScore* GameDeskInfo::add_divinejettonscore() {
  // @@protoc_insertion_point(field_add:Common.GameDeskInfo.divineJettonScore)
  return divinejettonscore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
GameDeskInfo::mutable_divinejettonscore() {
  // @@protoc_insertion_point(field_mutable_list:Common.GameDeskInfo.divineJettonScore)
  return &divinejettonscore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
GameDeskInfo::divinejettonscore() const {
  // @@protoc_insertion_point(field_list:Common.GameDeskInfo.divineJettonScore)
  return divinejettonscore_;
}

// required double lApplyBankerCondition = 4;
inline bool GameDeskInfo::has_lapplybankercondition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameDeskInfo::set_has_lapplybankercondition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameDeskInfo::clear_has_lapplybankercondition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameDeskInfo::clear_lapplybankercondition() {
  lapplybankercondition_ = 0;
  clear_has_lapplybankercondition();
}
inline double GameDeskInfo::lapplybankercondition() const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.lApplyBankerCondition)
  return lapplybankercondition_;
}
inline void GameDeskInfo::set_lapplybankercondition(double value) {
  set_has_lapplybankercondition();
  lapplybankercondition_ = value;
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.lApplyBankerCondition)
}

// required double lAreaLimitScore = 5;
inline bool GameDeskInfo::has_larealimitscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameDeskInfo::set_has_larealimitscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameDeskInfo::clear_has_larealimitscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameDeskInfo::clear_larealimitscore() {
  larealimitscore_ = 0;
  clear_has_larealimitscore();
}
inline double GameDeskInfo::larealimitscore() const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.lAreaLimitScore)
  return larealimitscore_;
}
inline void GameDeskInfo::set_larealimitscore(double value) {
  set_has_larealimitscore();
  larealimitscore_ = value;
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.lAreaLimitScore)
}

// repeated .Common.CardGroup Cards = 6;
inline int GameDeskInfo::cards_size() const {
  return cards_.size();
}
inline void GameDeskInfo::clear_cards() {
  cards_.Clear();
}
inline const ::Common::CardGroup& GameDeskInfo::cards(int index) const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.Cards)
  return cards_.Get(index);
}
inline ::Common::CardGroup* GameDeskInfo::mutable_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Common.GameDeskInfo.Cards)
  return cards_.Mutable(index);
}
inline ::Common::CardGroup* GameDeskInfo::add_cards() {
  // @@protoc_insertion_point(field_add:Common.GameDeskInfo.Cards)
  return cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::CardGroup >*
GameDeskInfo::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Common.GameDeskInfo.Cards)
  return &cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::CardGroup >&
GameDeskInfo::cards() const {
  // @@protoc_insertion_point(field_list:Common.GameDeskInfo.Cards)
  return cards_;
}

// repeated .Common.PlayerListItem players = 7;
inline int GameDeskInfo::players_size() const {
  return players_.size();
}
inline void GameDeskInfo::clear_players() {
  players_.Clear();
}
inline const ::Common::PlayerListItem& GameDeskInfo::players(int index) const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.players)
  return players_.Get(index);
}
inline ::Common::PlayerListItem* GameDeskInfo::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:Common.GameDeskInfo.players)
  return players_.Mutable(index);
}
inline ::Common::PlayerListItem* GameDeskInfo::add_players() {
  // @@protoc_insertion_point(field_add:Common.GameDeskInfo.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >*
GameDeskInfo::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:Common.GameDeskInfo.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >&
GameDeskInfo::players() const {
  // @@protoc_insertion_point(field_list:Common.GameDeskInfo.players)
  return players_;
}

// required int32 wBankerChairID = 8;
inline bool GameDeskInfo::has_wbankerchairid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameDeskInfo::set_has_wbankerchairid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameDeskInfo::clear_has_wbankerchairid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameDeskInfo::clear_wbankerchairid() {
  wbankerchairid_ = 0;
  clear_has_wbankerchairid();
}
inline ::google::protobuf::int32 GameDeskInfo::wbankerchairid() const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.wBankerChairID)
  return wbankerchairid_;
}
inline void GameDeskInfo::set_wbankerchairid(::google::protobuf::int32 value) {
  set_has_wbankerchairid();
  wbankerchairid_ = value;
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.wBankerChairID)
}

// required int32 cbBankerTime = 9;
inline bool GameDeskInfo::has_cbbankertime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameDeskInfo::set_has_cbbankertime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameDeskInfo::clear_has_cbbankertime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameDeskInfo::clear_cbbankertime() {
  cbbankertime_ = 0;
  clear_has_cbbankertime();
}
inline ::google::protobuf::int32 GameDeskInfo::cbbankertime() const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.cbBankerTime)
  return cbbankertime_;
}
inline void GameDeskInfo::set_cbbankertime(::google::protobuf::int32 value) {
  set_has_cbbankertime();
  cbbankertime_ = value;
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.cbBankerTime)
}

// required double lBankerWinScore = 10;
inline bool GameDeskInfo::has_lbankerwinscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameDeskInfo::set_has_lbankerwinscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameDeskInfo::clear_has_lbankerwinscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameDeskInfo::clear_lbankerwinscore() {
  lbankerwinscore_ = 0;
  clear_has_lbankerwinscore();
}
inline double GameDeskInfo::lbankerwinscore() const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.lBankerWinScore)
  return lbankerwinscore_;
}
inline void GameDeskInfo::set_lbankerwinscore(double value) {
  set_has_lbankerwinscore();
  lbankerwinscore_ = value;
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.lBankerWinScore)
}

// required double lBankerScore = 11;
inline bool GameDeskInfo::has_lbankerscore() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameDeskInfo::set_has_lbankerscore() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameDeskInfo::clear_has_lbankerscore() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameDeskInfo::clear_lbankerscore() {
  lbankerscore_ = 0;
  clear_has_lbankerscore();
}
inline double GameDeskInfo::lbankerscore() const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.lBankerScore)
  return lbankerscore_;
}
inline void GameDeskInfo::set_lbankerscore(double value) {
  set_has_lbankerscore();
  lbankerscore_ = value;
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.lBankerScore)
}

// required bool bEnableSysBanker = 12;
inline bool GameDeskInfo::has_benablesysbanker() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameDeskInfo::set_has_benablesysbanker() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameDeskInfo::clear_has_benablesysbanker() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameDeskInfo::clear_benablesysbanker() {
  benablesysbanker_ = false;
  clear_has_benablesysbanker();
}
inline bool GameDeskInfo::benablesysbanker() const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.bEnableSysBanker)
  return benablesysbanker_;
}
inline void GameDeskInfo::set_benablesysbanker(bool value) {
  set_has_benablesysbanker();
  benablesysbanker_ = value;
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.bEnableSysBanker)
}

// optional string szGameRoomName = 13;
inline bool GameDeskInfo::has_szgameroomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameDeskInfo::set_has_szgameroomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameDeskInfo::clear_has_szgameroomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameDeskInfo::clear_szgameroomname() {
  szgameroomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szgameroomname();
}
inline const ::std::string& GameDeskInfo::szgameroomname() const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.szGameRoomName)
  return szgameroomname_.GetNoArena();
}
inline void GameDeskInfo::set_szgameroomname(const ::std::string& value) {
  set_has_szgameroomname();
  szgameroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.szGameRoomName)
}
#if LANG_CXX11
inline void GameDeskInfo::set_szgameroomname(::std::string&& value) {
  set_has_szgameroomname();
  szgameroomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Common.GameDeskInfo.szGameRoomName)
}
#endif
inline void GameDeskInfo::set_szgameroomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szgameroomname();
  szgameroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Common.GameDeskInfo.szGameRoomName)
}
inline void GameDeskInfo::set_szgameroomname(const char* value, size_t size) {
  set_has_szgameroomname();
  szgameroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Common.GameDeskInfo.szGameRoomName)
}
inline ::std::string* GameDeskInfo::mutable_szgameroomname() {
  set_has_szgameroomname();
  // @@protoc_insertion_point(field_mutable:Common.GameDeskInfo.szGameRoomName)
  return szgameroomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameDeskInfo::release_szgameroomname() {
  // @@protoc_insertion_point(field_release:Common.GameDeskInfo.szGameRoomName)
  clear_has_szgameroomname();
  return szgameroomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameDeskInfo::set_allocated_szgameroomname(::std::string* szgameroomname) {
  if (szgameroomname != NULL) {
    set_has_szgameroomname();
  } else {
    clear_has_szgameroomname();
  }
  szgameroomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szgameroomname);
  // @@protoc_insertion_point(field_set_allocated:Common.GameDeskInfo.szGameRoomName)
}

// repeated int32 winTag = 14;
inline int GameDeskInfo::wintag_size() const {
  return wintag_.size();
}
inline void GameDeskInfo::clear_wintag() {
  wintag_.Clear();
}
inline ::google::protobuf::int32 GameDeskInfo::wintag(int index) const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.winTag)
  return wintag_.Get(index);
}
inline void GameDeskInfo::set_wintag(int index, ::google::protobuf::int32 value) {
  wintag_.Set(index, value);
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.winTag)
}
inline void GameDeskInfo::add_wintag(::google::protobuf::int32 value) {
  wintag_.Add(value);
  // @@protoc_insertion_point(field_add:Common.GameDeskInfo.winTag)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameDeskInfo::wintag() const {
  // @@protoc_insertion_point(field_list:Common.GameDeskInfo.winTag)
  return wintag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameDeskInfo::mutable_wintag() {
  // @@protoc_insertion_point(field_mutable_list:Common.GameDeskInfo.winTag)
  return &wintag_;
}

// repeated int32 winCardGroupType = 15;
inline int GameDeskInfo::wincardgrouptype_size() const {
  return wincardgrouptype_.size();
}
inline void GameDeskInfo::clear_wincardgrouptype() {
  wincardgrouptype_.Clear();
}
inline ::google::protobuf::int32 GameDeskInfo::wincardgrouptype(int index) const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.winCardGroupType)
  return wincardgrouptype_.Get(index);
}
inline void GameDeskInfo::set_wincardgrouptype(int index, ::google::protobuf::int32 value) {
  wincardgrouptype_.Set(index, value);
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.winCardGroupType)
}
inline void GameDeskInfo::add_wincardgrouptype(::google::protobuf::int32 value) {
  wincardgrouptype_.Add(value);
  // @@protoc_insertion_point(field_add:Common.GameDeskInfo.winCardGroupType)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameDeskInfo::wincardgrouptype() const {
  // @@protoc_insertion_point(field_list:Common.GameDeskInfo.winCardGroupType)
  return wincardgrouptype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameDeskInfo::mutable_wincardgrouptype() {
  // @@protoc_insertion_point(field_mutable_list:Common.GameDeskInfo.winCardGroupType)
  return &wincardgrouptype_;
}

// repeated .Common.PlaceJetInfo JetInfo = 16;
inline int GameDeskInfo::jetinfo_size() const {
  return jetinfo_.size();
}
inline void GameDeskInfo::clear_jetinfo() {
  jetinfo_.Clear();
}
inline const ::Common::PlaceJetInfo& GameDeskInfo::jetinfo(int index) const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.JetInfo)
  return jetinfo_.Get(index);
}
inline ::Common::PlaceJetInfo* GameDeskInfo::mutable_jetinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Common.GameDeskInfo.JetInfo)
  return jetinfo_.Mutable(index);
}
inline ::Common::PlaceJetInfo* GameDeskInfo::add_jetinfo() {
  // @@protoc_insertion_point(field_add:Common.GameDeskInfo.JetInfo)
  return jetinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlaceJetInfo >*
GameDeskInfo::mutable_jetinfo() {
  // @@protoc_insertion_point(field_mutable_list:Common.GameDeskInfo.JetInfo)
  return &jetinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJetInfo >&
GameDeskInfo::jetinfo() const {
  // @@protoc_insertion_point(field_list:Common.GameDeskInfo.JetInfo)
  return jetinfo_;
}

// required int32 lOnlinePopulation = 17;
inline bool GameDeskInfo::has_lonlinepopulation() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameDeskInfo::set_has_lonlinepopulation() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameDeskInfo::clear_has_lonlinepopulation() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameDeskInfo::clear_lonlinepopulation() {
  lonlinepopulation_ = 0;
  clear_has_lonlinepopulation();
}
inline ::google::protobuf::int32 GameDeskInfo::lonlinepopulation() const {
  // @@protoc_insertion_point(field_get:Common.GameDeskInfo.lOnlinePopulation)
  return lonlinepopulation_;
}
inline void GameDeskInfo::set_lonlinepopulation(::google::protobuf::int32 value) {
  set_has_lonlinepopulation();
  lonlinepopulation_ = value;
  // @@protoc_insertion_point(field_set:Common.GameDeskInfo.lOnlinePopulation)
}

// -------------------------------------------------------------------

// CMD_S_SyncJetAreaScore

// repeated .Common.PlaceJettonScore AllJettonScore = 1;
inline int CMD_S_SyncJetAreaScore::alljettonscore_size() const {
  return alljettonscore_.size();
}
inline void CMD_S_SyncJetAreaScore::clear_alljettonscore() {
  alljettonscore_.Clear();
}
inline const ::Common::PlaceJettonScore& CMD_S_SyncJetAreaScore::alljettonscore(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_SyncJetAreaScore.AllJettonScore)
  return alljettonscore_.Get(index);
}
inline ::Common::PlaceJettonScore* CMD_S_SyncJetAreaScore::mutable_alljettonscore(int index) {
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_SyncJetAreaScore.AllJettonScore)
  return alljettonscore_.Mutable(index);
}
inline ::Common::PlaceJettonScore* CMD_S_SyncJetAreaScore::add_alljettonscore() {
  // @@protoc_insertion_point(field_add:Common.CMD_S_SyncJetAreaScore.AllJettonScore)
  return alljettonscore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
CMD_S_SyncJetAreaScore::mutable_alljettonscore() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_SyncJetAreaScore.AllJettonScore)
  return &alljettonscore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
CMD_S_SyncJetAreaScore::alljettonscore() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_SyncJetAreaScore.AllJettonScore)
  return alljettonscore_;
}

// repeated .Common.PlaceJettonScore SelfJettonScore = 2;
inline int CMD_S_SyncJetAreaScore::selfjettonscore_size() const {
  return selfjettonscore_.size();
}
inline void CMD_S_SyncJetAreaScore::clear_selfjettonscore() {
  selfjettonscore_.Clear();
}
inline const ::Common::PlaceJettonScore& CMD_S_SyncJetAreaScore::selfjettonscore(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_SyncJetAreaScore.SelfJettonScore)
  return selfjettonscore_.Get(index);
}
inline ::Common::PlaceJettonScore* CMD_S_SyncJetAreaScore::mutable_selfjettonscore(int index) {
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_SyncJetAreaScore.SelfJettonScore)
  return selfjettonscore_.Mutable(index);
}
inline ::Common::PlaceJettonScore* CMD_S_SyncJetAreaScore::add_selfjettonscore() {
  // @@protoc_insertion_point(field_add:Common.CMD_S_SyncJetAreaScore.SelfJettonScore)
  return selfjettonscore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
CMD_S_SyncJetAreaScore::mutable_selfjettonscore() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_SyncJetAreaScore.SelfJettonScore)
  return &selfjettonscore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
CMD_S_SyncJetAreaScore::selfjettonscore() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_SyncJetAreaScore.SelfJettonScore)
  return selfjettonscore_;
}

// -------------------------------------------------------------------

// CMD_Scene_StatusFree

// required .Common.GameDeskInfo DeskData = 1;
inline bool CMD_Scene_StatusFree::has_deskdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_Scene_StatusFree::set_has_deskdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_Scene_StatusFree::clear_has_deskdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_Scene_StatusFree::clear_deskdata() {
  if (deskdata_ != NULL) deskdata_->Clear();
  clear_has_deskdata();
}
inline const ::Common::GameDeskInfo& CMD_Scene_StatusFree::deskdata() const {
  const ::Common::GameDeskInfo* p = deskdata_;
  // @@protoc_insertion_point(field_get:Common.CMD_Scene_StatusFree.DeskData)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::GameDeskInfo*>(
      &::Common::_GameDeskInfo_default_instance_);
}
inline ::Common::GameDeskInfo* CMD_Scene_StatusFree::release_deskdata() {
  // @@protoc_insertion_point(field_release:Common.CMD_Scene_StatusFree.DeskData)
  clear_has_deskdata();
  ::Common::GameDeskInfo* temp = deskdata_;
  deskdata_ = NULL;
  return temp;
}
inline ::Common::GameDeskInfo* CMD_Scene_StatusFree::mutable_deskdata() {
  set_has_deskdata();
  if (deskdata_ == NULL) {
    deskdata_ = new ::Common::GameDeskInfo;
  }
  // @@protoc_insertion_point(field_mutable:Common.CMD_Scene_StatusFree.DeskData)
  return deskdata_;
}
inline void CMD_Scene_StatusFree::set_allocated_deskdata(::Common::GameDeskInfo* deskdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deskdata_;
  }
  if (deskdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deskdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deskdata, submessage_arena);
    }
    set_has_deskdata();
  } else {
    clear_has_deskdata();
  }
  deskdata_ = deskdata;
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_Scene_StatusFree.DeskData)
}

// required int32 cbTimeLeave = 2;
inline bool CMD_Scene_StatusFree::has_cbtimeleave() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_Scene_StatusFree::set_has_cbtimeleave() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_Scene_StatusFree::clear_has_cbtimeleave() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_Scene_StatusFree::clear_cbtimeleave() {
  cbtimeleave_ = 0;
  clear_has_cbtimeleave();
}
inline ::google::protobuf::int32 CMD_Scene_StatusFree::cbtimeleave() const {
  // @@protoc_insertion_point(field_get:Common.CMD_Scene_StatusFree.cbTimeLeave)
  return cbtimeleave_;
}
inline void CMD_Scene_StatusFree::set_cbtimeleave(::google::protobuf::int32 value) {
  set_has_cbtimeleave();
  cbtimeleave_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_Scene_StatusFree.cbTimeLeave)
}

// required double lUserMaxScore = 3;
inline bool CMD_Scene_StatusFree::has_lusermaxscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_Scene_StatusFree::set_has_lusermaxscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_Scene_StatusFree::clear_has_lusermaxscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_Scene_StatusFree::clear_lusermaxscore() {
  lusermaxscore_ = 0;
  clear_has_lusermaxscore();
}
inline double CMD_Scene_StatusFree::lusermaxscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_Scene_StatusFree.lUserMaxScore)
  return lusermaxscore_;
}
inline void CMD_Scene_StatusFree::set_lusermaxscore(double value) {
  set_has_lusermaxscore();
  lusermaxscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_Scene_StatusFree.lUserMaxScore)
}

// required double lUserScore = 4;
inline bool CMD_Scene_StatusFree::has_luserscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_Scene_StatusFree::set_has_luserscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_Scene_StatusFree::clear_has_luserscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_Scene_StatusFree::clear_luserscore() {
  luserscore_ = 0;
  clear_has_luserscore();
}
inline double CMD_Scene_StatusFree::luserscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_Scene_StatusFree.lUserScore)
  return luserscore_;
}
inline void CMD_Scene_StatusFree::set_luserscore(double value) {
  set_has_luserscore();
  luserscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_Scene_StatusFree.lUserScore)
}

// optional string szGameRoomName = 5;
inline bool CMD_Scene_StatusFree::has_szgameroomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_Scene_StatusFree::set_has_szgameroomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_Scene_StatusFree::clear_has_szgameroomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_Scene_StatusFree::clear_szgameroomname() {
  szgameroomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szgameroomname();
}
inline const ::std::string& CMD_Scene_StatusFree::szgameroomname() const {
  // @@protoc_insertion_point(field_get:Common.CMD_Scene_StatusFree.szGameRoomName)
  return szgameroomname_.GetNoArena();
}
inline void CMD_Scene_StatusFree::set_szgameroomname(const ::std::string& value) {
  set_has_szgameroomname();
  szgameroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Common.CMD_Scene_StatusFree.szGameRoomName)
}
#if LANG_CXX11
inline void CMD_Scene_StatusFree::set_szgameroomname(::std::string&& value) {
  set_has_szgameroomname();
  szgameroomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Common.CMD_Scene_StatusFree.szGameRoomName)
}
#endif
inline void CMD_Scene_StatusFree::set_szgameroomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szgameroomname();
  szgameroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Common.CMD_Scene_StatusFree.szGameRoomName)
}
inline void CMD_Scene_StatusFree::set_szgameroomname(const char* value, size_t size) {
  set_has_szgameroomname();
  szgameroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Common.CMD_Scene_StatusFree.szGameRoomName)
}
inline ::std::string* CMD_Scene_StatusFree::mutable_szgameroomname() {
  set_has_szgameroomname();
  // @@protoc_insertion_point(field_mutable:Common.CMD_Scene_StatusFree.szGameRoomName)
  return szgameroomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Scene_StatusFree::release_szgameroomname() {
  // @@protoc_insertion_point(field_release:Common.CMD_Scene_StatusFree.szGameRoomName)
  clear_has_szgameroomname();
  return szgameroomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Scene_StatusFree::set_allocated_szgameroomname(::std::string* szgameroomname) {
  if (szgameroomname != NULL) {
    set_has_szgameroomname();
  } else {
    clear_has_szgameroomname();
  }
  szgameroomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szgameroomname);
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_Scene_StatusFree.szGameRoomName)
}

// -------------------------------------------------------------------

// CMD_S_StartPlaceJetton

// required .Common.GameDeskInfo DeskData = 1;
inline bool CMD_S_StartPlaceJetton::has_deskdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_StartPlaceJetton::set_has_deskdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_StartPlaceJetton::clear_has_deskdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_StartPlaceJetton::clear_deskdata() {
  if (deskdata_ != NULL) deskdata_->Clear();
  clear_has_deskdata();
}
inline const ::Common::GameDeskInfo& CMD_S_StartPlaceJetton::deskdata() const {
  const ::Common::GameDeskInfo* p = deskdata_;
  // @@protoc_insertion_point(field_get:Common.CMD_S_StartPlaceJetton.DeskData)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::GameDeskInfo*>(
      &::Common::_GameDeskInfo_default_instance_);
}
inline ::Common::GameDeskInfo* CMD_S_StartPlaceJetton::release_deskdata() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_StartPlaceJetton.DeskData)
  clear_has_deskdata();
  ::Common::GameDeskInfo* temp = deskdata_;
  deskdata_ = NULL;
  return temp;
}
inline ::Common::GameDeskInfo* CMD_S_StartPlaceJetton::mutable_deskdata() {
  set_has_deskdata();
  if (deskdata_ == NULL) {
    deskdata_ = new ::Common::GameDeskInfo;
  }
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_StartPlaceJetton.DeskData)
  return deskdata_;
}
inline void CMD_S_StartPlaceJetton::set_allocated_deskdata(::Common::GameDeskInfo* deskdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deskdata_;
  }
  if (deskdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deskdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deskdata, submessage_arena);
    }
    set_has_deskdata();
  } else {
    clear_has_deskdata();
  }
  deskdata_ = deskdata;
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_StartPlaceJetton.DeskData)
}

// required int32 cbPlaceTime = 2;
inline bool CMD_S_StartPlaceJetton::has_cbplacetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_StartPlaceJetton::set_has_cbplacetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_StartPlaceJetton::clear_has_cbplacetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_StartPlaceJetton::clear_cbplacetime() {
  cbplacetime_ = 0;
  clear_has_cbplacetime();
}
inline ::google::protobuf::int32 CMD_S_StartPlaceJetton::cbplacetime() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_StartPlaceJetton.cbPlaceTime)
  return cbplacetime_;
}
inline void CMD_S_StartPlaceJetton::set_cbplacetime(::google::protobuf::int32 value) {
  set_has_cbplacetime();
  cbplacetime_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_StartPlaceJetton.cbPlaceTime)
}

// required int32 cbTimeLeave = 3;
inline bool CMD_S_StartPlaceJetton::has_cbtimeleave() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_S_StartPlaceJetton::set_has_cbtimeleave() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_S_StartPlaceJetton::clear_has_cbtimeleave() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_S_StartPlaceJetton::clear_cbtimeleave() {
  cbtimeleave_ = 0;
  clear_has_cbtimeleave();
}
inline ::google::protobuf::int32 CMD_S_StartPlaceJetton::cbtimeleave() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_StartPlaceJetton.cbTimeLeave)
  return cbtimeleave_;
}
inline void CMD_S_StartPlaceJetton::set_cbtimeleave(::google::protobuf::int32 value) {
  set_has_cbtimeleave();
  cbtimeleave_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_StartPlaceJetton.cbTimeLeave)
}

// required double lUserMaxScore = 4;
inline bool CMD_S_StartPlaceJetton::has_lusermaxscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_S_StartPlaceJetton::set_has_lusermaxscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_S_StartPlaceJetton::clear_has_lusermaxscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_S_StartPlaceJetton::clear_lusermaxscore() {
  lusermaxscore_ = 0;
  clear_has_lusermaxscore();
}
inline double CMD_S_StartPlaceJetton::lusermaxscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_StartPlaceJetton.lUserMaxScore)
  return lusermaxscore_;
}
inline void CMD_S_StartPlaceJetton::set_lusermaxscore(double value) {
  set_has_lusermaxscore();
  lusermaxscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_StartPlaceJetton.lUserMaxScore)
}

// required double lUserScore = 5;
inline bool CMD_S_StartPlaceJetton::has_luserscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_S_StartPlaceJetton::set_has_luserscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_S_StartPlaceJetton::clear_has_luserscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_S_StartPlaceJetton::clear_luserscore() {
  luserscore_ = 0;
  clear_has_luserscore();
}
inline double CMD_S_StartPlaceJetton::luserscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_StartPlaceJetton.lUserScore)
  return luserscore_;
}
inline void CMD_S_StartPlaceJetton::set_luserscore(double value) {
  set_has_luserscore();
  luserscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_StartPlaceJetton.lUserScore)
}

// -------------------------------------------------------------------

// CMD_S_GameStart

// required .Common.GameDeskInfo DeskData = 1;
inline bool CMD_S_GameStart::has_deskdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_GameStart::set_has_deskdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_GameStart::clear_has_deskdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_GameStart::clear_deskdata() {
  if (deskdata_ != NULL) deskdata_->Clear();
  clear_has_deskdata();
}
inline const ::Common::GameDeskInfo& CMD_S_GameStart::deskdata() const {
  const ::Common::GameDeskInfo* p = deskdata_;
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameStart.DeskData)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::GameDeskInfo*>(
      &::Common::_GameDeskInfo_default_instance_);
}
inline ::Common::GameDeskInfo* CMD_S_GameStart::release_deskdata() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_GameStart.DeskData)
  clear_has_deskdata();
  ::Common::GameDeskInfo* temp = deskdata_;
  deskdata_ = NULL;
  return temp;
}
inline ::Common::GameDeskInfo* CMD_S_GameStart::mutable_deskdata() {
  set_has_deskdata();
  if (deskdata_ == NULL) {
    deskdata_ = new ::Common::GameDeskInfo;
  }
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_GameStart.DeskData)
  return deskdata_;
}
inline void CMD_S_GameStart::set_allocated_deskdata(::Common::GameDeskInfo* deskdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deskdata_;
  }
  if (deskdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deskdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deskdata, submessage_arena);
    }
    set_has_deskdata();
  } else {
    clear_has_deskdata();
  }
  deskdata_ = deskdata;
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_GameStart.DeskData)
}

// required int32 cbTimeLeave = 2;
inline bool CMD_S_GameStart::has_cbtimeleave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_GameStart::set_has_cbtimeleave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_GameStart::clear_has_cbtimeleave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_GameStart::clear_cbtimeleave() {
  cbtimeleave_ = 0;
  clear_has_cbtimeleave();
}
inline ::google::protobuf::int32 CMD_S_GameStart::cbtimeleave() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameStart.cbTimeLeave)
  return cbtimeleave_;
}
inline void CMD_S_GameStart::set_cbtimeleave(::google::protobuf::int32 value) {
  set_has_cbtimeleave();
  cbtimeleave_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_GameStart.cbTimeLeave)
}

// required int32 nChipRobotCount = 3;
inline bool CMD_S_GameStart::has_nchiprobotcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_S_GameStart::set_has_nchiprobotcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_S_GameStart::clear_has_nchiprobotcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_S_GameStart::clear_nchiprobotcount() {
  nchiprobotcount_ = 0;
  clear_has_nchiprobotcount();
}
inline ::google::protobuf::int32 CMD_S_GameStart::nchiprobotcount() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameStart.nChipRobotCount)
  return nchiprobotcount_;
}
inline void CMD_S_GameStart::set_nchiprobotcount(::google::protobuf::int32 value) {
  set_has_nchiprobotcount();
  nchiprobotcount_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_GameStart.nChipRobotCount)
}

// required double lUserMaxScore = 4;
inline bool CMD_S_GameStart::has_lusermaxscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_S_GameStart::set_has_lusermaxscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_S_GameStart::clear_has_lusermaxscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_S_GameStart::clear_lusermaxscore() {
  lusermaxscore_ = 0;
  clear_has_lusermaxscore();
}
inline double CMD_S_GameStart::lusermaxscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameStart.lUserMaxScore)
  return lusermaxscore_;
}
inline void CMD_S_GameStart::set_lusermaxscore(double value) {
  set_has_lusermaxscore();
  lusermaxscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_GameStart.lUserMaxScore)
}

// required double lUserScore = 5;
inline bool CMD_S_GameStart::has_luserscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_S_GameStart::set_has_luserscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_S_GameStart::clear_has_luserscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_S_GameStart::clear_luserscore() {
  luserscore_ = 0;
  clear_has_luserscore();
}
inline double CMD_S_GameStart::luserscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameStart.lUserScore)
  return luserscore_;
}
inline void CMD_S_GameStart::set_luserscore(double value) {
  set_has_luserscore();
  luserscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_GameStart.lUserScore)
}

// required int32 nRoundCount = 6;
inline bool CMD_S_GameStart::has_nroundcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMD_S_GameStart::set_has_nroundcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMD_S_GameStart::clear_has_nroundcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMD_S_GameStart::clear_nroundcount() {
  nroundcount_ = 0;
  clear_has_nroundcount();
}
inline ::google::protobuf::int32 CMD_S_GameStart::nroundcount() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameStart.nRoundCount)
  return nroundcount_;
}
inline void CMD_S_GameStart::set_nroundcount(::google::protobuf::int32 value) {
  set_has_nroundcount();
  nroundcount_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_GameStart.nRoundCount)
}

// -------------------------------------------------------------------

// PlayerScoreValue

// required int32 userId = 1;
inline bool PlayerScoreValue::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerScoreValue::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerScoreValue::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerScoreValue::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PlayerScoreValue::userid() const {
  // @@protoc_insertion_point(field_get:Common.PlayerScoreValue.userId)
  return userid_;
}
inline void PlayerScoreValue::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerScoreValue.userId)
}

// required double returnScore = 2;
inline bool PlayerScoreValue::has_returnscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerScoreValue::set_has_returnscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerScoreValue::clear_has_returnscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerScoreValue::clear_returnscore() {
  returnscore_ = 0;
  clear_has_returnscore();
}
inline double PlayerScoreValue::returnscore() const {
  // @@protoc_insertion_point(field_get:Common.PlayerScoreValue.returnScore)
  return returnscore_;
}
inline void PlayerScoreValue::set_returnscore(double value) {
  set_has_returnscore();
  returnscore_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerScoreValue.returnScore)
}

// optional double userScore = 3;
inline bool PlayerScoreValue::has_userscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerScoreValue::set_has_userscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerScoreValue::clear_has_userscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerScoreValue::clear_userscore() {
  userscore_ = 0;
  clear_has_userscore();
}
inline double PlayerScoreValue::userscore() const {
  // @@protoc_insertion_point(field_get:Common.PlayerScoreValue.userScore)
  return userscore_;
}
inline void PlayerScoreValue::set_userscore(double value) {
  set_has_userscore();
  userscore_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerScoreValue.userScore)
}

// -------------------------------------------------------------------

// CMD_S_GameEnd

// required .Common.GameDeskInfo DeskData = 1;
inline bool CMD_S_GameEnd::has_deskdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_GameEnd::set_has_deskdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_GameEnd::clear_has_deskdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_GameEnd::clear_deskdata() {
  if (deskdata_ != NULL) deskdata_->Clear();
  clear_has_deskdata();
}
inline const ::Common::GameDeskInfo& CMD_S_GameEnd::deskdata() const {
  const ::Common::GameDeskInfo* p = deskdata_;
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameEnd.DeskData)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::GameDeskInfo*>(
      &::Common::_GameDeskInfo_default_instance_);
}
inline ::Common::GameDeskInfo* CMD_S_GameEnd::release_deskdata() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_GameEnd.DeskData)
  clear_has_deskdata();
  ::Common::GameDeskInfo* temp = deskdata_;
  deskdata_ = NULL;
  return temp;
}
inline ::Common::GameDeskInfo* CMD_S_GameEnd::mutable_deskdata() {
  set_has_deskdata();
  if (deskdata_ == NULL) {
    deskdata_ = new ::Common::GameDeskInfo;
  }
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_GameEnd.DeskData)
  return deskdata_;
}
inline void CMD_S_GameEnd::set_allocated_deskdata(::Common::GameDeskInfo* deskdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deskdata_;
  }
  if (deskdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deskdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deskdata, submessage_arena);
    }
    set_has_deskdata();
  } else {
    clear_has_deskdata();
  }
  deskdata_ = deskdata;
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_GameEnd.DeskData)
}

// required int32 cbTimeLeave = 2;
inline bool CMD_S_GameEnd::has_cbtimeleave() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_S_GameEnd::set_has_cbtimeleave() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_S_GameEnd::clear_has_cbtimeleave() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_S_GameEnd::clear_cbtimeleave() {
  cbtimeleave_ = 0;
  clear_has_cbtimeleave();
}
inline ::google::protobuf::int32 CMD_S_GameEnd::cbtimeleave() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameEnd.cbTimeLeave)
  return cbtimeleave_;
}
inline void CMD_S_GameEnd::set_cbtimeleave(::google::protobuf::int32 value) {
  set_has_cbtimeleave();
  cbtimeleave_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_GameEnd.cbTimeLeave)
}

// repeated .Common.PlayerScoreValue gameEndScore = 3;
inline int CMD_S_GameEnd::gameendscore_size() const {
  return gameendscore_.size();
}
inline void CMD_S_GameEnd::clear_gameendscore() {
  gameendscore_.Clear();
}
inline const ::Common::PlayerScoreValue& CMD_S_GameEnd::gameendscore(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameEnd.gameEndScore)
  return gameendscore_.Get(index);
}
inline ::Common::PlayerScoreValue* CMD_S_GameEnd::mutable_gameendscore(int index) {
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_GameEnd.gameEndScore)
  return gameendscore_.Mutable(index);
}
inline ::Common::PlayerScoreValue* CMD_S_GameEnd::add_gameendscore() {
  // @@protoc_insertion_point(field_add:Common.CMD_S_GameEnd.gameEndScore)
  return gameendscore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlayerScoreValue >*
CMD_S_GameEnd::mutable_gameendscore() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_GameEnd.gameEndScore)
  return &gameendscore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlayerScoreValue >&
CMD_S_GameEnd::gameendscore() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_GameEnd.gameEndScore)
  return gameendscore_;
}

// required double lUserMaxScore = 4;
inline bool CMD_S_GameEnd::has_lusermaxscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_GameEnd::set_has_lusermaxscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_GameEnd::clear_has_lusermaxscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_GameEnd::clear_lusermaxscore() {
  lusermaxscore_ = 0;
  clear_has_lusermaxscore();
}
inline double CMD_S_GameEnd::lusermaxscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameEnd.lUserMaxScore)
  return lusermaxscore_;
}
inline void CMD_S_GameEnd::set_lusermaxscore(double value) {
  set_has_lusermaxscore();
  lusermaxscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_GameEnd.lUserMaxScore)
}

// required double lUserScore = 5;
inline bool CMD_S_GameEnd::has_luserscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_S_GameEnd::set_has_luserscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_S_GameEnd::clear_has_luserscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_S_GameEnd::clear_luserscore() {
  luserscore_ = 0;
  clear_has_luserscore();
}
inline double CMD_S_GameEnd::luserscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameEnd.lUserScore)
  return luserscore_;
}
inline void CMD_S_GameEnd::set_luserscore(double value) {
  set_has_luserscore();
  luserscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_GameEnd.lUserScore)
}

// required double lRevenue = 6;
inline bool CMD_S_GameEnd::has_lrevenue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_S_GameEnd::set_has_lrevenue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_S_GameEnd::clear_has_lrevenue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_S_GameEnd::clear_lrevenue() {
  lrevenue_ = 0;
  clear_has_lrevenue();
}
inline double CMD_S_GameEnd::lrevenue() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_GameEnd.lRevenue)
  return lrevenue_;
}
inline void CMD_S_GameEnd::set_lrevenue(double value) {
  set_has_lrevenue();
  lrevenue_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_GameEnd.lRevenue)
}

// -------------------------------------------------------------------

// CMD_S_BankerApplyEnd

// required .Common.GameDeskInfo DeskData = 1;
inline bool CMD_S_BankerApplyEnd::has_deskdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_BankerApplyEnd::set_has_deskdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_BankerApplyEnd::clear_has_deskdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_BankerApplyEnd::clear_deskdata() {
  if (deskdata_ != NULL) deskdata_->Clear();
  clear_has_deskdata();
}
inline const ::Common::GameDeskInfo& CMD_S_BankerApplyEnd::deskdata() const {
  const ::Common::GameDeskInfo* p = deskdata_;
  // @@protoc_insertion_point(field_get:Common.CMD_S_BankerApplyEnd.DeskData)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::GameDeskInfo*>(
      &::Common::_GameDeskInfo_default_instance_);
}
inline ::Common::GameDeskInfo* CMD_S_BankerApplyEnd::release_deskdata() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_BankerApplyEnd.DeskData)
  clear_has_deskdata();
  ::Common::GameDeskInfo* temp = deskdata_;
  deskdata_ = NULL;
  return temp;
}
inline ::Common::GameDeskInfo* CMD_S_BankerApplyEnd::mutable_deskdata() {
  set_has_deskdata();
  if (deskdata_ == NULL) {
    deskdata_ = new ::Common::GameDeskInfo;
  }
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_BankerApplyEnd.DeskData)
  return deskdata_;
}
inline void CMD_S_BankerApplyEnd::set_allocated_deskdata(::Common::GameDeskInfo* deskdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deskdata_;
  }
  if (deskdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deskdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deskdata, submessage_arena);
    }
    set_has_deskdata();
  } else {
    clear_has_deskdata();
  }
  deskdata_ = deskdata;
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_BankerApplyEnd.DeskData)
}

// required int32 cbTimeLeave = 2;
inline bool CMD_S_BankerApplyEnd::has_cbtimeleave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_BankerApplyEnd::set_has_cbtimeleave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_BankerApplyEnd::clear_has_cbtimeleave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_BankerApplyEnd::clear_cbtimeleave() {
  cbtimeleave_ = 0;
  clear_has_cbtimeleave();
}
inline ::google::protobuf::int32 CMD_S_BankerApplyEnd::cbtimeleave() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_BankerApplyEnd.cbTimeLeave)
  return cbtimeleave_;
}
inline void CMD_S_BankerApplyEnd::set_cbtimeleave(::google::protobuf::int32 value) {
  set_has_cbtimeleave();
  cbtimeleave_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_BankerApplyEnd.cbTimeLeave)
}

// -------------------------------------------------------------------

// CMD_S_JettonEnd

// required .Common.GameDeskInfo DeskData = 1;
inline bool CMD_S_JettonEnd::has_deskdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_JettonEnd::set_has_deskdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_JettonEnd::clear_has_deskdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_JettonEnd::clear_deskdata() {
  if (deskdata_ != NULL) deskdata_->Clear();
  clear_has_deskdata();
}
inline const ::Common::GameDeskInfo& CMD_S_JettonEnd::deskdata() const {
  const ::Common::GameDeskInfo* p = deskdata_;
  // @@protoc_insertion_point(field_get:Common.CMD_S_JettonEnd.DeskData)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::GameDeskInfo*>(
      &::Common::_GameDeskInfo_default_instance_);
}
inline ::Common::GameDeskInfo* CMD_S_JettonEnd::release_deskdata() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_JettonEnd.DeskData)
  clear_has_deskdata();
  ::Common::GameDeskInfo* temp = deskdata_;
  deskdata_ = NULL;
  return temp;
}
inline ::Common::GameDeskInfo* CMD_S_JettonEnd::mutable_deskdata() {
  set_has_deskdata();
  if (deskdata_ == NULL) {
    deskdata_ = new ::Common::GameDeskInfo;
  }
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_JettonEnd.DeskData)
  return deskdata_;
}
inline void CMD_S_JettonEnd::set_allocated_deskdata(::Common::GameDeskInfo* deskdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deskdata_;
  }
  if (deskdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deskdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deskdata, submessage_arena);
    }
    set_has_deskdata();
  } else {
    clear_has_deskdata();
  }
  deskdata_ = deskdata;
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_JettonEnd.DeskData)
}

// required int32 cbTimeLeave = 2;
inline bool CMD_S_JettonEnd::has_cbtimeleave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_JettonEnd::set_has_cbtimeleave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_JettonEnd::clear_has_cbtimeleave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_JettonEnd::clear_cbtimeleave() {
  cbtimeleave_ = 0;
  clear_has_cbtimeleave();
}
inline ::google::protobuf::int32 CMD_S_JettonEnd::cbtimeleave() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_JettonEnd.cbTimeLeave)
  return cbtimeleave_;
}
inline void CMD_S_JettonEnd::set_cbtimeleave(::google::protobuf::int32 value) {
  set_has_cbtimeleave();
  cbtimeleave_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_JettonEnd.cbTimeLeave)
}

// -------------------------------------------------------------------

// CMD_S_OpenCardEnd

// required .Common.GameDeskInfo DeskData = 1;
inline bool CMD_S_OpenCardEnd::has_deskdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_OpenCardEnd::set_has_deskdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_OpenCardEnd::clear_has_deskdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_OpenCardEnd::clear_deskdata() {
  if (deskdata_ != NULL) deskdata_->Clear();
  clear_has_deskdata();
}
inline const ::Common::GameDeskInfo& CMD_S_OpenCardEnd::deskdata() const {
  const ::Common::GameDeskInfo* p = deskdata_;
  // @@protoc_insertion_point(field_get:Common.CMD_S_OpenCardEnd.DeskData)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::GameDeskInfo*>(
      &::Common::_GameDeskInfo_default_instance_);
}
inline ::Common::GameDeskInfo* CMD_S_OpenCardEnd::release_deskdata() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_OpenCardEnd.DeskData)
  clear_has_deskdata();
  ::Common::GameDeskInfo* temp = deskdata_;
  deskdata_ = NULL;
  return temp;
}
inline ::Common::GameDeskInfo* CMD_S_OpenCardEnd::mutable_deskdata() {
  set_has_deskdata();
  if (deskdata_ == NULL) {
    deskdata_ = new ::Common::GameDeskInfo;
  }
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_OpenCardEnd.DeskData)
  return deskdata_;
}
inline void CMD_S_OpenCardEnd::set_allocated_deskdata(::Common::GameDeskInfo* deskdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deskdata_;
  }
  if (deskdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deskdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deskdata, submessage_arena);
    }
    set_has_deskdata();
  } else {
    clear_has_deskdata();
  }
  deskdata_ = deskdata;
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_OpenCardEnd.DeskData)
}

// required int32 cbTimeLeave = 2;
inline bool CMD_S_OpenCardEnd::has_cbtimeleave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_OpenCardEnd::set_has_cbtimeleave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_OpenCardEnd::clear_has_cbtimeleave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_OpenCardEnd::clear_cbtimeleave() {
  cbtimeleave_ = 0;
  clear_has_cbtimeleave();
}
inline ::google::protobuf::int32 CMD_S_OpenCardEnd::cbtimeleave() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_OpenCardEnd.cbTimeLeave)
  return cbtimeleave_;
}
inline void CMD_S_OpenCardEnd::set_cbtimeleave(::google::protobuf::int32 value) {
  set_has_cbtimeleave();
  cbtimeleave_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_OpenCardEnd.cbTimeLeave)
}

// -------------------------------------------------------------------

// CMD_S_User_Get_Card

// required int32 dwUserID = 1;
inline bool CMD_S_User_Get_Card::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_User_Get_Card::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_User_Get_Card::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_User_Get_Card::clear_dwuserid() {
  dwuserid_ = 0;
  clear_has_dwuserid();
}
inline ::google::protobuf::int32 CMD_S_User_Get_Card::dwuserid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_User_Get_Card.dwUserID)
  return dwuserid_;
}
inline void CMD_S_User_Get_Card::set_dwuserid(::google::protobuf::int32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_User_Get_Card.dwUserID)
}

// repeated int32 Cards = 2;
inline int CMD_S_User_Get_Card::cards_size() const {
  return cards_.size();
}
inline void CMD_S_User_Get_Card::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 CMD_S_User_Get_Card::cards(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_User_Get_Card.Cards)
  return cards_.Get(index);
}
inline void CMD_S_User_Get_Card::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Common.CMD_S_User_Get_Card.Cards)
}
inline void CMD_S_User_Get_Card::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:Common.CMD_S_User_Get_Card.Cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_S_User_Get_Card::cards() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_User_Get_Card.Cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_S_User_Get_Card::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_User_Get_Card.Cards)
  return &cards_;
}

// -------------------------------------------------------------------

// CMD_S_User_Out_Card

// required int32 dwUserID = 1;
inline bool CMD_S_User_Out_Card::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_User_Out_Card::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_User_Out_Card::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_User_Out_Card::clear_dwuserid() {
  dwuserid_ = 0;
  clear_has_dwuserid();
}
inline ::google::protobuf::int32 CMD_S_User_Out_Card::dwuserid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_User_Out_Card.dwUserID)
  return dwuserid_;
}
inline void CMD_S_User_Out_Card::set_dwuserid(::google::protobuf::int32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_User_Out_Card.dwUserID)
}

// repeated int32 Cards = 2;
inline int CMD_S_User_Out_Card::cards_size() const {
  return cards_.size();
}
inline void CMD_S_User_Out_Card::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 CMD_S_User_Out_Card::cards(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_User_Out_Card.Cards)
  return cards_.Get(index);
}
inline void CMD_S_User_Out_Card::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Common.CMD_S_User_Out_Card.Cards)
}
inline void CMD_S_User_Out_Card::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:Common.CMD_S_User_Out_Card.Cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_S_User_Out_Card::cards() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_User_Out_Card.Cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_S_User_Out_Card::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_User_Out_Card.Cards)
  return &cards_;
}

// -------------------------------------------------------------------

// CMD_S_Open_cardSucees

// repeated .Common.PlayerListItem players = 1;
inline int CMD_S_Open_cardSucees::players_size() const {
  return players_.size();
}
inline void CMD_S_Open_cardSucees::clear_players() {
  players_.Clear();
}
inline const ::Common::PlayerListItem& CMD_S_Open_cardSucees::players(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_Open_cardSucees.players)
  return players_.Get(index);
}
inline ::Common::PlayerListItem* CMD_S_Open_cardSucees::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_Open_cardSucees.players)
  return players_.Mutable(index);
}
inline ::Common::PlayerListItem* CMD_S_Open_cardSucees::add_players() {
  // @@protoc_insertion_point(field_add:Common.CMD_S_Open_cardSucees.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >*
CMD_S_Open_cardSucees::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_Open_cardSucees.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >&
CMD_S_Open_cardSucees::players() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_Open_cardSucees.players)
  return players_;
}

// -------------------------------------------------------------------

// CMD_C_Out_Card_Req

// required int32 dwUserID = 1;
inline bool CMD_C_Out_Card_Req::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_C_Out_Card_Req::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_C_Out_Card_Req::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_C_Out_Card_Req::clear_dwuserid() {
  dwuserid_ = 0;
  clear_has_dwuserid();
}
inline ::google::protobuf::int32 CMD_C_Out_Card_Req::dwuserid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_C_Out_Card_Req.dwUserID)
  return dwuserid_;
}
inline void CMD_C_Out_Card_Req::set_dwuserid(::google::protobuf::int32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_C_Out_Card_Req.dwUserID)
}

// required double Cards = 2;
inline bool CMD_C_Out_Card_Req::has_cards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_C_Out_Card_Req::set_has_cards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_C_Out_Card_Req::clear_has_cards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_C_Out_Card_Req::clear_cards() {
  cards_ = 0;
  clear_has_cards();
}
inline double CMD_C_Out_Card_Req::cards() const {
  // @@protoc_insertion_point(field_get:Common.CMD_C_Out_Card_Req.Cards)
  return cards_;
}
inline void CMD_C_Out_Card_Req::set_cards(double value) {
  set_has_cards();
  cards_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_C_Out_Card_Req.Cards)
}

// -------------------------------------------------------------------

// CMD_C_SyncGameDesk_Req

// -------------------------------------------------------------------

// CMD_S_Out_Card_Ack

// required int32 errorCode = 1;
inline bool CMD_S_Out_Card_Ack::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_Out_Card_Ack::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_Out_Card_Ack::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_Out_Card_Ack::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 CMD_S_Out_Card_Ack::errorcode() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_Out_Card_Ack.errorCode)
  return errorcode_;
}
inline void CMD_S_Out_Card_Ack::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_Out_Card_Ack.errorCode)
}

// required string errorMsg = 2;
inline bool CMD_S_Out_Card_Ack::has_errormsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_Out_Card_Ack::set_has_errormsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_Out_Card_Ack::clear_has_errormsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_Out_Card_Ack::clear_errormsg() {
  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errormsg();
}
inline const ::std::string& CMD_S_Out_Card_Ack::errormsg() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_Out_Card_Ack.errorMsg)
  return errormsg_.GetNoArena();
}
inline void CMD_S_Out_Card_Ack::set_errormsg(const ::std::string& value) {
  set_has_errormsg();
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Common.CMD_S_Out_Card_Ack.errorMsg)
}
#if LANG_CXX11
inline void CMD_S_Out_Card_Ack::set_errormsg(::std::string&& value) {
  set_has_errormsg();
  errormsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Common.CMD_S_Out_Card_Ack.errorMsg)
}
#endif
inline void CMD_S_Out_Card_Ack::set_errormsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_errormsg();
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Common.CMD_S_Out_Card_Ack.errorMsg)
}
inline void CMD_S_Out_Card_Ack::set_errormsg(const char* value, size_t size) {
  set_has_errormsg();
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Common.CMD_S_Out_Card_Ack.errorMsg)
}
inline ::std::string* CMD_S_Out_Card_Ack::mutable_errormsg() {
  set_has_errormsg();
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_Out_Card_Ack.errorMsg)
  return errormsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_S_Out_Card_Ack::release_errormsg() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_Out_Card_Ack.errorMsg)
  clear_has_errormsg();
  return errormsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_S_Out_Card_Ack::set_allocated_errormsg(::std::string* errormsg) {
  if (errormsg != NULL) {
    set_has_errormsg();
  } else {
    clear_has_errormsg();
  }
  errormsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormsg);
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_Out_Card_Ack.errorMsg)
}

// -------------------------------------------------------------------

// CMD_C_PlaceJet

// required int32 cbJettonArea = 1;
inline bool CMD_C_PlaceJet::has_cbjettonarea() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_C_PlaceJet::set_has_cbjettonarea() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_C_PlaceJet::clear_has_cbjettonarea() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_C_PlaceJet::clear_cbjettonarea() {
  cbjettonarea_ = 0;
  clear_has_cbjettonarea();
}
inline ::google::protobuf::int32 CMD_C_PlaceJet::cbjettonarea() const {
  // @@protoc_insertion_point(field_get:Common.CMD_C_PlaceJet.cbJettonArea)
  return cbjettonarea_;
}
inline void CMD_C_PlaceJet::set_cbjettonarea(::google::protobuf::int32 value) {
  set_has_cbjettonarea();
  cbjettonarea_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_C_PlaceJet.cbJettonArea)
}

// required double lJettonScore = 2;
inline bool CMD_C_PlaceJet::has_ljettonscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_C_PlaceJet::set_has_ljettonscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_C_PlaceJet::clear_has_ljettonscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_C_PlaceJet::clear_ljettonscore() {
  ljettonscore_ = 0;
  clear_has_ljettonscore();
}
inline double CMD_C_PlaceJet::ljettonscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_C_PlaceJet.lJettonScore)
  return ljettonscore_;
}
inline void CMD_C_PlaceJet::set_ljettonscore(double value) {
  set_has_ljettonscore();
  ljettonscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_C_PlaceJet.lJettonScore)
}

// -------------------------------------------------------------------

// CMD_S_PlaceJettonFail

// required int32 dwUserID = 1;
inline bool CMD_S_PlaceJettonFail::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_PlaceJettonFail::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_PlaceJettonFail::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_PlaceJettonFail::clear_dwuserid() {
  dwuserid_ = 0;
  clear_has_dwuserid();
}
inline ::google::protobuf::int32 CMD_S_PlaceJettonFail::dwuserid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJettonFail.dwUserID)
  return dwuserid_;
}
inline void CMD_S_PlaceJettonFail::set_dwuserid(::google::protobuf::int32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlaceJettonFail.dwUserID)
}

// required int32 cbJettonArea = 2;
inline bool CMD_S_PlaceJettonFail::has_cbjettonarea() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_PlaceJettonFail::set_has_cbjettonarea() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_PlaceJettonFail::clear_has_cbjettonarea() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_PlaceJettonFail::clear_cbjettonarea() {
  cbjettonarea_ = 0;
  clear_has_cbjettonarea();
}
inline ::google::protobuf::int32 CMD_S_PlaceJettonFail::cbjettonarea() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJettonFail.cbJettonArea)
  return cbjettonarea_;
}
inline void CMD_S_PlaceJettonFail::set_cbjettonarea(::google::protobuf::int32 value) {
  set_has_cbjettonarea();
  cbjettonarea_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlaceJettonFail.cbJettonArea)
}

// required double lPlaceScore = 3;
inline bool CMD_S_PlaceJettonFail::has_lplacescore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_S_PlaceJettonFail::set_has_lplacescore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_S_PlaceJettonFail::clear_has_lplacescore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_S_PlaceJettonFail::clear_lplacescore() {
  lplacescore_ = 0;
  clear_has_lplacescore();
}
inline double CMD_S_PlaceJettonFail::lplacescore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJettonFail.lPlaceScore)
  return lplacescore_;
}
inline void CMD_S_PlaceJettonFail::set_lplacescore(double value) {
  set_has_lplacescore();
  lplacescore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlaceJettonFail.lPlaceScore)
}

// required int32 cbAndroid = 4;
inline bool CMD_S_PlaceJettonFail::has_cbandroid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_S_PlaceJettonFail::set_has_cbandroid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_S_PlaceJettonFail::clear_has_cbandroid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_S_PlaceJettonFail::clear_cbandroid() {
  cbandroid_ = 0;
  clear_has_cbandroid();
}
inline ::google::protobuf::int32 CMD_S_PlaceJettonFail::cbandroid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJettonFail.cbAndroid)
  return cbandroid_;
}
inline void CMD_S_PlaceJettonFail::set_cbandroid(::google::protobuf::int32 value) {
  set_has_cbandroid();
  cbandroid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlaceJettonFail.cbAndroid)
}

// -------------------------------------------------------------------

// CMD_S_PlaceJetSuccess

// required int32 dwUserID = 1;
inline bool CMD_S_PlaceJetSuccess::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_PlaceJetSuccess::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_PlaceJetSuccess::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_PlaceJetSuccess::clear_dwuserid() {
  dwuserid_ = 0;
  clear_has_dwuserid();
}
inline ::google::protobuf::int32 CMD_S_PlaceJetSuccess::dwuserid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJetSuccess.dwUserID)
  return dwuserid_;
}
inline void CMD_S_PlaceJetSuccess::set_dwuserid(::google::protobuf::int32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlaceJetSuccess.dwUserID)
}

// required int32 cbJettonArea = 2;
inline bool CMD_S_PlaceJetSuccess::has_cbjettonarea() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_PlaceJetSuccess::set_has_cbjettonarea() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_PlaceJetSuccess::clear_has_cbjettonarea() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_PlaceJetSuccess::clear_cbjettonarea() {
  cbjettonarea_ = 0;
  clear_has_cbjettonarea();
}
inline ::google::protobuf::int32 CMD_S_PlaceJetSuccess::cbjettonarea() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJetSuccess.cbJettonArea)
  return cbjettonarea_;
}
inline void CMD_S_PlaceJetSuccess::set_cbjettonarea(::google::protobuf::int32 value) {
  set_has_cbjettonarea();
  cbjettonarea_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlaceJetSuccess.cbJettonArea)
}

// required double lJettonScore = 3;
inline bool CMD_S_PlaceJetSuccess::has_ljettonscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_S_PlaceJetSuccess::set_has_ljettonscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_S_PlaceJetSuccess::clear_has_ljettonscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_S_PlaceJetSuccess::clear_ljettonscore() {
  ljettonscore_ = 0;
  clear_has_ljettonscore();
}
inline double CMD_S_PlaceJetSuccess::ljettonscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJetSuccess.lJettonScore)
  return ljettonscore_;
}
inline void CMD_S_PlaceJetSuccess::set_ljettonscore(double value) {
  set_has_ljettonscore();
  ljettonscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlaceJetSuccess.lJettonScore)
}

// required bool bIsAndroid = 4;
inline bool CMD_S_PlaceJetSuccess::has_bisandroid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_S_PlaceJetSuccess::set_has_bisandroid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_S_PlaceJetSuccess::clear_has_bisandroid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_S_PlaceJetSuccess::clear_bisandroid() {
  bisandroid_ = false;
  clear_has_bisandroid();
}
inline bool CMD_S_PlaceJetSuccess::bisandroid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJetSuccess.bIsAndroid)
  return bisandroid_;
}
inline void CMD_S_PlaceJetSuccess::set_bisandroid(bool value) {
  set_has_bisandroid();
  bisandroid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlaceJetSuccess.bIsAndroid)
}

// required double lUserScore = 5;
inline bool CMD_S_PlaceJetSuccess::has_luserscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_S_PlaceJetSuccess::set_has_luserscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_S_PlaceJetSuccess::clear_has_luserscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_S_PlaceJetSuccess::clear_luserscore() {
  luserscore_ = 0;
  clear_has_luserscore();
}
inline double CMD_S_PlaceJetSuccess::luserscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJetSuccess.lUserScore)
  return luserscore_;
}
inline void CMD_S_PlaceJetSuccess::set_luserscore(double value) {
  set_has_luserscore();
  luserscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlaceJetSuccess.lUserScore)
}

// repeated .Common.PlaceJettonScore AllJettonScore = 6;
inline int CMD_S_PlaceJetSuccess::alljettonscore_size() const {
  return alljettonscore_.size();
}
inline void CMD_S_PlaceJetSuccess::clear_alljettonscore() {
  alljettonscore_.Clear();
}
inline const ::Common::PlaceJettonScore& CMD_S_PlaceJetSuccess::alljettonscore(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJetSuccess.AllJettonScore)
  return alljettonscore_.Get(index);
}
inline ::Common::PlaceJettonScore* CMD_S_PlaceJetSuccess::mutable_alljettonscore(int index) {
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_PlaceJetSuccess.AllJettonScore)
  return alljettonscore_.Mutable(index);
}
inline ::Common::PlaceJettonScore* CMD_S_PlaceJetSuccess::add_alljettonscore() {
  // @@protoc_insertion_point(field_add:Common.CMD_S_PlaceJetSuccess.AllJettonScore)
  return alljettonscore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
CMD_S_PlaceJetSuccess::mutable_alljettonscore() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_PlaceJetSuccess.AllJettonScore)
  return &alljettonscore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
CMD_S_PlaceJetSuccess::alljettonscore() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_PlaceJetSuccess.AllJettonScore)
  return alljettonscore_;
}

// repeated .Common.PlaceJettonScore SelfJettonScore = 7;
inline int CMD_S_PlaceJetSuccess::selfjettonscore_size() const {
  return selfjettonscore_.size();
}
inline void CMD_S_PlaceJetSuccess::clear_selfjettonscore() {
  selfjettonscore_.Clear();
}
inline const ::Common::PlaceJettonScore& CMD_S_PlaceJetSuccess::selfjettonscore(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlaceJetSuccess.SelfJettonScore)
  return selfjettonscore_.Get(index);
}
inline ::Common::PlaceJettonScore* CMD_S_PlaceJetSuccess::mutable_selfjettonscore(int index) {
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_PlaceJetSuccess.SelfJettonScore)
  return selfjettonscore_.Mutable(index);
}
inline ::Common::PlaceJettonScore* CMD_S_PlaceJetSuccess::add_selfjettonscore() {
  // @@protoc_insertion_point(field_add:Common.CMD_S_PlaceJetSuccess.SelfJettonScore)
  return selfjettonscore_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >*
CMD_S_PlaceJetSuccess::mutable_selfjettonscore() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_PlaceJetSuccess.SelfJettonScore)
  return &selfjettonscore_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlaceJettonScore >&
CMD_S_PlaceJetSuccess::selfjettonscore() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_PlaceJetSuccess.SelfJettonScore)
  return selfjettonscore_;
}

// -------------------------------------------------------------------

// CMD_S_ApplyBanker

// required int32 wApplyChairID = 1;
inline bool CMD_S_ApplyBanker::has_wapplychairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_ApplyBanker::set_has_wapplychairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_ApplyBanker::clear_has_wapplychairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_ApplyBanker::clear_wapplychairid() {
  wapplychairid_ = 0;
  clear_has_wapplychairid();
}
inline ::google::protobuf::int32 CMD_S_ApplyBanker::wapplychairid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_ApplyBanker.wApplyChairID)
  return wapplychairid_;
}
inline void CMD_S_ApplyBanker::set_wapplychairid(::google::protobuf::int32 value) {
  set_has_wapplychairid();
  wapplychairid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_ApplyBanker.wApplyChairID)
}

// required int32 lApplyMulti = 2;
inline bool CMD_S_ApplyBanker::has_lapplymulti() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_ApplyBanker::set_has_lapplymulti() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_ApplyBanker::clear_has_lapplymulti() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_ApplyBanker::clear_lapplymulti() {
  lapplymulti_ = 0;
  clear_has_lapplymulti();
}
inline ::google::protobuf::int32 CMD_S_ApplyBanker::lapplymulti() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_ApplyBanker.lApplyMulti)
  return lapplymulti_;
}
inline void CMD_S_ApplyBanker::set_lapplymulti(::google::protobuf::int32 value) {
  set_has_lapplymulti();
  lapplymulti_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_ApplyBanker.lApplyMulti)
}

// -------------------------------------------------------------------

// CMD_S_ApplyBankerSuccess

// repeated .Common.PlayerListItem players = 1;
inline int CMD_S_ApplyBankerSuccess::players_size() const {
  return players_.size();
}
inline void CMD_S_ApplyBankerSuccess::clear_players() {
  players_.Clear();
}
inline const ::Common::PlayerListItem& CMD_S_ApplyBankerSuccess::players(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_ApplyBankerSuccess.players)
  return players_.Get(index);
}
inline ::Common::PlayerListItem* CMD_S_ApplyBankerSuccess::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_ApplyBankerSuccess.players)
  return players_.Mutable(index);
}
inline ::Common::PlayerListItem* CMD_S_ApplyBankerSuccess::add_players() {
  // @@protoc_insertion_point(field_add:Common.CMD_S_ApplyBankerSuccess.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >*
CMD_S_ApplyBankerSuccess::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_ApplyBankerSuccess.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >&
CMD_S_ApplyBankerSuccess::players() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_ApplyBankerSuccess.players)
  return players_;
}

// -------------------------------------------------------------------

// CMD_S_ApplyBanker_Fail

// required int32 nErrorCode = 1;
inline bool CMD_S_ApplyBanker_Fail::has_nerrorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_ApplyBanker_Fail::set_has_nerrorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_ApplyBanker_Fail::clear_has_nerrorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_ApplyBanker_Fail::clear_nerrorcode() {
  nerrorcode_ = 0;
  clear_has_nerrorcode();
}
inline ::google::protobuf::int32 CMD_S_ApplyBanker_Fail::nerrorcode() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_ApplyBanker_Fail.nErrorCode)
  return nerrorcode_;
}
inline void CMD_S_ApplyBanker_Fail::set_nerrorcode(::google::protobuf::int32 value) {
  set_has_nerrorcode();
  nerrorcode_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_ApplyBanker_Fail.nErrorCode)
}

// optional string szErrorMessage = 2;
inline bool CMD_S_ApplyBanker_Fail::has_szerrormessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_ApplyBanker_Fail::set_has_szerrormessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_ApplyBanker_Fail::clear_has_szerrormessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_ApplyBanker_Fail::clear_szerrormessage() {
  szerrormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szerrormessage();
}
inline const ::std::string& CMD_S_ApplyBanker_Fail::szerrormessage() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_ApplyBanker_Fail.szErrorMessage)
  return szerrormessage_.GetNoArena();
}
inline void CMD_S_ApplyBanker_Fail::set_szerrormessage(const ::std::string& value) {
  set_has_szerrormessage();
  szerrormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Common.CMD_S_ApplyBanker_Fail.szErrorMessage)
}
#if LANG_CXX11
inline void CMD_S_ApplyBanker_Fail::set_szerrormessage(::std::string&& value) {
  set_has_szerrormessage();
  szerrormessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Common.CMD_S_ApplyBanker_Fail.szErrorMessage)
}
#endif
inline void CMD_S_ApplyBanker_Fail::set_szerrormessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szerrormessage();
  szerrormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Common.CMD_S_ApplyBanker_Fail.szErrorMessage)
}
inline void CMD_S_ApplyBanker_Fail::set_szerrormessage(const char* value, size_t size) {
  set_has_szerrormessage();
  szerrormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Common.CMD_S_ApplyBanker_Fail.szErrorMessage)
}
inline ::std::string* CMD_S_ApplyBanker_Fail::mutable_szerrormessage() {
  set_has_szerrormessage();
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_ApplyBanker_Fail.szErrorMessage)
  return szerrormessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_S_ApplyBanker_Fail::release_szerrormessage() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_ApplyBanker_Fail.szErrorMessage)
  clear_has_szerrormessage();
  return szerrormessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_S_ApplyBanker_Fail::set_allocated_szerrormessage(::std::string* szerrormessage) {
  if (szerrormessage != NULL) {
    set_has_szerrormessage();
  } else {
    clear_has_szerrormessage();
  }
  szerrormessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szerrormessage);
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_ApplyBanker_Fail.szErrorMessage)
}

// -------------------------------------------------------------------

// CMD_S_OpenCard

// required int32 wApplyChairID = 1;
inline bool CMD_S_OpenCard::has_wapplychairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_OpenCard::set_has_wapplychairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_OpenCard::clear_has_wapplychairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_OpenCard::clear_wapplychairid() {
  wapplychairid_ = 0;
  clear_has_wapplychairid();
}
inline ::google::protobuf::int32 CMD_S_OpenCard::wapplychairid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_OpenCard.wApplyChairID)
  return wapplychairid_;
}
inline void CMD_S_OpenCard::set_wapplychairid(::google::protobuf::int32 value) {
  set_has_wapplychairid();
  wapplychairid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_OpenCard.wApplyChairID)
}

// required int32 wApplyuserid = 2;
inline bool CMD_S_OpenCard::has_wapplyuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_OpenCard::set_has_wapplyuserid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_OpenCard::clear_has_wapplyuserid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_OpenCard::clear_wapplyuserid() {
  wapplyuserid_ = 0;
  clear_has_wapplyuserid();
}
inline ::google::protobuf::int32 CMD_S_OpenCard::wapplyuserid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_OpenCard.wApplyuserid)
  return wapplyuserid_;
}
inline void CMD_S_OpenCard::set_wapplyuserid(::google::protobuf::int32 value) {
  set_has_wapplyuserid();
  wapplyuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_OpenCard.wApplyuserid)
}

// -------------------------------------------------------------------

// CMD_S_CancelBanker

// required int32 dwUserID = 1;
inline bool CMD_S_CancelBanker::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_CancelBanker::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_CancelBanker::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_CancelBanker::clear_dwuserid() {
  dwuserid_ = 0;
  clear_has_dwuserid();
}
inline ::google::protobuf::int32 CMD_S_CancelBanker::dwuserid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_CancelBanker.dwUserID)
  return dwuserid_;
}
inline void CMD_S_CancelBanker::set_dwuserid(::google::protobuf::int32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_CancelBanker.dwUserID)
}

// required string szCancelUser = 2;
inline bool CMD_S_CancelBanker::has_szcanceluser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_CancelBanker::set_has_szcanceluser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_CancelBanker::clear_has_szcanceluser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_CancelBanker::clear_szcanceluser() {
  szcanceluser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szcanceluser();
}
inline const ::std::string& CMD_S_CancelBanker::szcanceluser() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_CancelBanker.szCancelUser)
  return szcanceluser_.GetNoArena();
}
inline void CMD_S_CancelBanker::set_szcanceluser(const ::std::string& value) {
  set_has_szcanceluser();
  szcanceluser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Common.CMD_S_CancelBanker.szCancelUser)
}
#if LANG_CXX11
inline void CMD_S_CancelBanker::set_szcanceluser(::std::string&& value) {
  set_has_szcanceluser();
  szcanceluser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Common.CMD_S_CancelBanker.szCancelUser)
}
#endif
inline void CMD_S_CancelBanker::set_szcanceluser(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szcanceluser();
  szcanceluser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Common.CMD_S_CancelBanker.szCancelUser)
}
inline void CMD_S_CancelBanker::set_szcanceluser(const char* value, size_t size) {
  set_has_szcanceluser();
  szcanceluser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Common.CMD_S_CancelBanker.szCancelUser)
}
inline ::std::string* CMD_S_CancelBanker::mutable_szcanceluser() {
  set_has_szcanceluser();
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_CancelBanker.szCancelUser)
  return szcanceluser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_S_CancelBanker::release_szcanceluser() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_CancelBanker.szCancelUser)
  clear_has_szcanceluser();
  return szcanceluser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_S_CancelBanker::set_allocated_szcanceluser(::std::string* szcanceluser) {
  if (szcanceluser != NULL) {
    set_has_szcanceluser();
  } else {
    clear_has_szcanceluser();
  }
  szcanceluser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szcanceluser);
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_CancelBanker.szCancelUser)
}

// -------------------------------------------------------------------

// CMD_S_CancelBanker_Fail

// required int32 nErrorCode = 1;
inline bool CMD_S_CancelBanker_Fail::has_nerrorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_CancelBanker_Fail::set_has_nerrorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_CancelBanker_Fail::clear_has_nerrorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_CancelBanker_Fail::clear_nerrorcode() {
  nerrorcode_ = 0;
  clear_has_nerrorcode();
}
inline ::google::protobuf::int32 CMD_S_CancelBanker_Fail::nerrorcode() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_CancelBanker_Fail.nErrorCode)
  return nerrorcode_;
}
inline void CMD_S_CancelBanker_Fail::set_nerrorcode(::google::protobuf::int32 value) {
  set_has_nerrorcode();
  nerrorcode_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_CancelBanker_Fail.nErrorCode)
}

// optional string szErrorMessage = 2;
inline bool CMD_S_CancelBanker_Fail::has_szerrormessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_CancelBanker_Fail::set_has_szerrormessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_CancelBanker_Fail::clear_has_szerrormessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_CancelBanker_Fail::clear_szerrormessage() {
  szerrormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szerrormessage();
}
inline const ::std::string& CMD_S_CancelBanker_Fail::szerrormessage() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_CancelBanker_Fail.szErrorMessage)
  return szerrormessage_.GetNoArena();
}
inline void CMD_S_CancelBanker_Fail::set_szerrormessage(const ::std::string& value) {
  set_has_szerrormessage();
  szerrormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Common.CMD_S_CancelBanker_Fail.szErrorMessage)
}
#if LANG_CXX11
inline void CMD_S_CancelBanker_Fail::set_szerrormessage(::std::string&& value) {
  set_has_szerrormessage();
  szerrormessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Common.CMD_S_CancelBanker_Fail.szErrorMessage)
}
#endif
inline void CMD_S_CancelBanker_Fail::set_szerrormessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szerrormessage();
  szerrormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Common.CMD_S_CancelBanker_Fail.szErrorMessage)
}
inline void CMD_S_CancelBanker_Fail::set_szerrormessage(const char* value, size_t size) {
  set_has_szerrormessage();
  szerrormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Common.CMD_S_CancelBanker_Fail.szErrorMessage)
}
inline ::std::string* CMD_S_CancelBanker_Fail::mutable_szerrormessage() {
  set_has_szerrormessage();
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_CancelBanker_Fail.szErrorMessage)
  return szerrormessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_S_CancelBanker_Fail::release_szerrormessage() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_CancelBanker_Fail.szErrorMessage)
  clear_has_szerrormessage();
  return szerrormessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_S_CancelBanker_Fail::set_allocated_szerrormessage(::std::string* szerrormessage) {
  if (szerrormessage != NULL) {
    set_has_szerrormessage();
  } else {
    clear_has_szerrormessage();
  }
  szerrormessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szerrormessage);
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_CancelBanker_Fail.szErrorMessage)
}

// -------------------------------------------------------------------

// CMD_S_ChangeBanker

// required int32 wBankerChairID = 1;
inline bool CMD_S_ChangeBanker::has_wbankerchairid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_ChangeBanker::set_has_wbankerchairid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_ChangeBanker::clear_has_wbankerchairid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_ChangeBanker::clear_wbankerchairid() {
  wbankerchairid_ = 0;
  clear_has_wbankerchairid();
}
inline ::google::protobuf::int32 CMD_S_ChangeBanker::wbankerchairid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_ChangeBanker.wBankerChairID)
  return wbankerchairid_;
}
inline void CMD_S_ChangeBanker::set_wbankerchairid(::google::protobuf::int32 value) {
  set_has_wbankerchairid();
  wbankerchairid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_ChangeBanker.wBankerChairID)
}

// required double lBankerScore = 2;
inline bool CMD_S_ChangeBanker::has_lbankerscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_ChangeBanker::set_has_lbankerscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_ChangeBanker::clear_has_lbankerscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_ChangeBanker::clear_lbankerscore() {
  lbankerscore_ = 0;
  clear_has_lbankerscore();
}
inline double CMD_S_ChangeBanker::lbankerscore() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_ChangeBanker.lBankerScore)
  return lbankerscore_;
}
inline void CMD_S_ChangeBanker::set_lbankerscore(double value) {
  set_has_lbankerscore();
  lbankerscore_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_ChangeBanker.lBankerScore)
}

// -------------------------------------------------------------------

// CMD_C_PlayerList

// required int32 nLimitCount = 1;
inline bool CMD_C_PlayerList::has_nlimitcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_C_PlayerList::set_has_nlimitcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_C_PlayerList::clear_has_nlimitcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_C_PlayerList::clear_nlimitcount() {
  nlimitcount_ = 0;
  clear_has_nlimitcount();
}
inline ::google::protobuf::int32 CMD_C_PlayerList::nlimitcount() const {
  // @@protoc_insertion_point(field_get:Common.CMD_C_PlayerList.nLimitCount)
  return nlimitcount_;
}
inline void CMD_C_PlayerList::set_nlimitcount(::google::protobuf::int32 value) {
  set_has_nlimitcount();
  nlimitcount_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_C_PlayerList.nLimitCount)
}

// optional int32 nBeginIndex = 2;
inline bool CMD_C_PlayerList::has_nbeginindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_C_PlayerList::set_has_nbeginindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_C_PlayerList::clear_has_nbeginindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_C_PlayerList::clear_nbeginindex() {
  nbeginindex_ = 0;
  clear_has_nbeginindex();
}
inline ::google::protobuf::int32 CMD_C_PlayerList::nbeginindex() const {
  // @@protoc_insertion_point(field_get:Common.CMD_C_PlayerList.nBeginIndex)
  return nbeginindex_;
}
inline void CMD_C_PlayerList::set_nbeginindex(::google::protobuf::int32 value) {
  set_has_nbeginindex();
  nbeginindex_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_C_PlayerList.nBeginIndex)
}

// -------------------------------------------------------------------

// PlayerListItem

// required int32 dwUserID = 1;
inline bool PlayerListItem::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerListItem::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerListItem::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerListItem::clear_dwuserid() {
  dwuserid_ = 0;
  clear_has_dwuserid();
}
inline ::google::protobuf::int32 PlayerListItem::dwuserid() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.dwUserID)
  return dwuserid_;
}
inline void PlayerListItem::set_dwuserid(::google::protobuf::int32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.dwUserID)
}

// required int32 headerID = 2;
inline bool PlayerListItem::has_headerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerListItem::set_has_headerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerListItem::clear_has_headerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerListItem::clear_headerid() {
  headerid_ = 0;
  clear_has_headerid();
}
inline ::google::protobuf::int32 PlayerListItem::headerid() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.headerID)
  return headerid_;
}
inline void PlayerListItem::set_headerid(::google::protobuf::int32 value) {
  set_has_headerid();
  headerid_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.headerID)
}

// required int32 nVipLevel = 3;
inline bool PlayerListItem::has_nviplevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerListItem::set_has_nviplevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerListItem::clear_has_nviplevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerListItem::clear_nviplevel() {
  nviplevel_ = 0;
  clear_has_nviplevel();
}
inline ::google::protobuf::int32 PlayerListItem::nviplevel() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.nVipLevel)
  return nviplevel_;
}
inline void PlayerListItem::set_nviplevel(::google::protobuf::int32 value) {
  set_has_nviplevel();
  nviplevel_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.nVipLevel)
}

// required string nickName = 4;
inline bool PlayerListItem::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerListItem::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerListItem::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerListItem::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& PlayerListItem::nickname() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.nickName)
  return nickname_.GetNoArena();
}
inline void PlayerListItem::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.nickName)
}
#if LANG_CXX11
inline void PlayerListItem::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Common.PlayerListItem.nickName)
}
#endif
inline void PlayerListItem::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Common.PlayerListItem.nickName)
}
inline void PlayerListItem::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Common.PlayerListItem.nickName)
}
inline ::std::string* PlayerListItem::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:Common.PlayerListItem.nickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerListItem::release_nickname() {
  // @@protoc_insertion_point(field_release:Common.PlayerListItem.nickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerListItem::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:Common.PlayerListItem.nickName)
}

// required double lUserScore = 5;
inline bool PlayerListItem::has_luserscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerListItem::set_has_luserscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerListItem::clear_has_luserscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerListItem::clear_luserscore() {
  luserscore_ = 0;
  clear_has_luserscore();
}
inline double PlayerListItem::luserscore() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.lUserScore)
  return luserscore_;
}
inline void PlayerListItem::set_luserscore(double value) {
  set_has_luserscore();
  luserscore_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.lUserScore)
}

// optional double lTwentyWinScore = 6;
inline bool PlayerListItem::has_ltwentywinscore() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerListItem::set_has_ltwentywinscore() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerListItem::clear_has_ltwentywinscore() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerListItem::clear_ltwentywinscore() {
  ltwentywinscore_ = 0;
  clear_has_ltwentywinscore();
}
inline double PlayerListItem::ltwentywinscore() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.lTwentyWinScore)
  return ltwentywinscore_;
}
inline void PlayerListItem::set_ltwentywinscore(double value) {
  set_has_ltwentywinscore();
  ltwentywinscore_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.lTwentyWinScore)
}

// optional int32 lTwentyWinCount = 7;
inline bool PlayerListItem::has_ltwentywincount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerListItem::set_has_ltwentywincount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerListItem::clear_has_ltwentywincount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerListItem::clear_ltwentywincount() {
  ltwentywincount_ = 0;
  clear_has_ltwentywincount();
}
inline ::google::protobuf::int32 PlayerListItem::ltwentywincount() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.lTwentyWinCount)
  return ltwentywincount_;
}
inline void PlayerListItem::set_ltwentywincount(::google::protobuf::int32 value) {
  set_has_ltwentywincount();
  ltwentywincount_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.lTwentyWinCount)
}

// optional int32 isdivineMath = 8;
inline bool PlayerListItem::has_isdivinemath() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerListItem::set_has_isdivinemath() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerListItem::clear_has_isdivinemath() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerListItem::clear_isdivinemath() {
  isdivinemath_ = 0;
  clear_has_isdivinemath();
}
inline ::google::protobuf::int32 PlayerListItem::isdivinemath() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.isdivineMath)
  return isdivinemath_;
}
inline void PlayerListItem::set_isdivinemath(::google::protobuf::int32 value) {
  set_has_isdivinemath();
  isdivinemath_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.isdivineMath)
}

// optional int32 Index = 9;
inline bool PlayerListItem::has_index() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerListItem::set_has_index() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerListItem::clear_has_index() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerListItem::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 PlayerListItem::index() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.Index)
  return index_;
}
inline void PlayerListItem::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.Index)
}

// optional int32 isBanker = 10;
inline bool PlayerListItem::has_isbanker() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerListItem::set_has_isbanker() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerListItem::clear_has_isbanker() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerListItem::clear_isbanker() {
  isbanker_ = 0;
  clear_has_isbanker();
}
inline ::google::protobuf::int32 PlayerListItem::isbanker() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.isBanker)
  return isbanker_;
}
inline void PlayerListItem::set_isbanker(::google::protobuf::int32 value) {
  set_has_isbanker();
  isbanker_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.isBanker)
}

// required int32 gender = 11;
inline bool PlayerListItem::has_gender() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PlayerListItem::set_has_gender() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PlayerListItem::clear_has_gender() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PlayerListItem::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::google::protobuf::int32 PlayerListItem::gender() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.gender)
  return gender_;
}
inline void PlayerListItem::set_gender(::google::protobuf::int32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.gender)
}

// optional int32 isApplyBanker = 12;
inline bool PlayerListItem::has_isapplybanker() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PlayerListItem::set_has_isapplybanker() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PlayerListItem::clear_has_isapplybanker() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PlayerListItem::clear_isapplybanker() {
  isapplybanker_ = 0;
  clear_has_isapplybanker();
}
inline ::google::protobuf::int32 PlayerListItem::isapplybanker() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.isApplyBanker)
  return isapplybanker_;
}
inline void PlayerListItem::set_isapplybanker(::google::protobuf::int32 value) {
  set_has_isapplybanker();
  isapplybanker_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.isApplyBanker)
}

// optional int32 ApplyBankerMulti = 13;
inline bool PlayerListItem::has_applybankermulti() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PlayerListItem::set_has_applybankermulti() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PlayerListItem::clear_has_applybankermulti() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PlayerListItem::clear_applybankermulti() {
  applybankermulti_ = 0;
  clear_has_applybankermulti();
}
inline ::google::protobuf::int32 PlayerListItem::applybankermulti() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.ApplyBankerMulti)
  return applybankermulti_;
}
inline void PlayerListItem::set_applybankermulti(::google::protobuf::int32 value) {
  set_has_applybankermulti();
  applybankermulti_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.ApplyBankerMulti)
}

// optional int32 lJetton = 14;
inline bool PlayerListItem::has_ljetton() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PlayerListItem::set_has_ljetton() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PlayerListItem::clear_has_ljetton() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PlayerListItem::clear_ljetton() {
  ljetton_ = 0;
  clear_has_ljetton();
}
inline ::google::protobuf::int32 PlayerListItem::ljetton() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.lJetton)
  return ljetton_;
}
inline void PlayerListItem::set_ljetton(::google::protobuf::int32 value) {
  set_has_ljetton();
  ljetton_ = value;
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.lJetton)
}

// optional string szLocation = 15;
inline bool PlayerListItem::has_szlocation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerListItem::set_has_szlocation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerListItem::clear_has_szlocation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerListItem::clear_szlocation() {
  szlocation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szlocation();
}
inline const ::std::string& PlayerListItem::szlocation() const {
  // @@protoc_insertion_point(field_get:Common.PlayerListItem.szLocation)
  return szlocation_.GetNoArena();
}
inline void PlayerListItem::set_szlocation(const ::std::string& value) {
  set_has_szlocation();
  szlocation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Common.PlayerListItem.szLocation)
}
#if LANG_CXX11
inline void PlayerListItem::set_szlocation(::std::string&& value) {
  set_has_szlocation();
  szlocation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Common.PlayerListItem.szLocation)
}
#endif
inline void PlayerListItem::set_szlocation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szlocation();
  szlocation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Common.PlayerListItem.szLocation)
}
inline void PlayerListItem::set_szlocation(const char* value, size_t size) {
  set_has_szlocation();
  szlocation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Common.PlayerListItem.szLocation)
}
inline ::std::string* PlayerListItem::mutable_szlocation() {
  set_has_szlocation();
  // @@protoc_insertion_point(field_mutable:Common.PlayerListItem.szLocation)
  return szlocation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerListItem::release_szlocation() {
  // @@protoc_insertion_point(field_release:Common.PlayerListItem.szLocation)
  clear_has_szlocation();
  return szlocation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerListItem::set_allocated_szlocation(::std::string* szlocation) {
  if (szlocation != NULL) {
    set_has_szlocation();
  } else {
    clear_has_szlocation();
  }
  szlocation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szlocation);
  // @@protoc_insertion_point(field_set_allocated:Common.PlayerListItem.szLocation)
}

// -------------------------------------------------------------------

// CMD_S_User_Enter

// required .Common.GameDeskInfo DeskData = 1;
inline bool CMD_S_User_Enter::has_deskdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_User_Enter::set_has_deskdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_User_Enter::clear_has_deskdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_User_Enter::clear_deskdata() {
  if (deskdata_ != NULL) deskdata_->Clear();
  clear_has_deskdata();
}
inline const ::Common::GameDeskInfo& CMD_S_User_Enter::deskdata() const {
  const ::Common::GameDeskInfo* p = deskdata_;
  // @@protoc_insertion_point(field_get:Common.CMD_S_User_Enter.DeskData)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::GameDeskInfo*>(
      &::Common::_GameDeskInfo_default_instance_);
}
inline ::Common::GameDeskInfo* CMD_S_User_Enter::release_deskdata() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_User_Enter.DeskData)
  clear_has_deskdata();
  ::Common::GameDeskInfo* temp = deskdata_;
  deskdata_ = NULL;
  return temp;
}
inline ::Common::GameDeskInfo* CMD_S_User_Enter::mutable_deskdata() {
  set_has_deskdata();
  if (deskdata_ == NULL) {
    deskdata_ = new ::Common::GameDeskInfo;
  }
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_User_Enter.DeskData)
  return deskdata_;
}
inline void CMD_S_User_Enter::set_allocated_deskdata(::Common::GameDeskInfo* deskdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deskdata_;
  }
  if (deskdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deskdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deskdata, submessage_arena);
    }
    set_has_deskdata();
  } else {
    clear_has_deskdata();
  }
  deskdata_ = deskdata;
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_User_Enter.DeskData)
}

// -------------------------------------------------------------------

// CMD_S_User_Leave

// required .Common.GameDeskInfo DeskData = 1;
inline bool CMD_S_User_Leave::has_deskdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_User_Leave::set_has_deskdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_User_Leave::clear_has_deskdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_User_Leave::clear_deskdata() {
  if (deskdata_ != NULL) deskdata_->Clear();
  clear_has_deskdata();
}
inline const ::Common::GameDeskInfo& CMD_S_User_Leave::deskdata() const {
  const ::Common::GameDeskInfo* p = deskdata_;
  // @@protoc_insertion_point(field_get:Common.CMD_S_User_Leave.DeskData)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::GameDeskInfo*>(
      &::Common::_GameDeskInfo_default_instance_);
}
inline ::Common::GameDeskInfo* CMD_S_User_Leave::release_deskdata() {
  // @@protoc_insertion_point(field_release:Common.CMD_S_User_Leave.DeskData)
  clear_has_deskdata();
  ::Common::GameDeskInfo* temp = deskdata_;
  deskdata_ = NULL;
  return temp;
}
inline ::Common::GameDeskInfo* CMD_S_User_Leave::mutable_deskdata() {
  set_has_deskdata();
  if (deskdata_ == NULL) {
    deskdata_ = new ::Common::GameDeskInfo;
  }
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_User_Leave.DeskData)
  return deskdata_;
}
inline void CMD_S_User_Leave::set_allocated_deskdata(::Common::GameDeskInfo* deskdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deskdata_;
  }
  if (deskdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deskdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deskdata, submessage_arena);
    }
    set_has_deskdata();
  } else {
    clear_has_deskdata();
  }
  deskdata_ = deskdata;
  // @@protoc_insertion_point(field_set_allocated:Common.CMD_S_User_Leave.DeskData)
}

// -------------------------------------------------------------------

// CMD_S_User_Reday

// required int32 dwUserID = 1;
inline bool CMD_S_User_Reday::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_User_Reday::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_User_Reday::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_User_Reday::clear_dwuserid() {
  dwuserid_ = 0;
  clear_has_dwuserid();
}
inline ::google::protobuf::int32 CMD_S_User_Reday::dwuserid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_User_Reday.dwUserID)
  return dwuserid_;
}
inline void CMD_S_User_Reday::set_dwuserid(::google::protobuf::int32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_User_Reday.dwUserID)
}

// required int32 dwChairid = 2;
inline bool CMD_S_User_Reday::has_dwchairid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_User_Reday::set_has_dwchairid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_User_Reday::clear_has_dwchairid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_User_Reday::clear_dwchairid() {
  dwchairid_ = 0;
  clear_has_dwchairid();
}
inline ::google::protobuf::int32 CMD_S_User_Reday::dwchairid() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_User_Reday.dwChairid)
  return dwchairid_;
}
inline void CMD_S_User_Reday::set_dwchairid(::google::protobuf::int32 value) {
  set_has_dwchairid();
  dwchairid_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_User_Reday.dwChairid)
}

// -------------------------------------------------------------------

// CMD_S_PlayerList

// required int32 nEndIndex = 1;
inline bool CMD_S_PlayerList::has_nendindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_S_PlayerList::set_has_nendindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_S_PlayerList::clear_has_nendindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_S_PlayerList::clear_nendindex() {
  nendindex_ = 0;
  clear_has_nendindex();
}
inline ::google::protobuf::int32 CMD_S_PlayerList::nendindex() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlayerList.nEndIndex)
  return nendindex_;
}
inline void CMD_S_PlayerList::set_nendindex(::google::protobuf::int32 value) {
  set_has_nendindex();
  nendindex_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlayerList.nEndIndex)
}

// required int32 nResultCount = 2;
inline bool CMD_S_PlayerList::has_nresultcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_S_PlayerList::set_has_nresultcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_S_PlayerList::clear_has_nresultcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_S_PlayerList::clear_nresultcount() {
  nresultcount_ = 0;
  clear_has_nresultcount();
}
inline ::google::protobuf::int32 CMD_S_PlayerList::nresultcount() const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlayerList.nResultCount)
  return nresultcount_;
}
inline void CMD_S_PlayerList::set_nresultcount(::google::protobuf::int32 value) {
  set_has_nresultcount();
  nresultcount_ = value;
  // @@protoc_insertion_point(field_set:Common.CMD_S_PlayerList.nResultCount)
}

// repeated .Common.PlayerListItem players = 3;
inline int CMD_S_PlayerList::players_size() const {
  return players_.size();
}
inline void CMD_S_PlayerList::clear_players() {
  players_.Clear();
}
inline const ::Common::PlayerListItem& CMD_S_PlayerList::players(int index) const {
  // @@protoc_insertion_point(field_get:Common.CMD_S_PlayerList.players)
  return players_.Get(index);
}
inline ::Common::PlayerListItem* CMD_S_PlayerList::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:Common.CMD_S_PlayerList.players)
  return players_.Mutable(index);
}
inline ::Common::PlayerListItem* CMD_S_PlayerList::add_players() {
  // @@protoc_insertion_point(field_add:Common.CMD_S_PlayerList.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >*
CMD_S_PlayerList::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:Common.CMD_S_PlayerList.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Common::PlayerListItem >&
CMD_S_PlayerList::players() const {
  // @@protoc_insertion_point(field_list:Common.CMD_S_PlayerList.players)
  return players_;
}

// -------------------------------------------------------------------

// CardGroup

// required int32 group_id = 1;
inline bool CardGroup::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardGroup::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardGroup::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardGroup::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
}
inline ::google::protobuf::int32 CardGroup::group_id() const {
  // @@protoc_insertion_point(field_get:Common.CardGroup.group_id)
  return group_id_;
}
inline void CardGroup::set_group_id(::google::protobuf::int32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Common.CardGroup.group_id)
}

// optional int32 CardType = 2;
inline bool CardGroup::has_cardtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardGroup::set_has_cardtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardGroup::clear_has_cardtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardGroup::clear_cardtype() {
  cardtype_ = 0;
  clear_has_cardtype();
}
inline ::google::protobuf::int32 CardGroup::cardtype() const {
  // @@protoc_insertion_point(field_get:Common.CardGroup.CardType)
  return cardtype_;
}
inline void CardGroup::set_cardtype(::google::protobuf::int32 value) {
  set_has_cardtype();
  cardtype_ = value;
  // @@protoc_insertion_point(field_set:Common.CardGroup.CardType)
}

// repeated int32 Cards = 3;
inline int CardGroup::cards_size() const {
  return cards_.size();
}
inline void CardGroup::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 CardGroup::cards(int index) const {
  // @@protoc_insertion_point(field_get:Common.CardGroup.Cards)
  return cards_.Get(index);
}
inline void CardGroup::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Common.CardGroup.Cards)
}
inline void CardGroup::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:Common.CardGroup.Cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CardGroup::cards() const {
  // @@protoc_insertion_point(field_list:Common.CardGroup.Cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CardGroup::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Common.CardGroup.Cards)
  return &cards_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Common

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Common::SUBID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Common::SUBID>() {
  return ::Common::SUBID_descriptor();
}
template <> struct is_proto_enum< ::Common::STATUS_SCENE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Common::STATUS_SCENE>() {
  return ::Common::STATUS_SCENE_descriptor();
}
template <> struct is_proto_enum< ::Common::NIUNIU_CARD_GROUP_TYEP> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Common::NIUNIU_CARD_GROUP_TYEP>() {
  return ::Common::NIUNIU_CARD_GROUP_TYEP_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Common_2eMessage_2eproto__INCLUDED
